{"version":3,"sources":["webpack://@caph1993/numpy-js/./src/casting.ts","webpack://@caph1993/numpy-js/./src/core-basic.ts","webpack://@caph1993/numpy-js/./src/core-indexes.ts","webpack://@caph1993/numpy-js/./src/core-js-interface.ts","webpack://@caph1993/numpy-js/./src/core.ts","webpack://@caph1993/numpy-js/./src/globals.ts","webpack://@caph1993/numpy-js/./src/index.ts","webpack://@caph1993/numpy-js/webpack/bootstrap","webpack://@caph1993/numpy-js/webpack/startup"],"names":["__spreadArray","this","to","from","pack","arguments","length","ar","i","l","Array","prototype","slice","call","concat","globals_1","Object","defineProperty","exports","value","parse_shape","array","asarray","as_number","as_boolean","number_collapse","NDArray","np","GLOBALS","_NDArray","Error","arr","expect","shape","flat","obj","parseFloat","A","fromJS","_simpleIndexes","dtype","list","isArray","casting_1","ravel","reshape","_new","f","size","reduce","a","b","more_shape","_i","map","n","inferredIndex","indexOf","known","filter","dim","acc","val","__parse_sliceRange","shape_shifts","AxesIndex","get","indices","_indices","__slices_to_indices","internalShape","__slices","enumerable","configurable","axisIndexes","idx","_size","apparentShape","isSimple","isConstant","shifts","_","slices","slices_1","iShifts","axis","out","push","lastAxis","tuple","fill","cursor","isFinite","axis_size","_a","start","stop","step","Math","max","min","AxisIndex","spec","type","index","range","nSteps","step_1","start_1","parse_range","parse","ifNull","floor","abs","parse_range_spec","rangeString","numbers","split","s","trim","parseInt","Number","isInteger","indexSpec","span","undefined","index_3","indices_1","forEach","if_value","stop_1","axisIndex","where","_where","buffers","readDir","reversedAfter","NaN","j","remainingAxes","axisWhere","key","refSize","splice","reverse","src_flat_1","copy","assign","__popKwArgs","axesIndex","index_1","composition","first","second","specA","specB","startA","stepA","nStepsA","index_2","_b","startB","stepB","nStepsB","sub","_flat","toJS","Boolean","root","pushToFlat","arr_1","elem","arr_2","recursiveReshape","flatArr","shapeArr","shift","innerShape","outerSize","innerArray","__generator","thisArg","body","y","t","label","sent","trys","ops","g","next","verb","Symbol","iterator","v","op","TypeError","done","pop","e","_this","set","withKwArgs","kwArgs","casting","basic","indexes","modules","template","variables","usage","grammar","apply","core_1","jsInterface","default","transpose","JS","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__"],"mappings":"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","file":"caph1993-numpy-js.js","sourcesContent":["\"use strict\";\n//@ts-check\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse_shape = exports.array = exports.asarray = exports.as_number = exports.as_boolean = exports.number_collapse = exports.NDArray = void 0;\nvar globals_1 = require(\"./globals\");\nvar np = globals_1.GLOBALS.np, _NDArray = globals_1.GLOBALS.NDArray;\nif (!_NDArray)\n    throw new Error(\"Programming error: NDArray not defined\");\nexports.NDArray = _NDArray;\n/**\n * If the array is 0D, it returns it's unique element (number or boolean).\n * The signature is kept as NDArray for type consistency, even though the\n * output is a number or a boolean. This is consistent with the facts that\n * (1) all functions requiring arrays work with numbers as well because they call asarray,\n * and (2) semantically, a constant is an array.\n */\nfunction number_collapse(arr, expect) {\n    if (expect === void 0) { expect = false; }\n    if (!arr.shape.length)\n        return arr.flat[0];\n    if (expect)\n        throw new Error(\"Expected constant. Got array with shape \".concat(arr.shape));\n    return arr;\n}\nexports.number_collapse = number_collapse;\nfunction as_boolean(obj) {\n    if (obj instanceof np.NDArray)\n        obj = number_collapse(obj, true);\n    else if (typeof obj == 'string')\n        throw new Error(\"'string' object can not be interpreted as boolean: \".concat(obj));\n    return !!(0 + obj);\n}\nexports.as_boolean = as_boolean;\nfunction as_number(obj) {\n    if (obj instanceof np.NDArray)\n        obj = number_collapse(obj, true);\n    else if (typeof obj == 'string')\n        throw new Error(\"'string' object can not be interpreted as boolean: \".concat(obj));\n    return parseFloat(obj);\n}\nexports.as_number = as_number;\nfunction asarray(A) {\n    if (A instanceof np.NDArray)\n        return A;\n    else\n        return np.fromJS(A);\n}\nexports.asarray = asarray;\nfunction array(A) {\n    // @ts-ignore\n    if (A instanceof np.NDArray) {\n        var flat = A._simpleIndexes == null ? __spreadArray([], A.flat, true) : A.flat;\n        return new np.NDArray(flat, A.shape, A.dtype);\n    }\n    else\n        return np.fromJS(A);\n}\nexports.array = array;\nfunction parse_shape(list) {\n    if (Array.isArray(list))\n        return list;\n    if (list instanceof np.NDArray) {\n        if (list.shape.length > 1) {\n            throw new Error(\"Expected flat list. Got array with shape \".concat(list.shape));\n        }\n        return list.flat;\n    }\n    if (typeof list == \"number\")\n        return [list];\n    throw new Error(\"Expected list. Got \".concat(list));\n}\nexports.parse_shape = parse_shape;\n","\"use strict\";\n//@ts-check\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ravel = exports.reshape = exports._new = void 0;\nvar casting_1 = require(\"./casting\");\nfunction _new(shape, f, dtype) {\n    shape = (0, casting_1.parse_shape)(shape);\n    var size = shape.reduce(function (a, b) { return a * b; }, 1);\n    var flat = Array.from({ length: size }, f);\n    return new casting_1.NDArray(flat, shape, dtype);\n}\nexports._new = _new;\n;\nfunction reshape(A, shape) {\n    var more_shape = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        more_shape[_i - 2] = arguments[_i];\n    }\n    A = (0, casting_1.asarray)(A);\n    if (!more_shape.length)\n        shape = (0, casting_1.parse_shape)(shape);\n    else\n        shape = __spreadArray([shape], more_shape, true).map(casting_1.as_number);\n    var n = A.size;\n    var inferredIndex = shape.indexOf(-1);\n    if (inferredIndex !== -1) {\n        var known = shape.filter(function (dim) { return dim !== -1; }).reduce(function (acc, val) { return acc * val; }, 1);\n        if (n % known !== 0) {\n            throw new Error(\"Invalid shape. The total number of elements must match the product of the known dimensions.\");\n        }\n        shape[inferredIndex] = n / known;\n    }\n    return new casting_1.NDArray(A.flat, shape, A.dtype);\n}\nexports.reshape = reshape;\n;\nfunction ravel(A) {\n    A = (0, casting_1.asarray)(A);\n    return new casting_1.NDArray(A.flat, [A.size], A.dtype);\n}\nexports.ravel = ravel;\n;\n","\"use strict\";\n//@ts-check\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.__parse_sliceRange = exports.shape_shifts = void 0;\n// /type NDArray = {import(\"./core\")};\nvar casting_1 = require(\"./casting\");\nfunction index(arr, where) {\n    // This can result either in a value, a view, a copy.\n    // The index is simple if there are only ranges, numbers, \":\" and at most one \"...\"\n    // If index is simple, don't call \".indices\" and make view\n    // If index is advanced, get indices and make copy\n    var copy = Object.assign({ copy: false }, arr.__popKwArgs()).copy;\n    if (!(arr instanceof casting_1.NDArray))\n        throw new Error(\"Expected NDArray. Found \".concat(typeof arr, \": \").concat(arr));\n    var axesIndex = AxesIndex.prototype.parse(arr.shape, where);\n    if (axesIndex.isConstant) {\n        var index_1 = axesIndex.indices[0];\n        return arr.flat[index_1];\n    }\n    else if (axesIndex.isSimple) {\n        var composition = __compose_simpleIndexes(arr._simpleIndexes, axesIndex);\n        var out = new casting_1.NDArray(arr._flat, axesIndex.shape, arr.dtype);\n        out._simpleIndexes = composition;\n        if (arr['__warnAssignments'])\n            out['__warnAssignments'] = true;\n        return copy ? out.copy() : out;\n    }\n    else {\n        var src_flat_1 = arr.flat;\n        var flat = axesIndex.indices.map(function (i) { return src_flat_1[i]; });\n        var out = new casting_1.NDArray(flat, axesIndex.shape, arr.dtype);\n        if (!copy)\n            out['__warnAssignments'] = true;\n        return out;\n    }\n}\nvar AxesIndex = /** @class */ (function () {\n    /**\n     * @param {AxisIndex[]} axisIndexes\n     */\n    function AxesIndex(apparentShape, internalShape, axisIndexes) {\n        this.shape = apparentShape;\n        this.internalShape = internalShape;\n        this.axisIndexes = axisIndexes;\n        this._indices = null;\n        this._size = null;\n        this.isSimple = this.axisIndexes.map(function (idx) { return idx.isSimple; }).reduce(function (a, b) { return a && b; }, true);\n        this.isConstant = this.axisIndexes.map(function (idx) { return idx.isConstant; }).reduce(function (a, b) { return a && b; }, true);\n    }\n    Object.defineProperty(AxesIndex.prototype, \"indices\", {\n        get: function () {\n            if (this._indices)\n                return this._indices;\n            var indices = __slices_to_indices(this.internalShape, this.__slices);\n            return this._indices = indices;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AxesIndex.prototype, \"__slices\", {\n        get: function () {\n            return this.axisIndexes.map(function (idx) { return idx.indices; });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AxesIndex.prototype, \"size\", {\n        get: function () {\n            if (this._size)\n                return this._size;\n            return this._size = this.axisIndexes.map(function (idx) { return idx.size; }).reduce(function (a, b) { return a * b; }, 0);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return AxesIndex;\n}());\nfunction __compose_simpleIndexes(first, second) {\n    if (first == null)\n        return second;\n    var axisIndexes = [];\n    // console.log({ first, second })\n    var j = 0;\n    for (var i = 0; i < first.axisIndexes.length; i++) {\n        var specA = first.axisIndexes[i].spec;\n        var specB = second.axisIndexes[j].spec;\n        if (specA.type == \"array\")\n            throw new Error(\"Expected simple index. Found advanced: \".concat(specA.type));\n        if (specB.type == \"array\")\n            throw new Error(\"Expected simple index. Found advanced: \".concat(specB.type));\n        var /**@type {AxisIndexSpec} */ spec = void 0;\n        if (specA.type == \"number\")\n            spec = specA;\n        else {\n            j++;\n            if (specA.type == \":\")\n                spec = specB;\n            else if (specB.type == \":\")\n                spec = specA;\n            else {\n                var _a = specA.range, startA = _a.start, stepA = _a.step, nStepsA = _a.nSteps;\n                if (specB.type == \"number\") {\n                    var index_2 = specB.index;\n                    if (index_2 < 0)\n                        index_2 = nStepsA + index_2;\n                    if (index_2 < 0 || index_2 >= nStepsA)\n                        throw new Error(\"Index \".concat(index_2, \" out of bounds [0..\").concat(nStepsA, \")\"));\n                    index_2 = startA + index_2 * stepA;\n                    spec = { type: \"number\", index: index_2 };\n                }\n                else {\n                    var _b = specB.range, startB = _b.start, stepB = _b.step, nStepsB = _b.nSteps;\n                    var sub = AxisIndex.prototype.parse_range(nStepsA, startB, startB + nStepsB * stepB, stepB);\n                    var step = sub.step * stepA;\n                    var start = startA + sub.start * step;\n                    var nSteps = sub.nSteps;\n                    spec = { type: \"range\", range: { start: start, step: step, nSteps: nSteps } };\n                }\n            }\n        }\n        axisIndexes.push(new AxisIndex(spec));\n    }\n    if (j < second.axisIndexes.length)\n        throw new Error(\"Index too long. Expected \".concat(j, \" axes. Found \").concat(second.axisIndexes.length));\n    var apparentShape = second.shape;\n    var internalShape = first.internalShape;\n    return new AxesIndex(apparentShape, internalShape, axisIndexes);\n}\nfunction shape_shifts(shape) {\n    // increasing one by one on a given axis is increasing by shifts[axis] in flat representation\n    var shifts = Array.from({ length: shape.length }, function (_) { return 0; });\n    shifts[shape.length - 1] = 1;\n    for (var i = shape.length - 2; i >= 0; i--)\n        shifts[i] = shifts[i + 1] * shape[i + 1];\n    return shifts;\n}\nexports.shape_shifts = shape_shifts;\n/**\n * Computes the indices wr to shape of the cartesian products of the slices.\n * We have shape.length==slices.length, and the elements in slices[axis] are\n * integers between 0 and shape[axis]-1\n * @param {number[]} shape\n * @param {number[][]} slices\n * @returns {number[]}\n */\nfunction __slices_to_indices(shape, slices) {\n    for (var _i = 0, slices_1 = slices; _i < slices_1.length; _i++) {\n        var slice = slices_1[_i];\n        if (slice.length == 0)\n            return [];\n    }\n    var shifts = shape_shifts(shape);\n    var iShifts = slices.map(function (indices, axis) {\n        // out[i] = How much does the cursor increase if we change from [...,indices[i],...] to [...,indices[(i+1)%n],...]\n        var out = [], n = indices.length;\n        for (var i = 0; i < n - 1; i++)\n            out.push(shifts[axis] * (indices[i + 1] - indices[i]));\n        out[n - 1] = shifts[axis] * (indices[0] - indices[n - 1]);\n        return out;\n    });\n    var indices = [];\n    var lastAxis = shape.length - 1;\n    var tuple = new Array(shape.length).fill(0);\n    var cursor = slices.map(function (l, i) { return l[tuple[i]] * shifts[i]; }).reduce(function (a, b) { return a + b; }, 0);\n    while (true) {\n        if (!isFinite(cursor))\n            throw new Error(\"Programming error\");\n        indices.push(cursor);\n        var axis = lastAxis;\n        while (axis >= 0) {\n            cursor += iShifts[axis][tuple[axis]++];\n            if (tuple[axis] < iShifts[axis].length)\n                break;\n            tuple[axis--] = 0; // Overflow\n        }\n        ;\n        if (axis < 0)\n            break;\n    }\n    return indices;\n}\n// =========================================\n//     Slicing\n// =========================================\nfunction __parse_sliceRange(axis_size, _a) {\n    var start = _a.start, stop = _a.stop, step = _a.step;\n    if (start == null)\n        start = 0;\n    else if (start < 0)\n        start = axis_size + start;\n    if (stop == null)\n        stop = axis_size;\n    else if (stop < 0)\n        stop = axis_size + stop;\n    if (step == null)\n        step = 1;\n    else if (step == 0)\n        throw new Error(\"Slice range with step size of zero\");\n    if (!isFinite(start) || !isFinite(stop) || !isFinite(step))\n        throw new Error(\"Invalid slice \".concat([start, stop, step], \". Axis size \").concat(axis_size));\n    var indices = [];\n    if (step > 0) {\n        start = Math.max(start, 0);\n        stop = Math.min(stop, axis_size);\n        for (var i = start; i < stop; i += step)\n            indices.push(i);\n    }\n    else {\n        stop = Math.max(stop, 0);\n        start = Math.min(start, axis_size);\n        for (var i = start; i > stop; i += step)\n            indices.push(i);\n    }\n    return indices;\n}\nexports.__parse_sliceRange = __parse_sliceRange;\nvar AxisIndex = /** @class */ (function () {\n    /**\n     * Invariant: Immutable\n     * @param {AxisIndexSpec} spec\n     */\n    function AxisIndex(spec) {\n        this.spec = spec;\n        this._indices = null;\n        this.isSimple = (this.spec.type != \"array\");\n        this.isConstant = (this.spec.type == \"number\");\n    }\n    Object.defineProperty(AxisIndex.prototype, \"indices\", {\n        get: function () {\n            if (this._indices)\n                return this._indices;\n            var indices;\n            if (this.spec.type == ':')\n                indices = Array.from({ length: this.spec.size }, function (_, i) { return i; });\n            else if (this.spec.type === \"number\")\n                indices = [this.spec.index];\n            else if (this.spec.type === \"array\")\n                indices = this.spec.indices;\n            else if (this.spec.type == \"range\") {\n                var _a = this.spec.range, nSteps = _a.nSteps, step_1 = _a.step, start_1 = _a.start;\n                indices = Array.from({ length: nSteps }, function (_, i) { return start_1 + i * step_1; });\n            }\n            else\n                throw new Error(\"Unknown spec type \".concat(this.spec['type']));\n            return this._indices = indices;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AxisIndex.prototype, \"size\", {\n        get: function () {\n            if (this.spec.type == ':')\n                return this.spec.size;\n            else if (this.spec.type === \"number\")\n                return 1;\n            else if (this.spec.type === \"array\")\n                return this.spec.indices.length;\n            else if (this.spec.type == \"range\")\n                return this.spec.range.nSteps;\n            else\n                throw new Error(\"Unknown spec type \".concat(this.spec['type']));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return AxisIndex;\n}());\nAxisIndex.prototype.parse_range = function (size, start, stop, step) {\n    if (start === void 0) { start = null; }\n    if (stop === void 0) { stop = null; }\n    if (step === void 0) { step = null; }\n    if (step == null)\n        step = 1;\n    else if (step == 0)\n        throw new Error(\"Index specification error. Step must be different from zero.\");\n    /**\n     *  @param {number|null} i @param {number} ifNull @param {number} min @param {number} max */\n    var parse = function (i, ifNull, min, max) {\n        if (i == null)\n            return ifNull;\n        if (i < 0)\n            i = Math.max(0, size - i);\n        return Math.min(max, Math.max(min, i));\n    };\n    var nSteps;\n    if (step > 0)\n        start = parse(start, 0, 0, size - 1), stop = parse(stop, size, 0, size);\n    else\n        start = parse(start, size - 1, 0, size - 1), stop = parse(stop, size - 1, -1, size - 1);\n    stop = Math.max(stop, start);\n    nSteps = Math.floor(Math.abs(stop - start) / step);\n    return { start: start, step: step, nSteps: nSteps };\n};\n/**\n *\n * @param {string} rangeString\n * @returns {{start:(number|null), stop:(number|null), step:(number|null)}}\n */\nAxisIndex.prototype.parse_range_spec = function (rangeString) {\n    var numbers = rangeString.split(':').map(function (s) {\n        s = s.trim();\n        if (s == \"\")\n            return null;\n        var n = parseInt(s);\n        if (!Number.isInteger(n))\n            throw new Error(\"Wrong input. Slice index unrecognized: \".concat(s));\n        return n;\n    });\n    if (numbers.length == 0)\n        throw new Error('Unexpected empty index. Expected colons.');\n    if (numbers.length > 3)\n        throw new Error(\"Too many colons in index \".concat(rangeString));\n    var _a = __spreadArray(__spreadArray([], numbers, true), [null, null, null], false), start = _a[0], stop = _a[1], step = _a[2], _ = _a.slice(3);\n    return { start: start, stop: stop, step: step };\n};\n/**\n * We are reading `indexSpec` and `shape` in parallel, in the reading direction readDir.\n * With respect to `shape` we are at the given `axis`.\n * With respect to `indexSpec`, we found `indexSpec`, which we should process.\n * @param {indexSpec|undefined} indexSpec\n */\nAxisIndex.prototype.parse = function (indexSpec, size) {\n    /**\n     *\n     * span (virtual shape) matches shape unless there are boolean masks spanning\n     * over several axes/dimensions.\n     * For example, in `np.ones((2,3,4,5))[:, np.arange(12).reshape((3,4))>5, 1]`,\n     * the boolean mask is spanning over axes 1 and 2. In this case, the output should\n     * merge these axes, resulting in an a vShape of (2, 12, 5).\n     * The boolean mask is then converted to indices in the flattened merged axis.\n     */\n    /**@type {AxisIndexSpec} */\n    var spec;\n    var span = 1;\n    if (indexSpec == ':' || indexSpec === undefined) {\n        spec = { type: ':', size: size };\n    }\n    else if (typeof indexSpec === \"number\") {\n        var index_3 = indexSpec;\n        if (index_3 < 0)\n            index_3 = size + index_3;\n        if (index_3 < 0 || index_3 >= size)\n            throw new Error(\"Index \".concat(index_3, \" out of bounds [0..\").concat(size, \")\"));\n        spec = { type: 'number', index: index_3 };\n    }\n    else if (indexSpec instanceof casting_1.NDArray || Array.isArray(indexSpec)) {\n        var arr = (0, casting_1.asarray)(indexSpec);\n        var indices_1;\n        if (arr.dtype == Number) {\n            // Array of indices\n            if (arr.shape.length > 1)\n                throw new Error(\"Expected 1D array of indices or nD array of booleans. \" +\n                    \"Found shape=\".concat(arr.shape, \" and dtype=\").concat(arr.dtype));\n            indices_1 = arr.flat;\n        }\n        else {\n            // Boolean mask\n            indices_1 = [];\n            arr.flat.forEach(function (if_value, i) { return if_value && indices_1.push(i); });\n            // Next lines: the boolean mask spans over more than 1 axis\n            span = Math.max(1, arr.shape.length);\n            // Multiply the (possibly inverted) interval\n        }\n        spec = { type: 'array', indices: indices_1 };\n    }\n    else if (typeof indexSpec == \"string\") {\n        var _a = AxisIndex.prototype.parse_range_spec(indexSpec), start = _a.start, stop_1 = _a.stop, step = _a.step;\n        var range = AxisIndex.prototype.parse_range(size, start, stop_1, step);\n        if (range.start == 0 && range.nSteps == size && range.step == 1) {\n            // Small optimization: all of these are just \":\": [\"::\",\"0::1\", \":axisSize:\", etc.]\n            spec = { type: ':', size: size };\n        }\n        else {\n            spec = { type: 'range', range: range };\n        }\n    }\n    else\n        throw new Error(\"Unknown index type. Found \".concat(typeof indexSpec, \": \").concat(indexSpec));\n    var axisIndex = new AxisIndex(spec);\n    return { axisIndex: axisIndex, span: span };\n};\n/**\n * @param {Where} where\n * @returns {AxesIndex}\n */\nAxesIndex.prototype.parse = function (shape, where) {\n    /**@type {Array<GeneralIndexSpec|undefined>}*/\n    var _where = where == null ? [] : where;\n    var buffers = {\n        axisIndexes: /**@type {AxisIndex[]}*/ ([]),\n        apparentShape: /**@type {number[]}*/ ([]),\n        internalShape: /**@type {number[]}*/ ([]),\n    };\n    var readDir = 1;\n    var reversedAfter = { axisIndexes: NaN, apparentShape: NaN, internalShape: NaN };\n    var axis = 0, j = 0, remainingAxes = shape.length;\n    while (remainingAxes > 0) {\n        var axisWhere = _where[j];\n        _where[j] = undefined; // For ellipsis to avoid reading twice in opposite reading directions\n        j += readDir;\n        if (axisWhere == \"None\" || axisWhere === null) {\n            buffers.apparentShape.push(1);\n            continue;\n        }\n        else if (axisWhere == \"...\") {\n            if (readDir == -1)\n                throw new Error(\"Index can only have a single ellipsis ('...')\");\n            readDir = -1;\n            for (var key in reversedAfter)\n                reversedAfter[key] = buffers[key].length;\n            j = _where.length - 1;\n            axis = shape.length - 1;\n            continue;\n        }\n        var _a = AxisIndex.prototype.parse(axisWhere, shape[axis]), axisIndex = _a.axisIndex, span = _a.span;\n        // Advance the axis cursor span axes in readDir and compute the total size of consumed axes\n        remainingAxes -= span;\n        var refSize = 1;\n        for (var i = 0; i < span; i++) {\n            if (axis < 0 || axis >= shape.length)\n                throw new Error(\"Index spans over more dimensions than available\");\n            refSize *= shape[axis];\n            axis += readDir;\n        }\n        buffers.axisIndexes.push(axisIndex);\n        if (axisIndex.spec.type != \"number\")\n            buffers.apparentShape.push(axisIndex.size);\n        buffers.internalShape.push(refSize);\n    }\n    if (readDir == -1) { // reverse the right to left elements\n        for (var key in buffers)\n            buffers[key].splice(0, reversedAfter[key]).concat(buffers[key].reverse());\n    }\n    var axesIndex = new AxesIndex(buffers.apparentShape, buffers.internalShape, buffers.axisIndexes);\n    return axesIndex;\n};\nexports.default = {\n    index: index,\n    AxesIndex: AxesIndex,\n    AxisIndex: AxisIndex,\n    __slices_to_indices: __slices_to_indices,\n};\n","\"use strict\";\n//@ts-check\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toJS = exports.fromJS = void 0;\nvar casting_1 = require(\"./casting\");\nfunction fromJS(arr) {\n    if (arr instanceof casting_1.NDArray)\n        return arr;\n    if (typeof arr === \"number\")\n        return new casting_1.NDArray([arr], [], Number);\n    if (typeof arr === \"boolean\")\n        return new casting_1.NDArray([arr ? 1 : 0], [], Boolean);\n    if (arr === casting_1.NDArray.prototype)\n        throw new Error(\"Programming error\");\n    if (!Array.isArray(arr))\n        throw new Error(\"Can't parse input of type \".concat(typeof arr, \": \").concat(arr));\n    var shape = [];\n    var root = arr;\n    while (Array.isArray(root)) {\n        shape.push(root.length);\n        root = root[0];\n        if (shape.length > 256)\n            throw new Error(\"Circular reference or excessive array depth\");\n    }\n    var dtype = typeof root === \"boolean\" ? Boolean : Number;\n    var flat = [];\n    var pushToFlat = function (arr, axis) {\n        // Check consistency\n        if (axis == shape.length - 1) {\n            for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n                var elem = arr_1[_i];\n                if (Array.isArray(elem))\n                    throw new Error(\"Inconsistent shape\");\n                flat.push(elem);\n                // Update dtype\n            }\n        }\n        else {\n            if (!Array.isArray(arr))\n                throw new Error(\"Inconsistent shape\");\n            for (var _a = 0, arr_2 = arr; _a < arr_2.length; _a++) {\n                var sub = arr_2[_a];\n                if (sub.length != shape[axis + 1])\n                    throw new Error(\"Inconsistent shape: found sibling arrays of lengths \".concat(sub.length, \" and \").concat(shape[axis + 1]));\n                pushToFlat(sub, axis + 1);\n            }\n        }\n    };\n    pushToFlat(arr, 0);\n    return new casting_1.NDArray(flat, shape, dtype);\n}\nexports.fromJS = fromJS;\nfunction toJS(arr) {\n    if (this instanceof casting_1.NDArray)\n        return toJS;\n    if (arr === null || typeof arr == \"number\" || typeof arr == \"boolean\")\n        return arr;\n    if (Array.isArray(arr))\n        return arr.map(toJS);\n    if (!(arr instanceof casting_1.NDArray))\n        throw new Error(\"Expected MyArray. Got \".concat(typeof arr, \": \").concat(arr));\n    arr = (0, casting_1.number_collapse)(arr);\n    if (!(arr instanceof casting_1.NDArray))\n        return arr;\n    // let out = [], top;\n    // let q = /**@type {[MyArray, any][]}*/([[arr, out]])\n    // while (top = q.pop()) {\n    //   let [arr, out] = top;\n    //   if (arr.shape.length <= 1) {\n    //     out.push(...arr.flat);\n    //   } else {\n    //     for (let i = 0; i < arr.shape[0]; i++) {\n    //       let l = []\n    //       out.push(l);\n    //       q.push([arr.index(i), l]);\n    //     }\n    //   }\n    // }\n    // return out;\n    function recursiveReshape(flatArr, shapeArr) {\n        if (shapeArr.length === 0) {\n            return flatArr.shift();\n        }\n        var innerShape = shapeArr.slice(1);\n        var outerSize = shapeArr[0];\n        var innerArray = [];\n        for (var i = 0; i < outerSize; i++) {\n            innerArray.push(recursiveReshape(flatArr, innerShape));\n        }\n        return innerArray;\n    }\n    var out = recursiveReshape(__spreadArray([], arr.flat, true), arr.shape);\n    return out;\n}\nexports.toJS = toJS;\n","\"use strict\";\n//@ts-check\n/** @typedef {NumberConstructor|BooleanConstructor} DType */\n/** @typedef {NDArray|number|boolean} ArrayOrConstant */\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar globals_1 = require(\"./globals\");\nvar np = globals_1.GLOBALS.np;\nvar NDArray = /** @class */ (function () {\n    function NDArray(flat, shape, dtype) {\n        if (dtype === void 0) { dtype = Number; }\n        this.shape = shape; // invariant: immutable\n        this._flat = flat;\n        this.dtype = dtype;\n        this._simpleIndexes = null;\n    }\n    Object.defineProperty(NDArray.prototype, \"size\", {\n        get: function () {\n            return this._simpleIndexes == null ? this._flat.length : this._simpleIndexes.size;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NDArray.prototype, \"flat\", {\n        get: function () {\n            var _this = this;\n            if (this._simpleIndexes == null)\n                return this._flat;\n            var indices = this._simpleIndexes.indices;\n            return indices.map(function (i) { return _this._flat[i]; });\n        },\n        set: function (list) {\n            if (list.length != this.size)\n                throw new Error(\"Length mismatch. Can't write \".concat(list.length, \" values into \").concat(this.size, \" available positions.\"));\n            var n = this.size;\n            if (this._simpleIndexes == null) {\n                for (var i = 0; i < n; i++)\n                    this._flat[i] = list[i];\n            }\n            else {\n                var indices = this._simpleIndexes.indices;\n                for (var i = 0; i < n; i++)\n                    this._flat[indices[i]] = list[i];\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NDArray.prototype, \"T\", {\n        get: function () {\n            throw new Error(\"NOT IMPLEMENTED\");\n            //return np.transpose(this);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    NDArray.prototype.__popKwArgs = function () {\n        var out = this['__kwArgs'];\n        if (out === undefined)\n            return {};\n        delete this['__kwArgs'];\n        return out;\n    };\n    /** @param {Object<string, any>} kwArgs */\n    NDArray.prototype.withKwArgs = function (kwArgs) {\n        this['__kwArgs'] = kwArgs;\n        return this;\n    };\n    NDArray.prototype[Symbol.iterator] = function () {\n        return __generator(this, function (_a) {\n            throw new Error(\"NOT IMPLEMENTED\");\n        });\n    };\n    Object.defineProperty(NDArray.prototype, \"length\", {\n        get: function () {\n            return this.shape[0] || 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return NDArray;\n}());\nglobals_1.GLOBALS.NDArray = NDArray;\nvar casting = require(\"./casting\");\nvar basic = require(\"./core-basic\");\nvar indexes = require(\"./core-indexes\");\n// import * as elementwise from './core-elementwise';\n// import * as print from './core-print';\n// import * as reduce from './core-reduce';\n// import * as operators from './core-operators';\n// import * as transform from './core-transform';\n// import * as jsInterface from './core-js-interface';\nvar modules = {\n    casting: casting,\n    basic: basic,\n    indexes: indexes,\n    // elementwise,\n    // print,\n    // reduce,\n    // operators,\n    // transform,\n    // jsInterface,\n};\n//@ts-ignore\nNDArray.prototype.modules = modules; // NEEDED before loading the modules!\n// // ==============================\n// //    Basic methods\n// // ==============================\n// const basic = modules.basic;\n// NDArray.prototype.reshape = function (shape, ...more_shape) {\n//   return basic.reshape(this, shape, ...more_shape);\n// };\n// NDArray.prototype.ravel = function () {\n//   return basic.ravel(this);\n// };\n// NDArray.prototype.copy = function () {\n//   return basic.copy(this);\n// };\n// // ==============================\n// //    Indexing\n// // ==============================\n// /**\n//  * @param {import(\"./core-indexes\").GeneralIndexSpec[]} where\n//  */\n// NDArray.prototype.index = function (...where: import(\"./core-indexes\").GeneralIndexSpec[]) {\n//   return modules.indexes.index(this, where);\n// }\n// // ==============================\n// //    Printing\n// // ==============================\n// NDArray.prototype.toString = function () {\n//   return modules.print.humanReadable(this);\n// }\n// // ==============================\n// //    Reduce\n// // ==============================\n// function reduceDecorator(func) {\n//   /** @param {import(\"./core-reduce\").AxisArg} axis  @param {boolean} keepdims */\n//   return function (axis: import(\"./core-reduce\").AxisArg = null, keepdims: boolean = false) {\n//     ({ axis, keepdims } = Object.assign({ axis, keepdims }, this.__popKwArgs()));\n//     return func(this, axis, keepdims);\n//   }\n// }\n// NDArray.prototype.sum = reduceDecorator(modules.reduce.reducers.sum);\n// NDArray.prototype.product = reduceDecorator(modules.reduce.reducers.product);\n// NDArray.prototype.any = reduceDecorator(modules.reduce.reducers.any);\n// NDArray.prototype.all = reduceDecorator(modules.reduce.reducers.all);\n// NDArray.prototype.max = reduceDecorator(modules.reduce.reducers.max);\n// NDArray.prototype.min = reduceDecorator(modules.reduce.reducers.min);\n// NDArray.prototype.argmax = reduceDecorator(modules.reduce.reducers.argmax);\n// NDArray.prototype.argmin = reduceDecorator(modules.reduce.reducers.argmin);\n// NDArray.prototype.mean = reduceDecorator(modules.reduce.reducers.mean);\n// NDArray.prototype.var = reduceDecorator(modules.reduce.reducers.var);\n// NDArray.prototype.std = reduceDecorator(modules.reduce.reducers.std);\n// // ==============================\n// //       Operators: Binary operations, assignment operations and unary boolean_not\n// // ==============================\n// NDArray.prototype._binary_operation = modules.operators.binary_operation;\n// /**\n//  * @param {import(\"./core-operators\").BinaryOperator} func\n//  * @returns {import(\"./core-operators\").SelfBinaryOperator}\n//  */\n// function binaryOpDecorator(func: import(\"./core-operators\").BinaryOperator): import(\"./core-operators\").SelfBinaryOperator {\n//   return function (other, out = null) {\n//     ({ out } = Object.assign({ out }, this.__popKwArgs()));\n//     return func(this, other, out);\n//   }\n// }\n// NDArray.prototype.add = binaryOpDecorator(modules.operators.op_binary[\"+\"]);\n// NDArray.prototype.subtract = binaryOpDecorator(modules.operators.op_binary[\"-\"]);\n// NDArray.prototype.multiply = binaryOpDecorator(modules.operators.op_binary[\"*\"]);\n// NDArray.prototype.divide = binaryOpDecorator(modules.operators.op_binary[\"/\"]);\n// NDArray.prototype.mod = binaryOpDecorator(modules.operators.op_binary[\"%\"]);\n// NDArray.prototype.divide_int = binaryOpDecorator(modules.operators.op_binary[\"//\"]);\n// NDArray.prototype.pow = binaryOpDecorator(modules.operators.op_binary[\"**\"]);\n// NDArray.prototype.maximum = binaryOpDecorator(modules.operators.op_binary[\"↑\"]);\n// NDArray.prototype.minimum = binaryOpDecorator(modules.operators.op_binary[\"↓\"]);\n// NDArray.prototype.bitwise_or = binaryOpDecorator(modules.operators.op_binary[\"|\"]);\n// NDArray.prototype.bitwise_and = binaryOpDecorator(modules.operators.op_binary[\"&\"]);\n// NDArray.prototype.bitwise_xor = binaryOpDecorator(modules.operators.op_binary[\"^\"]);\n// NDArray.prototype.bitwise_shift_left = binaryOpDecorator(modules.operators.op_binary[\"<<\"]);\n// NDArray.prototype.bitwise_shift_right = binaryOpDecorator(modules.operators.op_binary[\">>\"]);\n// NDArray.prototype.logical_or = binaryOpDecorator(modules.operators.op_binary[\"or\"]);\n// NDArray.prototype.logical_and = binaryOpDecorator(modules.operators.op_binary[\"and\"]);\n// NDArray.prototype.logical_xor = binaryOpDecorator(modules.operators.op_binary[\"xor\"]);\n// NDArray.prototype.greater = binaryOpDecorator(modules.operators.op_binary[\">\"]);\n// NDArray.prototype.less = binaryOpDecorator(modules.operators.op_binary[\"<\"]);\n// NDArray.prototype.greater_equal = binaryOpDecorator(modules.operators.op_binary[\">=\"]);\n// NDArray.prototype.less_equal = binaryOpDecorator(modules.operators.op_binary[\"<=\"]);\n// NDArray.prototype.equal = binaryOpDecorator(modules.operators.op_binary[\"==\"]);\n// NDArray.prototype.not_equal = binaryOpDecorator(modules.operators.op_binary[\"!=\"]);\n// /**\n//  * @param {import(\"./core-operators\").UnaryOperator} func\n//  * @returns {import(\"./core-operators\").SelfUnaryOperator}\n//  */\n// function unaryOpDecorator(func: import(\"./core-operators\").UnaryOperator): import(\"./core-operators\").SelfUnaryOperator {\n//   return function (out = null) {\n//     ({ out } = Object.assign({ out }, this.__popKwArgs()));\n//     return func(this, out);\n//   }\n// }\n// // Unary operations: only boolean_not. Positive is useless and negative is almost useless\n// NDArray.prototype.bitwise_not = unaryOpDecorator(modules.operators.op_unary[\"~\"]);\n// NDArray.prototype.logical_not = unaryOpDecorator(modules.operators.op_unary[\"not\"]);\n// NDArray.prototype.isclose = modules.operators.isclose;\n// NDArray.prototype.allclose = modules.operators.allclose;\n// /**\n//  * @param {import(\"./core-operators\").AssignmentOperator} func\n//  * @returns {import(\"./core-operators\").SelfAssignmentOperator}\n//  */\n// function assignOpDecorator(func: import(\"./core-operators\").AssignmentOperator): import(\"./core-operators\").SelfAssignmentOperator {\n//   //@ts-ignore\n//   return function (...args) { return func(this, ...args); }\n// }\n// NDArray.prototype.assign = assignOpDecorator(modules.operators.op_assign[\"=\"]);\n// NDArray.prototype.add_assign = assignOpDecorator(modules.operators.op_assign[\"+=\"]);\n// NDArray.prototype.subtract_assign = assignOpDecorator(modules.operators.op_assign[\"-=\"]);\n// NDArray.prototype.multiply_assign = assignOpDecorator(modules.operators.op_assign[\"*=\"]);\n// NDArray.prototype.divide_assign = assignOpDecorator(modules.operators.op_assign[\"/=\"]);\n// NDArray.prototype.mod_assign = assignOpDecorator(modules.operators.op_assign[\"%=\"]);\n// NDArray.prototype.divide_int_assign = assignOpDecorator(modules.operators.op_assign[\"//=\"]);\n// NDArray.prototype.pow_assign = assignOpDecorator(modules.operators.op_assign[\"**=\"]);\n// NDArray.prototype.maximum_assign = assignOpDecorator(modules.operators.op_assign[\"↑=\"]);\n// NDArray.prototype.minimum_assign = assignOpDecorator(modules.operators.op_assign[\"↓=\"]);\n// NDArray.prototype.bitwise_or_assign = assignOpDecorator(modules.operators.op_assign[\"|=\"]);\n// NDArray.prototype.bitwise_and_assign = assignOpDecorator(modules.operators.op_assign[\"&=\"]);\n// NDArray.prototype.bitwise_shift_left_assign = assignOpDecorator(modules.operators.op_assign[\"<<=\"]);\n// NDArray.prototype.bitwise_shift_right_assign = assignOpDecorator(modules.operators.op_assign[\">>=\"]);\n// NDArray.prototype.logical_or_assign = assignOpDecorator(modules.operators.op_assign[\"or=\"]);\n// NDArray.prototype.logical_and_assign = assignOpDecorator(modules.operators.op_assign[\"and=\"]);\n// // ==============================\n// //    array instantiation and reshaping\n// // ==============================\n// NDArray.prototype.JS = function () {\n//   return modules.jsInterface.toJS(this);\n// }\n// NDArray.prototype.fromJS = function (A) {\n//   return modules.jsInterface.fromJS(A);\n// }\n// // ==============================\n// //    elementwise methods\n// // ==============================\n// NDArray.prototype.round = function (decimals = 0) {\n//   ({ decimals } = Object.assign({ decimals }, this.__popKwArgs()));\n//   return modules.elementwise.round(this, decimals);\n// };\n// // ==============================\n// //    transform methods\n// // ==============================\n// /** @param {null|number[]} axes */\n// NDArray.prototype.transpose = function (axes: null | number[] = null) {\n//   ({ axes } = Object.assign({ axes }, this.__popKwArgs()));\n//   return modules.transform.transpose(this, axes);\n// };\n// NDArray.prototype.sort = function (axis = -1) {\n//   ({ axis } = Object.assign({ axis }, this.__popKwArgs()));\n//   modules.transform.sort(this, axis);\n//   return null;\n// };\n// //=============================\n// // /** @typedef {'+'|'-'|'*'} BinaryOperatorSymbol */\n// // /** @typedef {'~'|'!'} UnaryOperatorSymbol */\n// // /** @typedef {'='|'+='|'*='} AssignmentOperatorSymbol */\n// // /**\n// //  * @callback BinaryOp\n// //  * @param  {BinaryOperatorSymbol} symbol\n// //  * @param  {NDArray} other\n// //  * @param  {NDArray?} out\n// //  * @returns {NDArray}\n// //  */\n// // /**\n// //  * @callback AssignmentOp\n// //  * @param  {AssignmentOperatorSymbol} symbol\n// //  * @param  {NDArray} other\n// //  * @param  {...import(\"./core-indexes\").GeneralIndexSpec} indexSpec\n// //  * @returns {NDArray}\n// //  */\n// // /**\n// //  * @callback UnaryOp\n// //  * @param  {UnaryOperatorSymbol} symbol\n// //  * @returns {NDArray}\n// //  */\n// // // /**@type {BinaryOp|AssignmentOp}*/\n// // /**\n// //  * @overload\n// //  * @param  {BinaryOperatorSymbol} symbol\n// //  * @param  {NDArray} other\n// //  * @param  {NDArray?} out\n// //  * @returns {NDArray}\n// // */\n// // /**\n// //  * @overload\n// //  * @param  {AssignmentOperatorSymbol} symbol\n// //  * @param  {NDArray} other\n// //  * @param  {...import(\"./core-indexes\").GeneralIndexSpec} indexSpec\n// //  * @returns {NDArray}\n// // */\n// // /**\n// //  * @param  {UnaryOperatorSymbol} symbol\n// //  * @returns {NDArray}\n// // */\n// // NDArray.prototype.op = function (...arguments) {\n// //   return this;\n// // }\n// /** @typedef {\"+\" | \"-\" | \"*\" | \"/\" | \"%\" | \"//\" | \"**\" | \"<\" | \">\" | \">=\" | \"<=\" | \"==\" | \"!=\" | \" | \" | \"&\" | \"^\" | \"<<\" | \">>\" | \"or\" | \"and\" | \"xor\" | \"max\" | \"min\"} BinaryOpSymbol */\n// /** @typedef {\"=\" | \"+=\" | \"-=\" | \"*=\" | \"/=\" | \"%=\" | \"//=\" | \"**=\" | \"|=\" | \"&=\" | \"^=\" | \"<<=\" | \">>=\" | \"max=\" | \"min=\" | \"or=\" | \"and=\"} AssignmentOpSymbol */\n// /** @typedef {\"~\" | \"not\" | \"-\"} UnaryOpSymbol */\n// /** @typedef {import(\"./core-indexes\").Where} Where */\n// /**\n//  * @type {{():NDArray; (where:Where):ArrayOrConstant; (where:Where, op:AssignmentOpSymbol, B:ArrayOrConstant):NDArray; (op:AssignmentOpSymbol, B:ArrayOrConstant):NDArray; ( op:BinaryOpSymbol, B:ArrayOrConstant):NDArray; (UnaryOpSymbol):NDArray; }}  */\n// NDArray.prototype.op = function (...arguments): NDArray {\n//   if (!arguments.length) return this;\n//   if (typeof arguments[0] == \"string\") {\n//     const symbol = arguments[0];\n//     if (arguments.length == 1) {\n//       let func = modules.operators.op_unary[symbol];\n//       if (!func) throw new Error(`Unknown unary operator \"${symbol}\". Options:${[...Object.keys(modules.operators.op_unary)]}`);\n//       return func(this, symbol);\n//     }\n//     if (arguments.length > 2) throw new Error(`Too many arguments provided: ${[...arguments]}`);\n//     const other = arguments[1];\n//     let func = modules.operators.op_binary[symbol];\n//     if (func) return func(this, other);\n//     func = modules.operators.op_assign[symbol];\n//     if (func) return func(this, other);\n//     if (symbol.includes(':')) throw new Error(`Expected index or operator symbol. Found \"${symbol}\". Did you mean ${[symbol]}?`);\n//     throw new Error(`Expected index or operator symbol. Found \"${symbol}\"`);\n//   }\n//   const where = arguments[0];\n//   if (where instanceof NDArray) throw new Error(`Expected operator or index. Found numpy array`);\n//   //@ts-ignore\n//   if (arguments.length == 1) return this.index(where);\n//   const symbol = arguments[1];\n//   let func = modules.operators.op_assign[symbol];\n//   if (!func) throw new Error(`Unknown unary operator \"${symbol}\". Options:${[...Object.keys(modules.operators.op_unary)]}`);\n//   if (arguments.length > 2) throw new Error(`Too many arguments provided: ${[...arguments]}`);\n//   const other = arguments[2];\n//   return func(this, where, other);\n// }\nexports.default = NDArray;\n","\"use strict\";\n//@ts-check\n/**\n * This file exists for the sole purpose splitting the class methods across multiple files\n * while preserving all features of intellisense or JSDoc without errors.\n * The main issue is that the implementation of the methods require NDArray very often.\n * It resolves circular dependencies by using a global variable imported in each module.\n * The main file must define `require('./core-globals').GLOBALS.NDArray = NDArray;` before\n * importing any of the files that use it.\n *\n * A template header for files importing NDArray from this file is given below.\n *    DO NOT use `const NDArray = require(\"./core-globals\").GLOBALS.NDArray;`.\n *    Use const {NDArray} = ... instead as indicated. (Intellisense stops working otherwise)\n */\n// /** @typedef {import(\"./core\")} NDArray*/\n// const { NDArray } = require(\"./core-globals\").GLOBALS;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GLOBALS = void 0;\n//@ts-ignore\nvar _np = null;\nvar _array = null;\nexports.GLOBALS = {\n    NDArray: _array,\n    np: _np,\n};\n","\"use strict\";\n//@ts-check\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @param {TemplateStringsArray|any[]|number|boolean} template\n * @param {any[]} variables\n */\nvar np = function (template) {\n    var _a;\n    var variables = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        variables[_i - 1] = arguments[_i];\n    }\n    var usage = 'Usage example: np`np.arange(10)+${5}` or np([0,1,2]).';\n    if (typeof template == \"number\")\n        return template;\n    if (template instanceof np.NDArray)\n        return template;\n    if (!Array.isArray(template))\n        throw new Error(\"Expected template or array. \".concat(usage));\n    if (!template.length)\n        throw new Error(\"Expected argument. \".concat(usage));\n    if (typeof template[0] == \"string\") {\n        if (variables.length + 1 != template.length)\n            throw new Error(\"Wrong input. \".concat(usage));\n        //@ts-ignore\n        return (_a = np.modules.grammar).parse.apply(_a, __spreadArray([/**@type {*}*/ (template)], variables, false));\n    }\n    else {\n        if (variables.length)\n            throw new Error(\"Wrong input. \".concat(usage));\n        //@ts-ignore\n        return np.asarray(template);\n    }\n};\n// ==============================\n//    Define Global before importing any module\n// ==============================\nvar globals_1 = require(\"./globals\");\nglobals_1.GLOBALS.np = np;\n// ==============================\n//    Define casting and core before importing any other module\n// ==============================\nvar core_1 = require(\"./core\");\nnp.NDArray = core_1.default;\nnp.transpose = function () { };\n// np.modules = {\n//   NDArray: NDArray,\n//   grammar: require('./grammar'),\n//   constructors: require('./constructors'),\n//   jsUtils: require('./js-utils'),\n//   random: require('./random'),\n// }\n// np.random = np.modules.random;\n// // ==============================\n// //    Grammar parser (must be declared after GLOBALS.np assignment)\n// // ==============================\nvar jsInterface = require(\"./core-js-interface\");\nnp.fromJS = jsInterface.fromJS;\nnp.JS = function (template) {\n    var variables = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        variables[_i - 1] = arguments[_i];\n    }\n    return jsInterface.toJS(np.apply(void 0, __spreadArray([template], variables, false)));\n};\n// np.ravel = NDArray.prototype.modules.basic.ravel;\n// np.reshape = NDArray.prototype.modules.basic.reshape;\n// np.array = NDArray.prototype.modules.basic.array;\n// np.asarray = NDArray.prototype.modules.basic.asarray;\n// const reduce = NDArray.prototype.modules.reduce;\n// np.sum = reduce.reducers.sum;\n// np.product = reduce.reducers.product;\n// np.prod = np.product;\n// np.any = reduce.reducers.any;\n// np.all = reduce.reducers.all;\n// np.max = reduce.reducers.max;\n// np.min = reduce.reducers.min;\n// np.argmax = reduce.reducers.argmax;\n// np.argmin = reduce.reducers.argmin;\n// np.mean = reduce.reducers.mean;\n// np.var = reduce.reducers.var;\n// np.std = reduce.reducers.std;\n// const transform = NDArray.prototype.modules.transform;\n// np.transpose = transform.transpose;\n// np.apply_along_axis = transform.apply_along_axis;\n// np.sort = transform.sort;\n// np.concatenate = transform.concatenate;\n// np.stack = transform.stack;\n// const operators = NDArray.prototype.modules.operators;\n// np.add = operators.op_binary[\"+\"];\n// np.subtract = operators.op_binary[\"-\"];\n// np.multiply = operators.op_binary[\"*\"];\n// np.divide = operators.op_binary[\"/\"];\n// np.mod = operators.op_binary[\"%\"];\n// np.divide_int = operators.op_binary[\"//\"];\n// np.pow = operators.op_binary[\"**\"];\n// np.bitwise_or = operators.op_binary[\"|\"];\n// np.bitwise_and = operators.op_binary[\"&\"];\n// np.bitwise_xor = operators.op_binary[\"^\"];\n// np.bitwise_shift_left = operators.op_binary[\"<<\"];\n// np.bitwise_shift_right = operators.op_binary[\">>\"];\n// np.greater = operators.op_binary[\">\"];\n// np.less = operators.op_binary[\"<\"];\n// np.greater_equal = operators.op_binary[\">=\"];\n// np.less_equal = operators.op_binary[\"<=\"];\n// np.equal = operators.op_binary[\"==\"];\n// np.not_equal = operators.op_binary[\"!=\"];\n// np.maximum = operators.op_binary[\"↑\"];\n// np.minimum = operators.op_binary[\"↓\"];\n// np.logical_or = operators.op_binary[\"or\"];\n// np.logical_and = operators.op_binary[\"and\"];\n// np.bitwise_not = operators.op_unary[\"~\"];\n// np.logical_not = operators.op_unary[\"not\"];\n// const ew = NDArray.prototype.modules.elementwise;\n// np.sign = ew.__make_elementwise(Math.sign);\n// np.sqrt = ew.__make_elementwise(Math.sqrt);\n// np.square = ew.__make_elementwise((a) => a * a);\n// np.abs = ew.__make_elementwise(Math.abs);\n// np.exp = ew.__make_elementwise(Math.exp);\n// np.log = ew.__make_elementwise(Math.log);\n// np.log2 = ew.__make_elementwise(Math.log2);\n// np.log10 = ew.__make_elementwise(Math.log10);\n// np.log1p = ew.__make_elementwise(Math.log1p);\n// np.sin = ew.__make_elementwise(Math.sin);\n// np.cos = ew.__make_elementwise(Math.cos);\n// np.tan = ew.__make_elementwise(Math.tan);\n// np.asin = ew.__make_elementwise(Math.asin);\n// np.acos = ew.__make_elementwise(Math.acos);\n// np.atan = ew.__make_elementwise(Math.atan);\n// np.atan2 = ew.__make_elementwise(Math.atan2);\n// np.cosh = ew.__make_elementwise(Math.cosh);\n// np.sinh = ew.__make_elementwise(Math.sinh);\n// np.tanh = ew.__make_elementwise(Math.tanh);\n// np.acosh = ew.__make_elementwise(Math.acosh);\n// np.asinh = ew.__make_elementwise(Math.asinh);\n// np.atanh = ew.__make_elementwise(Math.atanh);\n// np.round = ew.round;\n// const constructors = np.modules.constructors;\n// np.empty = constructors.empty;\n// np.zeros = constructors.zeros;\n// np.ones = constructors.ones;\n// np.arange = constructors.arange;\n// np.linspace = constructors.linspace;\n// np.geomspace = constructors.geomspace;\nexports.default = np;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(341);\n"],"sourceRoot":""}