{"version":3,"sources":["webpack://@caph1993/numpy-js/./src/constructors.js","webpack://@caph1993/numpy-js/./src/core-basic.js","webpack://@caph1993/numpy-js/./src/core-elementwise.js","webpack://@caph1993/numpy-js/./src/core-indexes.js","webpack://@caph1993/numpy-js/./src/core-js-interface.js","webpack://@caph1993/numpy-js/./src/core-operators.js","webpack://@caph1993/numpy-js/./src/core-print.js","webpack://@caph1993/numpy-js/./src/core-reduce.js","webpack://@caph1993/numpy-js/./src/core-transform.js","webpack://@caph1993/numpy-js/./src/core.js","webpack://@caph1993/numpy-js/./src/globals.js","webpack://@caph1993/numpy-js/./src/grammar.js","webpack://@caph1993/numpy-js/./src/index.js","webpack://@caph1993/numpy-js/./src/js-utils.js","webpack://@caph1993/numpy-js/./src/random.js","webpack://@caph1993/numpy-js/./node_modules/.pnpm/ohm-js@17.1.0/node_modules/ohm-js/dist/ohm.cjs","webpack://@caph1993/numpy-js/webpack/bootstrap","webpack://@caph1993/numpy-js/webpack/startup"],"names":["np","arange","arg0","arg1","let","start","end","NDArray","prototype","_new","_","i","Number","linspace","stop","num","endpoint","Object","assign","this","__as_number","n","add","multiply","module","exports","empty","shape","dtype","zeros","c","Boolean","ones","geomspace","log","exp","asarray","A","fromJS","array","flat","_simpleIndexes","reshape","more_shape","__parse_shape","length","map","size","inferredIndex","indexOf","productOfKnownDims","filter","dim","reduce","acc","val","Error","ravel","copy","elementwise","func","modules","basic","bitwise_not","x","logical_not","round","decimals","Math","parseFloat","toFixed","__make_elementwise","AxesIndex","constructor","apparentShape","internalShape","axisIndexes","_indices","_size","isSimple","idx","a","b","isConstant","indices","__slices_to_indices","__slices","slices","slice","__shape_shifts","shifts","iShifts","axis","out","push","lastAxis","tuple","Array","fill","cursor","l","isFinite","__parse_sliceRange","axis_size","step","max","min","AxisIndex","spec","type","from","index","nSteps","range","parse_range","parse","ifNull","floor","abs","parse_range_spec","rangeString","numbers","split","s","trim","parseInt","isInteger","indexSpec","span","undefined","isArray","arr","forEach","if_value","axisIndex","buffers","readDir","reversedAfter","NaN","j","remainingAxes","generalSpec","key","refSize","splice","concat","reverse","__popKwArgs","axesIndex","composition","first","second","specA","specB","startA","stepA","nStepsA","startB","stepB","nStepsB","sub","_flat","src_flat","root","pushToFlat","elem","toJS","__number_collapse","recursiveReshape","flatArr","shapeArr","shift","innerShape","outerSize","innerArray","indexes","binary_operation","B","bind","arguments","shapeA","shapeB","maxDim","dim1","dim2","unshift","flatOut","shiftsA","shiftsB","flatA","flatB","idxA","idxB","__make_operator","operator","__make_operator_special","funcNum","funcBool","console","warn","op_binary","pow","op_unary","assign_operation","tgt","src","indexesSpec","_binary_operation","tmpTgt","_assign_operation_toJS","tgtJS","cpy","outJS","jsInterface","pop","__make_assignment_operator","op_assign","isclose","rtol","atol","equal_nan","isNaN","allclose","different","err","humanReadable","toString","budgets","lBudget","before","rBudget","rLimit","list","suffix","name","str","indent","depth","join","sep","repeat","simplify","left","right","inputString","delimiter","rows","columnWidths","row","columns","formattedString","column","padStart","padEnd","replace","match","keepdims","reducer","__as_boolean","m","groups","value","nCols","groupsT","newRow","__make_reducer","reducers","sum","product","any","all","argmax","argmin","mean","var","arrMean","op","operators","std","variance","allEq","apply_along_axis","transform","nDims","tmp","swapAxes","data","transpose","axes","inv","srcShifts","axisA","axisB","perm","concatenate","arrays","shapeIn","v","sort","stack","shapeBroadcast","bArrays","withKwArgs","kwArgs","Symbol","iterator","yield","print","reduceDecorator","binaryOpDecorator","other","unaryOpDecorator","assignOpDecorator","args","expect","obj","f","subtract","divide","mod","divide_int","maximum","minimum","bitwise_or","bitwise_and","bitwise_xor","bitwise_shift_left","bitwise_shift_right","logical_or","logical_and","logical_xor","greater","less","greater_equal","less_equal","equal","not_equal","add_assign","subtract_assign","multiply_assign","divide_assign","mod_assign","divide_int_assign","pow_assign","maximum_assign","minimum_assign","bitwise_or_assign","bitwise_and_assign","bitwise_shift_left_assign","bitwise_shift_right_assign","logical_or_assign","logical_and_assign","JS","GLOBALS","ohm","grammar","String","raw","ohmGrammar","__makeSemantics","semanticVariables","semantics","Instruction_sliceAssignment","$tgt","_open","$indexesSpec","_close","$symbol","$src","_tgt","_src","symbol","sourceString","Instruction_expression","$arr","Precedence11","BinaryOperation","Precedence10","Precedence09","Precedence08","Precedence07","Precedence06","Precedence05","Precedence04","UnaryOperation","Precedence03","Precedence02","number","arg2","arg3","arg4","arg5","arg6","arg7","Arr_slice","SliceTerm_constant","$x","Arr_call","$name","$names","$callArgs","Arr_method","_dot","Parenthesis","__","Arr_attribute","Variable","$i","isListOfArrays","int","$sign","$value","SliceRange","$start","$stop","$step","Constant","POSITIVE_INFINITY","$str","CallArgs","$args","_comma","$kwArgs","_trailing","entries","fromEntries","KwArg","$key","_equals","NonemptyListOf","more","children","JsArray","$list","_terminal","$A","$B","unary_op","ohmSemantics","createSemantics","addOperation","template","variables","template_with_placeholders","succeeded","message","busy","__parser_pool","pool","parser","usage","constructors","jsUtils","random","prod","ew","sign","sqrt","square","log2","log10","log1p","sin","cos","tan","asin","acos","atan","atan2","cosh","sinh","tanh","acosh","asinh","atanh","q","seen","_next","c_i","includes","nan_equal","allClose","wrapper","_shuffled","uniform","exponential","randn","u","y","normal","shuffle","abstract","optMethodName","methodName","assert","cond","defineLazyProperty","propName","getterFn","memo","defineProperty","get","call","repeatFn","fn","repeatStr","getDuplicates","duplicates","lastIndexOf","copyWithoutDuplicates","noDuplicates","entry","isSyntactic","ruleName","firstChar","toUpperCase","isLexical","padLeft","len","optChar","StringBuffer","strings","append","contents","escapeUnicode","fromCodePoint","unescapeCodePoint","charAt","unexpectedObjToString","baseToString","typeName","JSON","stringify","e","common","freeze","__proto__","clone","UnicodeCategories","Lu","Ll","Lt","Lm","Lo","Nl","Nd","Mn","Mc","Pc","Zs","L","Ltmo","PExpr","withSource","interval","source","trimmed","create","Terminal","super","Range","to","matchCodePoint","Param","Alt","terms","Extend","superGrammar","body","rules","Splice","beforeTerms","afterTerms","origBody","expansionPos","Seq","factors","Iter","expr","Star","Plus","Opt","minNumMatches","maxNumMatches","Not","Lookahead","Lex","Apply","toMemoKey","_memoKey","UnicodeChar","category","pattern","createError","optInterval","getLineAndColumnMessage","shortMessage","intervalSourcesDontMatch","undeclaredRule","grammarName","duplicateRuleDeclaration","declGrammarName","optSource","wrongNumberOfParameters","expected","actual","duplicateParameterNames","incorrectArgumentType","expectedType","kleeneExprHasNullableOperand","kleeneExpr","applicationStack","actuals","substituteParams","stackTrace","app","inconsistentArity","throwErrors","errors","messages","strcpy","dest","offset","origDestLen","substr","lineAndColumnToMessage","ranges","lineAndCol","sb","lineNumbers","lineNum","colNum","maxLen","prevLine","nextLine","appendLine","content","prefix","lineLen","line","indicationLine","startIdx","endIdx","lineStartOffset","gutterWidth","builtInRulesCallbacks","awaitBuiltInRules","cb","getLineAndColumn","currOffset","prevLineStartOffset","lineEndOffset","nextLineEndOffset","uniqueId","idCounter","Interval","_contents","coverageWith","intervals","coverage","collapsedLeft","collapsedRight","minus","that","relativeTo","subInterval","newStartIdx","firstInterval","InputStream","pos","examinedLength","atEnd","ans","next","nextCharCode","nextChar","charCodeAt","nextCodePoint","cp","codePointAt","matchString","optIgnoreCase","sourceSlice","optEndIdx","MatchResult","matcher","input","startExpr","cst","cstOffset","rightmostFailurePosition","optRecordedFailures","_cst","_cstOffset","_rightmostFailurePosition","_rightmostFailures","failed","detail","getExpectedText","getRightmostFailurePosition","errorInfo","getRightmostFailures","matchResultWithFailures","setInput","_match","tracing","positionToRecordFailures","failures","failure","isFluffy","getInterval","PosInfo","applicationMemoKeyStack","maxExaminedLength","maxRightmostFailureOffset","currentLeftRecursion","isActive","application","enter","exit","startLeftRecursion","headApplication","memoRec","isLeftRecursion","nextLeftRecursion","indexOfFirstInvolvedRule","involvedApplicationMemoKeys","isInvolved","applicationMemoKey","updateInvolvedApplicationMemoKeys","endLeftRecursion","shouldUseMemoizedResult","memoize","memoKey","rightmostFailureOffset","clearObsoleteEntries","invalidatedIdx","keys","k","DOT_OPERATOR","SYMBOL_FOR_HORIZONTAL_TABULATION","SYMBOL_FOR_LINE_FEED","SYMBOL_FOR_CARRIAGE_RETURN","Flags","isRootNode","isImplicitSpaces","isMemoized","isHeadOfLeftRecursion","terminatesLR","asEscapedString","Trace","pos1","pos2","bindings","optChildren","terminatingLREntry","_flags","toDisplayString","cloneWithExpr","recordLRTermination","ruleBodyTrace","walk","visitorObjOrFn","optThisArg","visitor","_walk","node","parent","recurse","SKIP","child","excerpt","displayString","mask","set","allowsSkippingPrecedingSpace","BuiltInRules$1","g","lexifyCount","assertAllApplicationsAreValid","_assertAllApplicationsAreValid","skipSyntacticCheck","ruleInfo","isContextSyntactic","formals","isBuiltInApplySyntactic","applySyntactic","isBuiltInCaseInsensitive","caseInsensitive","arg","getArity","assertChoicesHaveUniformArity","arity","term","otherArity","actualArity","expectedArity","assertIteratedExprsAreNotNullable","isNullable","Node","matchLength","numChildren","childAt","indexOfChild","hasChildren","hasNoChildren","onlyChild","ctorName","firstChild","lastChild","childBefore","childIdx","childAfter","isTerminal","isNonterminal","isIteration","isOptional","TerminalNode","NonterminalNode","childOffsets","IterationNode","optional","getMetaInfo","grammarInterval","metaInfo","adjusted","sourceInterval","isRestrictedJSIdentifier","test","resolveDuplicatedNames","argumentNameList","count","argName","dupArgName","subscript","eval","state","inputStream","origPos","pushBinding","processFailure","currentApplication","enterLexifiedContext","exitLexifiedContext","factor","cols","colOffsets","numMatches","prevPos","_applicationStack","_bindings","rowOffsets","_bindingOffsets","posToOffset","endOffset","lastColOffsets","lastCol","pushFailuresInfo","popFailuresInfo","caller","posInfo","getCurrentPosInfo","handleCycle","hasNecessaryInfo","useMemoizedResult","reallyEval","origPosInfo","description","origInputStreamExaminedLength","enterApplication","evalOnce","currentLR","doNotMemoize","growSeedResult","_getRightmostFailureOffset","failuresAtRightmostPosition","cloneRecordedFailures","isTracing","getTraceEntry","traceEntry","exitApplication","offsets","lrMemoRec","newValue","seedTrace","trace","ch","outputRecipe","toLowerCase","introduceParams","_isNullable","some","every","inlined","hasOwnProperty","toArgumentNameList","firstArgIndex","noDupCheck","termArgNameLists","numArgs","colIdx","col","rowIdx","uniqueNames","factorArgumentNameList","exprArgumentString","ps","Failure","pexpr","text","fluffy","getPExpr","getText","getType","isDescription","isStringTerminal","isCode","makeFluffy","clearFluffy","subsumes","toKey","toFailure","article","t","CaseInsensitiveTerminal","param","_getString","terminal","matchStr","pexprs","builtInApplySyntacticBody","builtInRules","applySpaces","MatchState","optPositionToRecordFailures","getInput","memoTable","_memoTable","userData","_posStack","inLexifiedContextStack","_rightmostFailurePositionStack","_recordedFailuresStack","recordedFailures","optNode","inSyntacticContext","inLexifiedContext","skipSpaces","popBinding","skipSpacesIfInSyntacticContext","maybeSkipSpacesBefore","numBindings","truncateBindings","newLength","getPosInfo","recordFailure","shouldCloneIfNew","recordFailures","getMemoizedTraceEntry","memoRecRightmostFailurePosition","origNumBindings","origUserData","origRecordedFailures","memoPos","origTrace","getMatchResult","_setUpMatchState","rightmostFailures","getTrace","matchResult","rootTrace","result","Matcher","_input","_isMemoTableStale","_resetMemoTable","replaceInputRange","prevInput","restOfMemoTable","optStartApplicationStr","options","incremental","_getStartExpr","opts","supportsIncrementalParsing","applicationStr","defaultStartRule","startApp","parseApplication","globalActionStack","prop","Wrapper","baseInterval","_node","_baseInterval","_childWrappers","_forgetMemoizedResultFor","attributeName","_semantics","attributeKeys","childWrapper","childNode","base","wrap","_children","iteration","optChildWrappers","childWrappers","childNodes","iter","Semantics","superSemantics","self","checkedActionDicts","checkActionDictsIfHaventAlready","equals","_inheritsFrom","operations","attributes","checkActionDicts","checkActionDict","toRecipe","semanticsOnly","hasSuperSemantics","BuiltInSemantics","_getSemantics","superSemanticsGrammar","relatedGrammar","semanticOperations","actionDict","builtInDefault","signature","method","srcArray","actionName","addOperationOrAttribute","typePlural","parsedNameAndFormalArgs","parseSignature","formal","info","moreInfo","doIt","apply","assertNewName","realActionDict","_default","Operation","Attribute","thisThing","argsObj","oldArgs","execute","configurable","extendOperationOrAttribute","inheritedFormals","inheritedActionDict","newActionDict","optBaseInterval","prototypeGrammar","r","prototypeGrammarSemantics","optSuperSemantics","proxy","TypeError","extendOperation","addAttribute","extendAttribute","_getActionDict","operationOrAttributeName","action","_remove","semantic","getOperationNames","getAttributeNames","getGrammar","_checkTopDownActionDict","nodeWrapper","actionFn","_nonterminal","SPECIAL_ACTION_NAMES","getSortedRuleValues","ohmGrammar$1","buildGrammar$1","Grammar","optDefaultStartRule","_matchStateInitializer","isBuiltIn","ProtoBuiltInRules","BuiltInRules","myRules","otherRules","rule","optStartApplication","extendSemantics","what","prettyProblems","problems","_topDownActionArity","details","problem","error","superGrammarExpr","startRule","isDefinition","operation","bodyRecipe","superGrammarOutput","toOperationActionDictionaryTemplate","_toOperationOrAttributeActionDictionaryTemplate","toAttributeActionDictionaryTemplate","addSemanticActionTemplate","primitive","lower","upper","unicodeLtmo","spaces","space","initApplicationParser","builderFn","GrammarDecl","ensureSuperGrammar","withSuperGrammar","ensureSuperGrammarRuleForOverriding","installOverriddenOrExtendedRule","duplicateParameterNames$1","expectedFormals","expectedNumFormals","install","withDefaultStartRule","build","grammarErrors","grammarHasInvalidApplications","define","override","descIgnored","extend","fragment","Builder","currentDecl","currentRuleName","newGrammar","gDecl","fromRecipe","ruleRecipe","alt","termArgs","seq","factorArgs","star","plus","opt","not","lookahead","lex","optParams","recipe","makeRecipe","superSplicePlaceholder","namespaceHas","ns","buildGrammar","namespace","optOhmGrammarForTesting","builder","decl","currentRuleFormals","overriding","Grammars","grammarIter","visit","id","SuperGrammar","superGrammarName","Rule_define","fs","d","Rule_override","Rule_extend","RuleBody","OverrideRuleBody","Formals","opointy","cpointy","Params","seqs","TopLevelTerm_inline","inlineRuleName","isNewRuleDeclaration","params","OverrideTopLevelTerm_superSplice","Iter_star","Iter_plus","Iter_opt","Pred_not","Pred_lookahead","Lex_lex","Base_application","Base_range","Base_terminal","Base_paren","open","close","ruleDescr","ruleDescrText","caseName","space1","space2","rest","nameFirst","nameRest","cs","oneCharTerminal","escapeChar","RangeError","startsWith","applyWrapper","fullInterval","digitIntervals","xs","EmptyListOf","operationsAndAttributesGrammar","actions","nonEmpty","emptyListOf","nonemptyListOf","AttributeSignature","OperationSignature","optFormals","oparen","cparen","asIteration","INDENT_DESCRIPTION","DEDENT_DESCRIPTION","InputStreamWithIndentation","_indentationAt","Indentation","isIndent","pseudoTokens","applyIndent","applyDedent","newAnyBody","IndentationSensitive","topOfStack","regex","exec","indentSize","prevSize","indentPos","prevLength","isBuffer","compileAndLoad","matchFailure","enumerable","grammars","optNamespace","ExperimentalIndentationSensitive","_buildGrammar","grammarNames","version","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"mappings":"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","file":"caph1993-numpy-js.js","sourcesContent":["//@ts-check\nconst { np } = require(\"./globals\").GLOBALS;\n\n/** @typedef {typeof np.NDArray} NDArray*/\n\n\nfunction empty(shape, /**@type {import('./core').DType} */dtype = Number) {\n  return np.NDArray.prototype._new(shape, (_) => undefined, dtype)\n};\nfunction zeros(shape, /**@type {import('./core').DType} */dtype = Number) {\n  const c = dtype == Boolean ? false : 0;\n  return np.NDArray.prototype._new(shape, (_) => c, dtype)\n};\nfunction ones(shape, /**@type {import('./core').DType} */dtype = Number) {\n  const c = dtype == Boolean ? true : 1;\n  return np.NDArray.prototype._new(shape, (_) => c, dtype)\n};\n\nfunction arange(arg0, arg1 = null) {\n  let start, end;\n  if (arg1 === null) start = 0, end = arg0;\n  else start = arg0, end = arg1;\n  return np.NDArray.prototype._new(end - start, (_, i) => start + i, Number)\n};\n\nfunction linspace(start, stop, num = 50, endpoint = true) {\n  ({ stop, num, endpoint } = Object.assign({ stop, num, endpoint }, this));\n  const { __as_number } = np.NDArray.prototype;\n  start = __as_number(start);\n  stop = __as_number(stop);\n  let n = (num - (endpoint ? 1 : 0))\n  let arr = np.add(np.multiply(arange(num), (stop - start) / n), start);\n  return arr;\n}\n\nfunction geomspace(start, stop, num = 50, endpoint = true) {\n  ({ stop, num, endpoint } = Object.assign({ stop, num, endpoint }, this));\n  start = np.log(start);\n  stop = np.log(stop);\n  return np.exp(linspace(start, stop, num, endpoint));\n}\n\nmodule.exports = {\n  empty,\n  zeros,\n  ones,\n  arange,\n  linspace,\n  geomspace,\n};","//@ts-check\n\n/** @typedef {import(\"./core\")} NDArray*/\n\nconst { NDArray } = require(\"./globals\").GLOBALS;\n\n\n/** @returns {NDArray} */\nfunction asarray(A) {\n  if (A instanceof NDArray) return A;\n  else return NDArray.prototype.fromJS(A);\n}\n\n/** @returns {NDArray} */\nfunction array(A) {\n  // @ts-ignore\n  if (A instanceof NDArray) {\n    let flat = A._simpleIndexes == null ? [...A.flat] : A.flat;\n    return new NDArray(flat, A.shape, A.dtype);\n  }\n  else return NDArray.prototype.fromJS(A);\n}\n\nfunction reshape(A, shape, ...more_shape) {\n  A = asarray(A);\n  const { __parse_shape, __as_number } = NDArray.prototype;\n  if (!more_shape.length) shape = __parse_shape(shape);\n  else shape = [shape, ...more_shape].map(__as_number)\n  const n = A.size;\n  const inferredIndex = shape.indexOf(-1);\n  if (inferredIndex !== -1) {\n    const productOfKnownDims = shape.filter(dim => dim !== -1).reduce((acc, val) => acc * val, 1);\n    if (n % productOfKnownDims !== 0) {\n      throw new Error(\"Invalid shape. The total number of elements must match the product of the known dimensions.\");\n    }\n    shape[inferredIndex] = n / productOfKnownDims;\n  }\n  return new NDArray(A.flat, shape, A.dtype);\n};\nfunction ravel(A) {\n  A = asarray(A);\n  return new NDArray(A.flat, [A.size], A.dtype);\n};\nfunction copy(A) {\n  A = asarray(A);\n  return new NDArray([...A.flat], A.shape, A.dtype);\n};\n\n\nmodule.exports = {\n  asarray, array, reshape, ravel, copy\n} ","//@ts-check\n\n/** @typedef {import(\"./core\")} NDArray*/\n\nconst { NDArray } = require(\"./globals\").GLOBALS;\n\n\n// Here, we declare only the core functions (those that are methods)\n\nfunction elementwise(A, func, dtype) {\n  A = NDArray.prototype.modules.basic.asarray(A);\n  return new NDArray(A.flat.map(func), A.shape, dtype);\n}\n\n\nfunction round(A, decimals = 0) {\n  if (decimals == 0) elementwise(A, Math.round, Number);\n  return elementwise(A, x => parseFloat(x.toFixed(decimals)), Number);\n};\n\nfunction __make_elementwise(func, dtype = Number) {\n  return function (A) {\n    return elementwise(A, func, dtype);\n  }\n}\n\nfunction bitwise_not(A) {\n  return elementwise(A, x => ~x, Number);\n};\nfunction logical_not(A) {\n  return elementwise(A, x => !x, Boolean);\n};\n\nmodule.exports = {\n  elementwise,\n  bitwise_not,\n  logical_not,\n  round,\n  __make_elementwise,\n} ","//@ts-check\n\n/** @typedef {import(\"./core\")} NDArray*/\n\nconst { NDArray } = require(\"./globals\").GLOBALS;\n\n\n// /**@typedef {{isRange:boolean, start:null|number, stop:null|number, step:null|number}} RangeSpec */\n/**@typedef {string} RangeSpec */\n\n/**@typedef {':'|number|RangeSpec|NDArray|number[]} indexSpec */\n\n/**@typedef {':'|'...'|'None'|null|indexSpec} GeneralIndexSpec */\n\n/**@typedef {null|GeneralIndexSpec[]} Index */\n\n/**\n * @param {NDArray} arr\n * @param {GeneralIndexSpec[]} indexSpec\n */\nfunction index(arr, ...indexSpec) {\n  // This can result either in a value, a view, a copy.\n  // The index is simple if there are only ranges, numbers, \":\" and at most one \"...\"\n  // If index is simple, don't call \".indices\" and make view\n  // If index is advanced, get indices and make copy\n  let { copy } = Object.assign({ copy: false }, arr.__popKwArgs());\n  if (!(arr instanceof NDArray)) throw new Error(`Expected NDArray. Found ${typeof arr}: ${arr}`);\n  const axesIndex = AxesIndex.prototype.parse(arr.shape, indexSpec);\n  if (axesIndex.isConstant) {\n    let [index] = axesIndex.indices;\n    return arr.flat[index];\n  } else if (axesIndex.isSimple) {\n    const composition = __compose_simpleIndexes(arr._simpleIndexes, axesIndex);\n    const out = new NDArray(arr._flat, axesIndex.shape, arr.dtype);\n    out._simpleIndexes = composition;\n    if (arr['__warnAssignments']) out['__warnAssignments'] = true;\n    return copy ? out.copy() : out;\n  } else {\n    const src_flat = arr.flat;\n    const flat = axesIndex.indices.map(i => src_flat[i]);\n    const out = new NDArray(flat, axesIndex.shape, arr.dtype);\n    if (!copy) out['__warnAssignments'] = true;\n    return out;\n  }\n}\n\n\n\n/** @typedef {null|{size:Number, ranges:{refSize:number, range:number|[number,number,number]|null}[], indices:null|number[]}} SimpleIndexes */\n\nclass AxesIndex {\n  /**\n   * @param {AxisIndex[]} axisIndexes\n   */\n  constructor(apparentShape, internalShape, axisIndexes) {\n    this.shape = apparentShape;\n    this.internalShape = internalShape;\n    this.axisIndexes = axisIndexes;\n    this._indices = null;\n    this._size = null;\n    this.isSimple = this.axisIndexes.map(idx => idx.isSimple).reduce((a, b) => a && b, true);\n    this.isConstant = this.axisIndexes.map(idx => idx.isConstant).reduce((a, b) => a && b, true);\n  }\n  get indices() {\n    if (this._indices) return this._indices;\n    let indices = __slices_to_indices(this.internalShape, this.__slices);\n    return this._indices = indices;\n  }\n  get __slices() {\n    return this.axisIndexes.map(idx => idx.indices);\n  }\n  get size() {\n    if (this._size) return this._size;\n    return this._size = this.axisIndexes.map(idx => idx.size).reduce((a, b) => a * b, 0);\n  }\n}\n\n\n/**\n * \n * @param {AxesIndex|null} first \n * @param {AxesIndex} second \n * @returns {AxesIndex}\n */\nfunction __compose_simpleIndexes(first, second) {\n  if (first == null) return second;\n  const axisIndexes = [];\n  // console.log({ first, second })\n  let j = 0;\n  for (let i = 0; i < first.axisIndexes.length; i++) {\n    let { spec: specA } = first.axisIndexes[i];\n    let { spec: specB } = second.axisIndexes[j];\n    if (specA.type == \"array\") throw new Error(`Expected simple index. Found advanced: ${specA.type}`);\n    if (specB.type == \"array\") throw new Error(`Expected simple index. Found advanced: ${specB.type}`);\n    let /**@type {AxisIndexSpec} */ spec;\n    if (specA.type == \"number\") spec = specA\n    else {\n      j++;\n      if (specA.type == \":\") spec = specB;\n      else if (specB.type == \":\") spec = specA;\n      else {\n        let { start: startA, step: stepA, nSteps: nStepsA } = specA.range;\n        if (specB.type == \"number\") {\n          let { index } = specB;\n          if (index < 0) index = nStepsA + index;\n          if (index < 0 || index >= nStepsA) throw new Error(`Index ${index} out of bounds [0..${nStepsA})`);\n          index = startA + index * stepA;\n          spec = { type: \"number\", index };\n        } else {\n          let { start: startB, step: stepB, nSteps: nStepsB } = specB.range;\n          let sub = AxisIndex.prototype.parse_range(nStepsA, startB, startB + nStepsB * stepB, stepB);\n          let step = sub.step * stepA;\n          let start = startA + sub.start * step;\n          let nSteps = sub.nSteps;\n          spec = { type: \"range\", range: { start, step, nSteps } };\n        }\n      }\n    }\n    axisIndexes.push(new AxisIndex(spec));\n  }\n  if (j < second.axisIndexes.length) throw new Error(`Index too long. Expected ${j} axes. Found ${second.axisIndexes.length}`)\n  const apparentShape = second.shape;\n  const internalShape = first.internalShape;\n  return new AxesIndex(apparentShape, internalShape, axisIndexes);\n}\n\n\n/**\n * Computes the indices wr to shape of the cartesian products of the slices.\n * We have shape.length==slices.length, and the elements in slices[axis] are\n * integers between 0 and shape[axis]-1\n * @param {number[]} shape \n * @param {number[][]} slices \n * @returns {number[]}\n */\nfunction __slices_to_indices(shape, slices) {\n  const { __shape_shifts } = NDArray.prototype;\n  for (let slice of slices) if (slice.length == 0) return [];\n  const shifts = __shape_shifts(shape);\n  const iShifts = slices.map((indices, axis) => {\n    // out[i] = How much does the cursor increase if we change from [...,indices[i],...] to [...,indices[(i+1)%n],...]\n    let out = [], n = indices.length;\n    for (let i = 0; i < n - 1; i++) out.push(shifts[axis] * (indices[i + 1] - indices[i]));\n    out[n - 1] = shifts[axis] * (indices[0] - indices[n - 1]);\n    return out;\n  });\n  const indices = [];\n  const lastAxis = shape.length - 1;\n  const tuple = new Array(shape.length).fill(0);\n  let cursor = slices.map((l, i) => l[tuple[i]] * shifts[i]).reduce((a, b) => a + b, 0);\n  while (true) {\n    if (!isFinite(cursor)) throw new Error(`Programming error`);\n    indices.push(cursor);\n    let axis = lastAxis;\n    while (axis >= 0) {\n      cursor += iShifts[axis][tuple[axis]++];\n      if (tuple[axis] < iShifts[axis].length) break;\n      tuple[axis--] = 0; // Overflow\n    };\n    if (axis < 0) break;\n  }\n  return indices;\n}\n\n\n// =========================================\n//     Slicing\n// =========================================\n\nmodule.exports.__parse_sliceRange = function __parse_sliceRange(axis_size, { start, stop, step }) {\n  if (start == null) start = 0;\n  else if (start < 0) start = axis_size + start;\n  if (stop == null) stop = axis_size;\n  else if (stop < 0) stop = axis_size + stop;\n  if (step == null) step = 1;\n  else if (step == 0) throw new Error(`Slice range with step size of zero`);\n  if (!isFinite(start) || !isFinite(stop) || !isFinite(step)) throw new Error(`Invalid slice ${[start, stop, step]}. Axis size ${axis_size}`);\n  let indices = [];\n  if (step > 0) {\n    start = Math.max(start, 0);\n    stop = Math.min(stop, axis_size);\n    for (let i = start; i < stop; i += step) indices.push(i);\n  } else {\n    stop = Math.max(stop, 0);\n    start = Math.min(start, axis_size);\n    for (let i = start; i > stop; i += step) indices.push(i);\n  }\n  return indices;\n}\n\n\n/**@typedef {{type:':', size:number}|{type:'number', index:number}|{type:'range', range:{start:number, step:number, nSteps:number}}|{type:'array', indices:number[]}} AxisIndexSpec */\n\nclass AxisIndex {\n  /**\n   * Invariant: Immutable\n   * @param {AxisIndexSpec} spec\n   */\n  constructor(spec) {\n    this.spec = spec;\n    this._indices = null;\n    this.isSimple = (this.spec.type != \"array\");\n    this.isConstant = (this.spec.type == \"number\");\n  }\n  get indices() {\n    if (this._indices) return this._indices;\n    let indices;\n    if (this.spec.type == ':') indices = Array.from({ length: this.spec.size }, (_, i) => i);\n    else if (this.spec.type === \"number\") indices = [this.spec.index];\n    else if (this.spec.type === \"array\") indices = this.spec.indices;\n    else if (this.spec.type == \"range\") {\n      const { nSteps, step, start } = this.spec.range;\n      indices = Array.from({ length: nSteps }, (_, i) => start + i * step);\n    } else throw new Error(`Unknown spec type ${this.spec['type']}`);\n    return this._indices = indices;\n  }\n  get size() {\n    if (this.spec.type == ':') return this.spec.size;\n    else if (this.spec.type === \"number\") return 1;\n    else if (this.spec.type === \"array\") return this.spec.indices.length;\n    else if (this.spec.type == \"range\") return this.spec.range.nSteps;\n    else throw new Error(`Unknown spec type ${this.spec['type']}`);\n  }\n}\n\n/**\n * \n * @param {number} size\n * @param {number|null} start\n * @param {number|null} stop\n * @param {number|null} step\n * @returns\n */\nAxisIndex.prototype.parse_range = function (size, start = null, stop = null, step = null) {\n  if (step == null) step = 1;\n  else if (step == 0) throw new Error(`Index specification error. Step must be different from zero.`);\n  /**\n   *  @param {number|null} i @param {number} ifNull @param {number} min @param {number} max */\n  const parse = (i, ifNull, min, max) => {\n    if (i == null) return ifNull;\n    if (i < 0) i = Math.max(0, size - i);\n    return Math.min(max, Math.max(min, i));\n  }\n  let nSteps;\n  if (step > 0) start = parse(start, 0, 0, size - 1), stop = parse(stop, size, 0, size);\n  else start = parse(start, size - 1, 0, size - 1), stop = parse(stop, size - 1, -1, size - 1);\n  stop = Math.max(stop, start);\n  nSteps = Math.floor(Math.abs(stop - start) / step);\n  return { start, step, nSteps };\n}\n\n/**\n * \n * @param {string} rangeString\n * @returns {{start:number|null,stop:number|null,step:number|null}}\n */\nAxisIndex.prototype.parse_range_spec = function (rangeString) {\n  const numbers = rangeString.split(':').map(s => {\n    s = s.trim();\n    if (s == \"\") return null;\n    const n = parseInt(s)\n    if (!Number.isInteger(n)) throw new Error(`Wrong input. Slice index unrecognized: ${s}`);\n    return n;\n  });\n  if (numbers.length == 0) throw new Error('Unexpected empty index. Expected colons.');\n  if (numbers.length > 3) throw new Error(`Too many colons in index ${rangeString}`);\n  let [start, stop, step, ..._] = [...numbers, null, null, null];\n  return { start, stop, step };\n}\n\n\n\n\n/**\n * We are reading `indexSpec` and `shape` in parallel, in the reading direction readDir.\n * With respect to `shape` we are at the given `axis`.\n * With respect to `indexSpec`, we found `indexSpec`, which we should process.\n * @param {indexSpec} indexSpec\n */\nAxisIndex.prototype.parse = function (indexSpec, size) {\n  /**\n   * \n   * span (virtual shape) matches shape unless there are boolean masks spanning\n   * over several axes/dimensions.\n   * For example, in `np.ones((2,3,4,5))[:, np.arange(12).reshape((3,4))>5, 1]`,\n   * the boolean mask is spanning over axes 1 and 2. In this case, the output should\n   * merge these axes, resulting in an a vShape of (2, 12, 5).\n   * The boolean mask is then converted to indices in the flattened merged axis.\n   */\n  /**@type {AxisIndexSpec} */\n  let spec;\n  let span = 1;\n\n  if (indexSpec == ':' || indexSpec === undefined) {\n    spec = { type: ':', size: size };\n  }\n  else if (typeof indexSpec === \"number\") {\n    let index = indexSpec\n    if (index < 0) index = size + index;\n    if (index < 0 || index >= size) throw new Error(`Index ${index} out of bounds [0..${size})`);\n    spec = { type: 'number', index };\n  }\n  else if (indexSpec instanceof NDArray || Array.isArray(indexSpec)) {\n    let arr = NDArray.prototype.modules.basic.asarray(indexSpec);\n    let indices;\n    if (arr.dtype == Number) {\n      // Array of indices\n      if (arr.shape.length > 1) throw new Error(\n        `Expected 1D array of indices or nD array of booleans. ` +\n        `Found shape=${arr.shape} and dtype=${arr.dtype}`\n      );\n      indices = arr.flat;\n    } else {\n      // Boolean mask\n      indices = [];\n      arr.flat.forEach((if_value, i) => if_value && indices.push(i));\n      // Next lines: the boolean mask spans over more than 1 axis\n      span = Math.max(1, arr.shape.length);\n      // Multiply the (possibly inverted) interval\n    }\n    spec = { type: 'array', indices };\n  }\n  else if (typeof indexSpec == \"string\") {\n    let { start, stop, step } = AxisIndex.prototype.parse_range_spec(indexSpec);\n    const range = AxisIndex.prototype.parse_range(size, start, stop, step);\n    if (range.start == 0 && range.nSteps == size && range.step == 1) {\n      // Small optimization: all of these are just \":\": [\"::\",\"0::1\", \":axisSize:\", etc.]\n      spec = { type: ':', size: size };\n    } else {\n      spec = { type: 'range', range };\n    }\n  }\n  else throw new Error(`Unknown index type. Found ${typeof indexSpec}: ${indexSpec}`);\n\n  const axisIndex = new AxisIndex(spec);\n  return { axisIndex, span };\n}\n\n\n/**\n * @param {GeneralIndexSpec[]} indexSpec\n * @returns {AxesIndex}\n */\nAxesIndex.prototype.parse = function (shape, indexSpec) {\n  const buffers = {\n    axisIndexes: /**@type {AxisIndex[]}*/([]),\n    apparentShape: /**@type {number[]}*/([]),\n    internalShape: /**@type {number[]}*/([]),\n  }\n  let /**@type {1|-1}*/ readDir = 1;\n  const reversedAfter = { axisIndexes: NaN, apparentShape: NaN, internalShape: NaN };\n  let axis = 0, j = 0, remainingAxes = shape.length;\n  while (remainingAxes > 0) {\n    let generalSpec = indexSpec[j];\n    //@ts-ignore\n    indexSpec[j] = undefined; // For ellipsis to avoid reading twice\n    j += readDir;\n    if (generalSpec == \"None\" || generalSpec === null) {\n      buffers.apparentShape.push(1);\n      continue;\n    } else if (generalSpec == \"...\") {\n      if (readDir == -1) throw new Error(`Index can only have a single ellipsis ('...')`)\n      readDir = -1;\n      for (let key in reversedAfter) reversedAfter[key] = buffers[key].length;\n      j = indexSpec.length - 1;\n      axis = shape.length - 1;\n      continue;\n    }\n    const { axisIndex, span } = AxisIndex.prototype.parse(generalSpec, shape[axis]);\n    // Advance the axis cursor span axes in readDir and compute the total size of consumed axes\n    remainingAxes -= span;\n    let refSize = 1;\n    for (let i = 0; i < span; i++) {\n      if (axis < 0 || axis >= shape.length) throw new Error(`Index spans over more dimensions than available`);\n      refSize *= shape[axis];\n      axis += readDir;\n    }\n    buffers.axisIndexes.push(axisIndex);\n    if (axisIndex.spec.type != \"number\") buffers.apparentShape.push(axisIndex.size);\n    buffers.internalShape.push(refSize);\n  }\n  if (readDir == -1) { // reverse the right to left elements\n    for (let key in buffers) buffers[key].splice(0, reversedAfter[key]).concat(buffers[key].reverse());\n  }\n  return new AxesIndex(buffers.apparentShape, buffers.internalShape, buffers.axisIndexes);\n}\n\nmodule.exports = {\n  index, AxesIndex, AxisIndex, __slices_to_indices,\n} ","//@ts-check\n\n/** @typedef {import(\"./core\")} NDArray*/\n\nconst { NDArray } = require(\"./globals\").GLOBALS;\n\n\nfunction fromJS(arr) {\n  if (arr instanceof NDArray) return arr;\n  if (typeof arr === \"number\") return new NDArray([arr], [], Number);\n  if (typeof arr === \"boolean\") return new NDArray([arr ? 1 : 0], [], Boolean);\n  if (arr === NDArray.prototype) throw new Error(`Programming error`);\n  if (!Array.isArray(arr)) throw new Error(`Can't parse input of type ${typeof arr}: ${arr}`);\n  const shape = [];\n  let root = arr;\n  while (Array.isArray(root)) {\n    shape.push(root.length);\n    root = root[0];\n    if (shape.length > 256) throw new Error(`Circular reference or excessive array depth`);\n  }\n  let dtype = typeof root === \"boolean\" ? Boolean : Number;\n  const flat = [];\n  const pushToFlat = (arr, axis) => {\n    // Check consistency\n    if (axis == shape.length - 1) {\n      for (let elem of arr) {\n        if (Array.isArray(elem)) throw new Error(`Inconsistent shape`);\n        flat.push(elem);\n        // Update dtype\n      }\n    } else {\n      if (!Array.isArray(arr)) throw new Error(`Inconsistent shape`);\n      for (let sub of arr) {\n        if (sub.length != shape[axis + 1])\n          throw new Error(`Inconsistent shape: found sibling arrays of lengths ${sub.length} and ${shape[axis + 1]}`);\n        pushToFlat(sub, axis + 1);\n      }\n    }\n  }\n  pushToFlat(arr, 0);\n  return new NDArray(flat, shape, dtype)\n}\n\nfunction toJS(arr) {\n  if (this instanceof NDArray) return toJS;\n  if (arr === null || typeof arr == \"number\" || typeof arr == \"boolean\") return arr;\n  if (Array.isArray(arr)) return arr.map(toJS);\n  if (!(arr instanceof NDArray)) throw new Error(`Expected MyArray. Got ${typeof arr}: ${arr}`);\n  arr = NDArray.prototype.__number_collapse(arr);\n  if (!(arr instanceof NDArray)) return arr;\n\n  // let out = [], top;\n  // let q = /**@type {[MyArray, any][]}*/([[arr, out]])\n  // while (top = q.pop()) {\n  //   let [arr, out] = top;\n  //   if (arr.shape.length <= 1) {\n  //     out.push(...arr.flat);\n  //   } else {\n  //     for (let i = 0; i < arr.shape[0]; i++) {\n  //       let l = []\n  //       out.push(l);\n  //       q.push([arr.index(i), l]);\n  //     }\n  //   }\n  // }\n  // return out;\n  function recursiveReshape(flatArr, shapeArr) {\n    if (shapeArr.length === 0) {\n      return flatArr.shift();\n    }\n    const innerShape = shapeArr.slice(1);\n    const outerSize = shapeArr[0];\n    const innerArray = [];\n    for (let i = 0; i < outerSize; i++) {\n      innerArray.push(recursiveReshape(flatArr, innerShape));\n    }\n    return innerArray;\n  }\n  const out = recursiveReshape([...arr.flat], arr.shape);\n  return out;\n}\n\n\n\n\n\nmodule.exports = {\n  fromJS, toJS\n} ","//@ts-check\n\n/** @typedef {import(\"./core\")} NDArray*/\n\nconst { NDArray } = require(\"./globals\").GLOBALS;\n\n/** @typedef {NDArray|number|boolean} ArrayOrConstant */\n\nconst indexes = require('./core-indexes');\nconst elementwise = require('./core-elementwise');\n\nconst asarray = NDArray.prototype.modules.basic.asarray;\nconst ravel = NDArray.prototype.modules.basic.ravel;\n\n\n\n/**\n * \n * @param {ArrayOrConstant} A \n * @param {ArrayOrConstant} B \n * @param {*} func\n * @param {*} dtype\n * @param {NDArray?} out\n * @returns {ArrayOrConstant}\n */\nfunction binary_operation(A, B, func, dtype, out = null) {\n  if (this instanceof NDArray) return func.bind(NDArray.prototype)(this, ...arguments);\n  // Find output shape and input broadcast shapes\n  const { __shape_shifts, __number_collapse } = NDArray.prototype;\n  A = asarray(A);\n  B = asarray(B);\n  const [shape, shapeA, shapeB] = _broadcast_shapes(A.shape, B.shape);\n  if (out == null) out = NDArray.prototype._new(shape, (_) => undefined, dtype);\n  else if (!(out instanceof NDArray)) throw new Error(`Out must be of type ${NDArray}. Got ${typeof out}`);\n  // Iterate with broadcasted indices\n  const flatOut = [];\n  const shiftsA = __shape_shifts(shapeA);\n  const shiftsB = __shape_shifts(shapeB);\n  const flatA = A.flat;\n  const flatB = B.flat;\n  for (let i = 0; i < out.size; i++) {\n    let idxA = 0, idxB = 0, idx = i;\n    for (let axis = shape.length - 1; axis >= 0; axis--) {\n      idxA += shiftsA[axis] * (idx % shapeA[axis]);\n      idxB += shiftsB[axis] * (idx % shapeB[axis]);\n      idx = Math.floor(idx / shape[axis]);\n    }\n    flatOut.push(func(flatA[idxA], flatB[idxB]));\n  };\n  out.flat = flatOut;\n  return __number_collapse(out);\n}\n\nfunction _broadcast_shapes(shapeA, shapeB) {\n  const shape = [];\n  const maxDim = Math.max(shapeA.length, shapeB.length);\n  shapeA = [...Array.from({ length: maxDim - shapeA.length }, () => 1), ...shapeA];\n  shapeB = [...Array.from({ length: maxDim - shapeB.length }, () => 1), ...shapeB];\n  for (let axis = maxDim - 1; axis >= 0; axis--) {\n    const dim1 = shapeA[axis];\n    const dim2 = shapeB[axis];\n    if (dim1 !== 1 && dim2 !== 1 && dim1 !== dim2)\n      throw new Error(`Can not broadcast axis ${axis} with sizes ${dim1} and ${dim2}`);\n    shape.unshift(Math.max(dim1, dim2));\n  }\n  return [shape, shapeA, shapeB];\n}\n\n/** @typedef {(A:ArrayOrConstant, B:ArrayOrConstant, out?:NDArray|null)=>NDArray} BinaryOperator */\n/** @typedef {(other:ArrayOrConstant, out:NDArray|null)=>NDArray} SelfBinaryOperator */\n\nfunction __make_operator(dtype, func) {\n  function operator(A, B, out = null) {\n    if (this instanceof NDArray) return operator.bind(NDArray.prototype)(this, ...arguments);\n    return binary_operation(A, B, func, dtype, out);\n  };\n  return /**@type {BinaryOperator}*/(operator);\n}\n\nfunction __make_operator_special(funcNum, funcBool) {\n  /** @param {NDArray?} out */\n  function operator(A, B, out = null) {\n    if (this instanceof NDArray) return operator.bind(NDArray.prototype)(this, ...arguments);\n    A = asarray(A);\n    B = asarray(B);\n    let dtype = A.dtype, func;\n    if (A.dtype != B.dtype) console.warn(`Warning: operating arrays of different dtypes. Using ${dtype}`);\n    if (dtype == Boolean) func = funcBool;\n    else func = funcNum;\n    return binary_operation(A, B, func, dtype, out);\n  };\n  return /**@type {BinaryOperator}*/(operator);\n}\n\nconst op_binary = {\n  \"+\": __make_operator(Number, (a, b) => a + b),\n  \"-\": __make_operator(Number, (a, b) => a - b),\n  \"*\": __make_operator(Number, (a, b) => a * b),\n  \"/\": __make_operator(Number, (a, b) => a / b),\n  \"%\": __make_operator(Number, (a, b) => (a % b)),\n  \"//\": __make_operator(Number, (a, b) => Math.floor(a / b)),\n  \"**\": __make_operator(Number, (a, b) => Math.pow(a, b)),\n  \"<\": __make_operator(Boolean, (a, b) => a < b),\n  \">\": __make_operator(Boolean, (a, b) => a > b),\n  \">=\": __make_operator(Boolean, (a, b) => a >= b),\n  \"<=\": __make_operator(Boolean, (a, b) => a <= b),\n  \"==\": __make_operator(Boolean, (a, b) => a == b),\n  \"!=\": __make_operator(Boolean, (a, b) => a != b),\n  \"|\": __make_operator_special((a, b) => a | b, (a, b) => a || b),\n  \"&\": __make_operator_special((a, b) => a & b, (a, b) => a && b),\n  \"^\": __make_operator(Number, (a, b) => a ^ b),\n  \"<<\": __make_operator(Number, (a, b) => a << b),\n  \">>\": __make_operator(Number, (a, b) => a >> b),\n  // Operators with custom ascii identifiers:\n  \"or\": __make_operator(Boolean, (a, b) => a || b),\n  \"and\": __make_operator(Boolean, (a, b) => a && b),\n  \"xor\": __make_operator((a, b) => !(a) != !(b)),\n\n  \"max\": __make_operator(Number, (a, b) => Math.max(a, b)),\n  \"min\": __make_operator(Number, (a, b) => Math.min(a, b)),\n\n  // \"isclose\": ,\n}\n\nop_binary[\"↑\"] = op_binary[\"max\"];\nop_binary[\"↓\"] = op_binary[\"min\"];\nop_binary[\"≤\"] = op_binary[\"leq\"];\nop_binary[\"≥\"] = op_binary[\"geq\"];\nop_binary[\"≠\"] = op_binary[\"neq\"];\nop_binary[\"↑=\"] = op_binary[\"max=\"];\nop_binary[\"↓=\"] = op_binary[\"min=\"];\n// op[\"≈≈\"] = op[MyArray.prototype.isclose,\n\n\n/** @typedef {(A:ArrayOrConstant, out?:NDArray|null)=>NDArray} UnaryOperator */\n/** @typedef {(out?:NDArray|null)=>NDArray} SelfUnaryOperator */\n\nconst op_unary = {\n  // Unary operators:\n  \"~\": elementwise.bitwise_not,\n  \"not\": elementwise.logical_not,\n};\n\n\n/** @param {indexes.GeneralIndexSpec[]} indexesSpec */\n\nfunction assign_operation(tgt, src, indexesSpec, func, dtype) {\n  // @ts-ignore\n  if (this instanceof NDArray) return assign_operation(this, ...arguments);\n\n  if (tgt['__warnAssignment']) {\n    console.warn(`Warning: You are assigning on a copy that resulted from an advanced index on a source array.\\nIf this is intentional, use yourArray = source.withKwArgs({copy:true}).index(...yourIndex) to make explicit your awareness of the copy operation.\\nInstead, if you want to assign to the source array, use source.op('=', other, ...yourIndex).\\n`);\n    delete tgt['__warnAssignment'];\n  }\n  const { _binary_operation } = NDArray.prototype;\n  if (!(tgt instanceof NDArray)) return _assign_operation_toJS(tgt, src, indexesSpec, func, dtype)\n  if (!indexesSpec) {\n    _binary_operation(tgt, src, func, dtype, tgt);\n  } else {\n    src = asarray(src);\n    let { indices } = indexes.AxesIndex.prototype.parse(tgt.shape, indexesSpec);\n    let tmpTgt;\n    if (func == null) {\n      // Small optimization: unlike \"+=\", \"*=\", etc., for \"=\", we don't need to reed the target\n      func = (a, b) => b;\n      tmpTgt = NDArray.prototype._new(indices.length, () => undefined, tgt.dtype);\n    } else {\n      tmpTgt = asarray(indices.map(i => tgt._flat[i]));\n    }\n    _binary_operation(tmpTgt, ravel(src), func, dtype, tmpTgt);\n    for (let i of indices) tgt._flat[i] = tmpTgt._flat[i];\n  }\n};\n\n\n/**\n * @param {any[]} tgtJS\n * @param {any} src\n * @param {any} func\n * @param {any} dtype\n * @param {indexes.GeneralIndexSpec[]} indexesSpec\n */\nfunction _assign_operation_toJS(tgtJS, src, indexesSpec, func, dtype) {\n  if (!Array.isArray(tgtJS)) throw new Error(`Can not assign to a non-array. Found ${typeof tgtJS}: ${tgtJS}`);\n  console.warn('Assignment to JS array is experimental and slow.')\n  // Parse the whole array\n  const cpy = asarray(tgtJS);\n  assign_operation(cpy, src, indexesSpec, func, dtype);\n  // WARNING: Creates a copy. This is terrible for arr[2, 4, 3] = 5\n  const outJS = NDArray.prototype.modules.jsInterface.toJS(cpy);\n  while (tgtJS.length) tgtJS.pop();\n  // @ts-ignore\n  tgtJS.push(...outJS);\n}\n\n\n\n/** @typedef {{(tgt:NDArray, src:ArrayOrConstant):NDArray; (tgt:NDArray, where:import(\"./core-indexes\").Index, src:ArrayOrConstant):NDArray; }} AssignmentOperator */\n/** @typedef {{(other:ArrayOrConstant):NDArray; (where:import(\"./core-indexes\").Index, other:ArrayOrConstant):NDArray; }} SelfAssignmentOperator */\n\n\n/**@returns {AssignmentOperator} */\nfunction __make_assignment_operator(dtype, func) {\n  function operator(tgt, src, indexesSpec) {\n    if (this instanceof NDArray) return operator.bind(NDArray.prototype)(this, ...arguments);\n    return assign_operation(tgt, src, indexesSpec, func, dtype);\n  }\n  return operator;\n}\n\nconst op_assign = {\n  \"=\": __make_assignment_operator(Number, (a, b) => b),\n  \"+=\": __make_assignment_operator(Number, (a, b) => a + b),\n  \"-=\": __make_assignment_operator(Number, (a, b) => a - b),\n  \"*=\": __make_assignment_operator(Number, (a, b) => a * b),\n  \"/=\": __make_assignment_operator(Number, (a, b) => a / b),\n  \"%=\": __make_assignment_operator(Number, (a, b) => (a % b)),\n  \"//=\": __make_assignment_operator(Number, (a, b) => Math.floor(a / b)),\n  \"**=\": __make_assignment_operator(Number, (a, b) => Math.pow(a, b)),\n  \"|=\": __make_assignment_operator(Number, (a, b) => a | b),\n  \"&=\": __make_assignment_operator(Number, (a, b) => a & b),\n  \"^=\": __make_assignment_operator(Number, (a, b) => a ^ b),\n  \"<<=\": __make_assignment_operator(Number, (a, b) => a << b),\n  \">>=\": __make_assignment_operator(Number, (a, b) => a >> b),\n  // Operators with custom ascii identifiers:\n  \"max=\": __make_assignment_operator(Number, (a, b) => Math.max(a, b)),\n  \"min=\": __make_assignment_operator(Number, (a, b) => Math.min(a, b)),\n  \"or=\": __make_assignment_operator(Boolean, (a, b) => a || b),\n  \"and=\": __make_assignment_operator(Boolean, (a, b) => a && b),\n};\n\n\n// ====================================\n\nfunction isclose(A, B, rtol = 1.e-5, atol = 1.e-8, equal_nan = false) {\n  ({ rtol, atol, equal_nan } = Object.assign({ rtol, atol, equal_nan }, this));\n  const func = (a, b) => {\n    if (Number.isFinite(a) && Number.isFinite(b)) return Math.abs(a - b) <= atol + rtol * b;\n    return (a == b) || (equal_nan && Number.isNaN(a) && Number.isNaN(b));\n  }\n  return binary_operation(A, B, func, Boolean)\n}\n\nfunction allclose(A, B, rtol = 1.e-5, atol = 1.e-8, equal_nan = false) {\n  ({ rtol, atol, equal_nan } = Object.assign({ rtol, atol, equal_nan }, this));\n  // Equivalent to all(isclose(A, B, rtol, atol, equal_nan)), but shortcutting if false \n  const func = (a, b) => { //copied from isclose\n    if (Number.isFinite(a) && Number.isFinite(b)) return Math.abs(a - b) <= atol + rtol * b;\n    return (a == b) || (equal_nan && Number.isNaN(a) && Number.isNaN(b));\n  }\n  const different = new Error('');\n  const wrapper = (a, b) => {\n    if (!func(a, b)) throw different;\n    return 0;\n  }\n  try { binary_operation(A, B, wrapper, Number) }\n  catch (err) {\n    if (err === different) return false;\n    else throw err;\n  }\n  return true;\n}\n\n\nmodule.exports = {\n  op_binary, op_assign, op_unary,\n  binary_operation, assign_operation,\n  isclose, allclose,\n} ","//@ts-check\n\n\n/** @typedef {import(\"./core\")} NDArray*/\n\nconst { NDArray } = require(\"./globals\").GLOBALS;\n\n\nfunction humanReadable(arr) {\n  if (arr.shape.length == 0) return arr.flat[0].toString();\n  let budgets = arr.shape.map(_ => 1);\n  let lBudget = 30;\n  for (let i = 0; i < arr.shape.length; i++) {\n    let before = budgets[i];\n    budgets[i] = Math.min(arr.shape[i], lBudget);\n    if (budgets[i] > before) lBudget = Math.floor(lBudget / (budgets[i] - before));\n  }\n  let rBudget = 30;\n  for (let i = arr.shape.length - 1; i >= 0; i--) {\n    let before = budgets[i];\n    budgets[i] = Math.min(arr.shape[i], rBudget);\n    if (budgets[i] > before) rBudget = Math.floor(rBudget / (budgets[i] - before));\n  }\n  function simplify(list, depth = 0) {\n    if (depth == arr.shape.length) return list;\n    if (2 * budgets[depth] >= list.length) {\n      return list.map(l => simplify(l, depth + 1));\n    }\n    const left = list.slice(0, budgets[depth]).map(l => simplify(l, depth + 1));\n    const right = list.slice(-budgets[depth]).map(l => simplify(l, depth + 1));\n    return [...left, '...', ...right];\n  }\n  let rLimit = arr.shape.length - 1;\n  while (rLimit > 0 && arr.shape[rLimit] == 1) {\n    rLimit--;\n  }\n  if (arr.dtype == Number) arr = NDArray.prototype.modules.elementwise.round(arr, 2);\n  let list = NDArray.prototype.modules.jsInterface.toJS(arr);\n\n  function str(list, indent = 0, depth = 0) {\n    if (list == '...' || depth >= arr.shape.length) return list;\n    if (depth == arr.shape.length - 1) return `[${list.join(', ')}]`;\n    let sep = depth >= rLimit ? ' ' : '\\n' + ' '.repeat(indent + 1);\n    const out = [];\n    for (let i = 0; i < list.length; i++) {\n      let s = str(list[i], indent + 1, depth + 1) + ',';\n      out.push(i < list.length - 1 ? s : s.slice(0, -1));\n    }\n    return `[${out.join(sep)}]`;\n  }\n\n  let prefix = 'np';\n  let suffix = `, shape=(${arr.shape}), dtype=${arr.dtype.name}`;\n  let out = str(simplify(list), 1 + prefix.length);\n  function alignColumns(inputString, delimiter = ',') {\n    // Split the input string into rows\n    const rows = inputString.split('\\n');\n    // Initialize an array to store the maximum width of each column\n    const columnWidths = Array(rows[0].split(delimiter).length).fill(0);\n    // Find the maximum width for each column\n    for (const row of rows) {\n      let columns = row.split(delimiter);\n      for (let i = 0; i < columns.length; i++) {\n        columnWidths[i] = Math.max(columnWidths[i], columns[i].trim().length);\n      }\n    }\n    // Build the formatted outputs\n    let formattedString = '';\n    for (const row of rows) {\n      let columns = row.split(delimiter);\n      columns = columns.map((s, i) => i == columns.length - 1 ? s : s + delimiter);\n      for (let i = 0; i < columns.length; i++) {\n        const column = columns[i].trim();\n        formattedString += column.padStart(columnWidths[i] + 1).padEnd(columnWidths[i] + 2); // Add 1 for padding\n      }\n      formattedString += '\\n';\n    }\n    return formattedString;\n  }\n  out = out.replace(/.*?(\\n|$)/g, (match) => {\n    // Split with a newline every 0 characters, but only after a comma,\n    return match.replace(/(.{60,}?,)/g, '$1\\n');\n  }).replace(/\\n+/g, '\\n');\n  out = alignColumns(`${prefix}(${out}`).trim();\n  out = `${out}${suffix})`;\n  return out;\n\n}\n\n\nmodule.exports = {\n  humanReadable\n} ","//@ts-check\n\n/** @typedef {import(\"./core\")} NDArray*/\n\nconst { NDArray } = require(\"./globals\").GLOBALS;\n\n\n/** @typedef {null|number} AxisArg */\n\n\n// ==============================\n//       Reducing functions\n// ==============================\n\n\nfunction reduce(arr, axis, keepdims, reducer, dtype = Number) {\n  const { __shape_shifts, __as_boolean, __number_collapse } = NDArray.prototype;\n  keepdims = __as_boolean(keepdims);\n  // console.log({ arr })\n  arr = NDArray.prototype.modules.basic.asarray(arr);\n  if (axis == null) return reducer(arr.flat);\n  if (axis < 0) axis = arr.shape.length - 1;\n  let m = arr.shape[axis];\n  let shift = __shape_shifts(arr.shape)[axis];\n  const groups = Array.from({ length: m }, (_) =>/**@type {number[]}*/([]));\n  arr.flat.forEach((value, i) => groups[(Math.floor(i / shift)) % m].push(value));\n  // Transpose it:\n  let nCols = arr.size / m;\n  const groupsT = [];\n  for (let j = 0; j < nCols; j++) {\n    const newRow = [];\n    for (let i = 0; i < m; i++) newRow.push(groups[i][j]);\n    groupsT.push(newRow);\n  }\n  const flat = groupsT.map(reducer);\n  let shape = [...arr.shape];\n  if (keepdims) shape[axis] = 1;\n  else shape = shape.filter((_, i) => i != axis);\n  const out = new NDArray(flat, shape, dtype)\n  return __number_collapse(out);\n};\n\nfunction __make_reducer(dtype, reducer) {\n  /**\n   * @param {Array} arr\n  * @param {AxisArg} axis\n   * @param {boolean} keepdims\n   */\n  return function (arr, axis = null, keepdims = false) {\n    ({ axis, keepdims } = Object.assign({ axis, keepdims }, this));\n    return reduce(arr, axis, keepdims, reducer, dtype);\n  };\n}\n\nconst reducers = {};\n\nreducers.sum = __make_reducer(Number, (arr) => arr.reduce((a, b) => a + b, 0));\nreducers.product = __make_reducer(Number, (arr) => arr.reduce((a, b) => a * b, 1));\nreducers.any = __make_reducer(Boolean, (arr) => {\n  for (let x of arr) if (x) return true;\n  return false;\n});\nreducers.all = __make_reducer(Boolean, (arr) => {\n  for (let x of arr) if (!x) return false;\n  return true;\n});\nreducers.max = __make_reducer(Number, (arr) => Math.max(...arr));\nreducers.min = __make_reducer(Number, (arr) => Math.min(...arr));\nreducers.argmax = __make_reducer(Number, (arr) => arr.indexOf(Math.max(...arr)));\nreducers.argmin = __make_reducer(Number, (arr) => arr.indexOf(Math.min(...arr)));\nreducers.mean = __make_reducer(Number, (arr) => arr.reduce((a, b) => a + b, 0) / arr.length);\n\nreducers.var = function (arr, axis = null, keepdims = false) {\n  ({ axis, keepdims } = Object.assign({ axis, keepdims }, this));\n  const arrMean = reducers.mean.bind({ axis, keepdims: true })(arr);\n  const { op_binary: op } = NDArray.prototype.modules.operators;\n  arr = op[\"-\"](arr, arrMean);\n  arr = op[\"*\"](arr, arr);\n  return reducers.mean.bind({ axis, keepdims })(arr);\n};\nreducers.std = function (arr, axis = null, keepdims = false) {\n  ({ axis, keepdims } = Object.assign({ axis, keepdims }, this));\n  const variance = reducers.var.bind({ axis, keepdims })(arr);\n  const { op_binary: op } = NDArray.prototype.modules.operators;\n  return op[\"**\"](variance, 0.5);\n};\n\nmodule.exports = {\n  reduce, reducers,\n} ","//@ts-check\n\n/** @typedef {import(\"./core\")} NDArray*/\n\nconst { NDArray } = require(\"./globals\").GLOBALS;\nconst { allEq } = require(\"./js-utils\");\n\n/**\n * @param {NDArray} arr\n * @param {number} axis\n */\nfunction apply_along_axis(arr, axis, transform, dtype = Number) {\n  arr = NDArray.prototype.modules.basic.asarray(arr)\n  if (axis == null) return transform(arr.flat);\n  const nDims = arr.shape.length;\n  if (axis < 0) axis = nDims + axis;\n  if (axis !== nDims - 1) {\n    // Transpose to end, apply, and transpose back:\n    const tmp = swapAxes(arr, axis, -1);\n    const out = apply_along_axis(tmp, -1, transform, dtype);\n    return swapAxes(out, axis, -1);\n  }\n\n  let m = arr.shape[axis];\n  let shift = NDArray.prototype.__shape_shifts(arr.shape)[axis];\n  const groups = Array.from({ length: m }, (_) =>/**@type {number[]}*/([]));\n  arr.flat.forEach((value, i) => groups[(Math.floor(i / shift)) % m].push(value));\n  // Transpose it:\n  let nCols = arr.size / m;\n  const groupsT = [];\n  for (let j = 0; j < nCols; j++) {\n    const newRow = [];\n    for (let i = 0; i < m; i++) newRow.push(groups[i][j]);\n    groupsT.push(newRow);\n  }\n  const data = groupsT.map(transform);\n  const tmp = NDArray.prototype.fromJS(data);\n  const shape = [...arr.shape.slice(0, axis), ...tmp.shape.slice(1), ...arr.shape.slice(axis + 1),];\n  const out = new NDArray(tmp.flat, shape, dtype)\n  return NDArray.prototype.__number_collapse(out);\n}\n\n/**\n * @param {NDArray} A\n */\nfunction sort(A, axis = -1) {\n  ({ axis } = Object.assign({ axis }, this));\n  return apply_along_axis(A, axis, (arr) => {\n    const cpy = [...arr];\n    cpy.sort((a, b) => a - b);\n    return cpy;\n  }, A.dtype);\n}\n\n/** @param {NDArray} arr @param {null|number[]} axes */\nfunction transpose(arr, axes = null) {\n  ({ axes } = Object.assign({ axes }, this));\n  let nDims = arr.shape.length;\n  if (axes == null) return transpose(arr, Array.from({ length: nDims }, (_, i) => i).reverse());\n  if (axes.length !== nDims) throw new Error(`Axes must have length ${nDims}. Found ${axes.length}`);\n  let inv = Array.from({ length: nDims }, () => -1);\n  for (let i = 0; i < nDims; i++) inv[axes[i]] = i;\n  for (let i = 0; i < nDims; i++) if (inv[i] == -1) throw new Error(`Axes must contain all dimensions. Missing ${i}.`);\n  const srcShifts = NDArray.prototype.__shape_shifts(arr.shape);\n  let shape = axes.map((j) => arr.shape[j]);\n  let shifts = axes.map((j) => srcShifts[j]);\n  // Copied from slice:\n  const indices = [];\n  const tuple = new Array(shape.length).fill(0);\n  let cursor = 0;\n  while (true) {\n    if (!isFinite(cursor)) throw new Error(`Programming error`);\n    indices.push(cursor);\n    let axis = nDims - 1;\n    while (axis >= 0) {\n      tuple[axis]++;\n      cursor += shifts[axis];\n      if (tuple[axis] < shape[axis]) break;\n      // Overflow\n      cursor -= shifts[axis] * shape[axis];\n      tuple[axis] = 0;\n      axis--;\n    };\n    if (axis < 0) break;\n  }\n  // Now, just copy the data:\n  const src = arr.flat;\n  return new NDArray(indices.map((i) => src[i]), shape, arr.dtype);\n}\n\n\n/** @param {NDArray} arr @param {number} axisA @param {number} axisB */\nfunction swapAxes(arr, axisA, axisB) {\n  arr = NDArray.prototype.modules.basic.asarray(arr)\n  const nDims = arr.shape.length;\n  if (axisA < 0) axisA = nDims + axisA;\n  if (axisB < 0) axisB = nDims + axisB;\n  const perm = Array.from({ length: nDims }, (_, i) => i);\n  perm[axisA] = axisB;\n  perm[axisB] = axisA;\n  return transpose(arr, perm);\n}\n\n\n/** @param {NDArray[]} arrays @param {number|null} axis */\nfunction concatenate(arrays, axis = null) {\n  ({ axis } = Object.assign({ axis }, this));\n  if (arrays instanceof NDArray) arrays = [...arrays];\n  arrays = arrays.map(NDArray.prototype.modules.basic.asarray);\n  if (axis == null) {\n    arrays = arrays.map(arr => NDArray.prototype.modules.basic.reshape(arr, -1));\n    axis = 0;\n  }\n  if (!arrays.length) throw new Error(`Expected at least two arrays`);\n  const nDims = arrays[0].shape.length;\n  if (axis < 0) axis = nDims + axis;\n  const shapeIn = [...arrays[0].shape];\n  const flat = [];\n  const shape = shapeIn.map((_, i) => i == 0 ? 0 : shapeIn[i == axis ? 0 : i]);\n  for (let arr of arrays) {\n    if (!allEq(arr.shape.filter((_, i) => i != axis), shapeIn.filter((_, i) => i != axis))) throw new Error(`Inconsistent input shape ${shapeIn} with respect to ${arr.shape.map((v, i) => i == axis ? '?' : v)}`);\n    shape[0] += arr.shape[axis];\n    arr = axis == 0 ? arr : swapAxes(arr, axis, 0);\n    flat.push(...arr.flat);\n  }\n  // TO DO: infer or expect dtype here:\n  const out = new NDArray(flat, shape);\n  if (axis == 0) return out;\n  else return swapAxes(out, axis, 0);\n}\n\n\n/** @param {NDArray[]} arrays @param {number} axis */\nfunction stack(arrays, axis = 0) {\n  ({ axis } = Object.assign({ axis }, this));\n  if (arrays instanceof NDArray) arrays = [...arrays];\n  if (!Array.isArray(arrays)) throw new Error(`Expected list of arrays. Found ${typeof arrays}`);\n  arrays = arrays.map(NDArray.prototype.modules.basic.asarray);\n  if (!arrays.length) throw new Error(`Expected at least two arrays`);\n  const shapeIn = [...arrays[0].shape];\n  if (axis < 0) axis = shapeIn.length + 1 + axis;\n  const shapeBroadcast = [...shapeIn.slice(0, axis), 1, ...shapeIn.slice(axis)];\n  console.log({ shapeBroadcast })\n  const bArrays = [];\n  for (let arr of arrays) {\n    if (!allEq(arr.shape, shapeIn)) throw new Error(`Inconsistent input shape ${arr.shape} with respect to ${arr.shape}`);\n    bArrays.push(arr.reshape(shapeBroadcast));\n  }\n  return concatenate(bArrays, axis);\n}\n\n\n\n\nmodule.exports = {\n  apply_along_axis, sort, transpose,\n  concatenate, stack,\n} ","//@ts-check\n/** @typedef {NumberConstructor|BooleanConstructor} DType */\n/** @typedef {NDArray|number|boolean} ArrayOrConstant */\n\nclass NDArray {\n  /**\n   * @param {number[]} flat actually number|boolean\n   * @param {number[]} shape\n   * @param {*} dtype\n   */\n  constructor(flat, shape, dtype = Number) {\n    this.shape = shape; // invariant: immutable\n    this._flat = flat;\n    this.dtype = dtype;\n    this._simpleIndexes = null;\n  }\n  /** @type {import(\"./core-indexes\").AxesIndex|null} */ _simpleIndexes;\n\n  get size() {\n    return this._simpleIndexes == null ? this._flat.length : this._simpleIndexes.size;\n  }\n  get flat() {\n    if (this._simpleIndexes == null) return this._flat;\n    const indices = this._simpleIndexes.indices;\n    return indices.map(i => this._flat[i]);\n  }\n  set flat(list) {\n    if (list.length != this.size)\n      throw new Error(`Length mismatch. Can't write ${list.length} values into ${this.size} available positions.`);\n    const n = this.size;\n    if (this._simpleIndexes == null) {\n      for (let i = 0; i < n; i++) this._flat[i] = list[i];\n    } else {\n      const indices = this._simpleIndexes.indices;\n      for (let i = 0; i < n; i++) this._flat[indices[i]] = list[i];\n    }\n  }\n  get T() {\n    return this.transpose();\n  }\n  __popKwArgs() {\n    let out = this['__kwArgs'];\n    if (out === undefined) return {};\n    delete this['__kwArgs'];\n    return out;\n  }\n  /** @param {Object<string, any>} kwArgs */\n  withKwArgs(kwArgs) {\n    this['__kwArgs'] = kwArgs;\n    return this;\n  }\n  *[Symbol.iterator]() {\n    for (let i = 0; i < this.shape[0]; i++) yield this.index(i);\n  }\n  get length() {\n    return this.shape[0] || 0;\n  }\n}\n\nrequire('./globals').GLOBALS.NDArray = NDArray;\n\n\nconst modules = {};\nNDArray.prototype.modules = modules; // NEEDED before loading the modules!\n\nmodules.basic = require('./core-basic');\nmodules.indexes = require('./core-indexes');\nmodules.elementwise = require('./core-elementwise');\nmodules.print = require('./core-print');\nmodules.reduce = require('./core-reduce');\nmodules.operators = require('./core-operators');\nmodules.transform = require('./core-transform');\nmodules.jsInterface = require('./core-js-interface');\n\n\n\n// ==============================\n//    Basic methods\n// ==============================\n\nconst basic = modules.basic;\n\nNDArray.prototype.reshape = function (shape, ...more_shape) {\n  return basic.reshape(this, shape, ...more_shape);\n};\n\nNDArray.prototype.ravel = function () {\n  return basic.ravel(this);\n};\n\nNDArray.prototype.copy = function () {\n  return basic.copy(this);\n};\n\n\nNDArray.prototype.__shape_shifts = function (shape) {\n  // increasing one by one on a given axis is increasing by shifts[axis] in flat representation\n  const shifts = Array.from({ length: shape.length }, (_) => 0);\n  shifts[shape.length - 1] = 1;\n  for (let i = shape.length - 2; i >= 0; i--) shifts[i] = shifts[i + 1] * shape[i + 1];\n  return shifts;\n}\n\n/**\n * If the array is 0D, it returns it's unique element (number or boolean).\n * The signature is kept as NDArray for type consistency, even though the\n * output is a number or a boolean. This is consistent with the facts that\n * (1) all functions requiring arrays work with numbers as well because they call asarray,\n * and (2) semantically, a constant is an array.\n * @param {NDArray} arr \n * @returns {NDArray|number}\n */\nNDArray.prototype.__number_collapse = function (arr, expect = false) {\n  if (!arr.shape.length) return arr.flat[0];\n  if (expect) throw new Error(`Expected constant. Got array with shape ${arr.shape}`);\n  return arr;\n}\n\nNDArray.prototype.__parse_shape = function (list) {\n  if (Array.isArray(list)) return list;\n  if (list instanceof NDArray) {\n    if (list.shape.length > 1) {\n      throw new Error(`Expected flat list. Got array with shape ${list.shape}`);\n    }\n    return list.flat;\n  }\n  if (typeof list == \"number\") return [list];\n  throw new Error(`Expected list. Got ${list}`);\n}\n\nNDArray.prototype.__as_boolean = function (obj) {\n  if (obj instanceof NDArray) obj = NDArray.prototype.__number_collapse(obj, true);\n  else if (typeof obj == 'string') throw new Error(`'string' object can not be interpreted as boolean: ${obj}`);\n  return !!(0 + obj);\n}\nNDArray.prototype.__as_number = function (obj) {\n  if (obj instanceof NDArray) obj = NDArray.prototype.__number_collapse(obj, true);\n  else if (typeof obj == 'string') throw new Error(`'string' object can not be interpreted as boolean: ${obj}`);\n  return parseFloat(obj);\n}\n\n\nNDArray.prototype._new = function (shape, f, dtype) {\n  shape = NDArray.prototype.__parse_shape(shape);\n  const size = shape.reduce((a, b) => a * b, 1);\n  const flat = Array.from({ length: size }, f);\n  return new NDArray(flat, shape, dtype);\n};\n\n\n// ==============================\n//    Indexing\n// ==============================\n\n/**\n * @param {import(\"./core-indexes\").GeneralIndexSpec[]} indexesSpec\n */\nNDArray.prototype.index = function (...indexesSpec) {\n  return modules.indexes.index(this, ...indexesSpec);\n}\n\n// ==============================\n//    Printing\n// ==============================\n\nNDArray.prototype.toString = function () {\n  return modules.print.humanReadable(this);\n}\n\n\n// ==============================\n//    Reduce\n// ==============================\n\n\n\n\n\n\nfunction reduceDecorator(func) {\n  /** @param {import(\"./core-reduce\").AxisArg} axis  @param {boolean} keepdims */\n  return function (axis = null, keepdims = false) {\n    ({ axis, keepdims } = Object.assign({ axis, keepdims }, this.__popKwArgs()));\n    return func(this, axis, keepdims);\n  }\n}\n\nNDArray.prototype.sum = reduceDecorator(modules.reduce.reducers.sum);\nNDArray.prototype.product = reduceDecorator(modules.reduce.reducers.product);\nNDArray.prototype.any = reduceDecorator(modules.reduce.reducers.any);\nNDArray.prototype.all = reduceDecorator(modules.reduce.reducers.all);\nNDArray.prototype.max = reduceDecorator(modules.reduce.reducers.max);\nNDArray.prototype.min = reduceDecorator(modules.reduce.reducers.min);\nNDArray.prototype.argmax = reduceDecorator(modules.reduce.reducers.argmax);\nNDArray.prototype.argmin = reduceDecorator(modules.reduce.reducers.argmin);\nNDArray.prototype.mean = reduceDecorator(modules.reduce.reducers.mean);\nNDArray.prototype.var = reduceDecorator(modules.reduce.reducers.var);\nNDArray.prototype.std = reduceDecorator(modules.reduce.reducers.std);\n\n\n\n// ==============================\n//       Operators: Binary operations, assignment operations and unary boolean_not\n// ==============================\n\nNDArray.prototype._binary_operation = modules.operators.binary_operation;\n\n\n/**\n * @param {import(\"./core-operators\").BinaryOperator} func\n * @returns {import(\"./core-operators\").SelfBinaryOperator}\n */\nfunction binaryOpDecorator(func) {\n  return function (other, out = null) {\n    ({ out } = Object.assign({ out }, this.__popKwArgs()));\n    return func(this, other, out);\n  }\n}\n\nNDArray.prototype.add = binaryOpDecorator(modules.operators.op_binary[\"+\"]);\nNDArray.prototype.subtract = binaryOpDecorator(modules.operators.op_binary[\"-\"]);\nNDArray.prototype.multiply = binaryOpDecorator(modules.operators.op_binary[\"*\"]);\nNDArray.prototype.divide = binaryOpDecorator(modules.operators.op_binary[\"/\"]);\nNDArray.prototype.mod = binaryOpDecorator(modules.operators.op_binary[\"%\"]);\nNDArray.prototype.divide_int = binaryOpDecorator(modules.operators.op_binary[\"//\"]);\nNDArray.prototype.pow = binaryOpDecorator(modules.operators.op_binary[\"**\"]);\n\nNDArray.prototype.maximum = binaryOpDecorator(modules.operators.op_binary[\"↑\"]);\nNDArray.prototype.minimum = binaryOpDecorator(modules.operators.op_binary[\"↓\"]);\n\nNDArray.prototype.bitwise_or = binaryOpDecorator(modules.operators.op_binary[\"|\"]);\nNDArray.prototype.bitwise_and = binaryOpDecorator(modules.operators.op_binary[\"&\"]);\nNDArray.prototype.bitwise_xor = binaryOpDecorator(modules.operators.op_binary[\"^\"]);\nNDArray.prototype.bitwise_shift_left = binaryOpDecorator(modules.operators.op_binary[\"<<\"]);\nNDArray.prototype.bitwise_shift_right = binaryOpDecorator(modules.operators.op_binary[\">>\"]);\n\nNDArray.prototype.logical_or = binaryOpDecorator(modules.operators.op_binary[\"or\"]);\nNDArray.prototype.logical_and = binaryOpDecorator(modules.operators.op_binary[\"and\"]);\nNDArray.prototype.logical_xor = binaryOpDecorator(modules.operators.op_binary[\"xor\"]);\n\nNDArray.prototype.greater = binaryOpDecorator(modules.operators.op_binary[\">\"]);\nNDArray.prototype.less = binaryOpDecorator(modules.operators.op_binary[\"<\"]);\nNDArray.prototype.greater_equal = binaryOpDecorator(modules.operators.op_binary[\">=\"]);\nNDArray.prototype.less_equal = binaryOpDecorator(modules.operators.op_binary[\"<=\"]);\nNDArray.prototype.equal = binaryOpDecorator(modules.operators.op_binary[\"==\"]);\nNDArray.prototype.not_equal = binaryOpDecorator(modules.operators.op_binary[\"!=\"]);\n\n\n\n/**\n * @param {import(\"./core-operators\").UnaryOperator} func\n * @returns {import(\"./core-operators\").SelfUnaryOperator}\n */\nfunction unaryOpDecorator(func) {\n  return function (out = null) {\n    ({ out } = Object.assign({ out }, this.__popKwArgs()));\n    return func(this, out);\n  }\n}\n// Unary operations: only boolean_not. Positive is useless and negative is almost useless\nNDArray.prototype.bitwise_not = unaryOpDecorator(modules.operators.op_unary[\"~\"]);\nNDArray.prototype.logical_not = unaryOpDecorator(modules.operators.op_unary[\"not\"]);\n\n\nNDArray.prototype.isclose = modules.operators.isclose;\nNDArray.prototype.allclose = modules.operators.allclose;\n\n\n/**\n * @param {import(\"./core-operators\").AssignmentOperator} func\n * @returns {import(\"./core-operators\").SelfAssignmentOperator}\n */\nfunction assignOpDecorator(func) {\n  //@ts-ignore\n  return function (...args) { return func(this, ...args); }\n}\nNDArray.prototype.assign = assignOpDecorator(modules.operators.op_assign[\"=\"]);\nNDArray.prototype.add_assign = assignOpDecorator(modules.operators.op_assign[\"+=\"]);\nNDArray.prototype.subtract_assign = assignOpDecorator(modules.operators.op_assign[\"-=\"]);\nNDArray.prototype.multiply_assign = assignOpDecorator(modules.operators.op_assign[\"*=\"]);\nNDArray.prototype.divide_assign = assignOpDecorator(modules.operators.op_assign[\"/=\"]);\nNDArray.prototype.mod_assign = assignOpDecorator(modules.operators.op_assign[\"%=\"]);\nNDArray.prototype.divide_int_assign = assignOpDecorator(modules.operators.op_assign[\"//=\"]);\nNDArray.prototype.pow_assign = assignOpDecorator(modules.operators.op_assign[\"**=\"]);\n\nNDArray.prototype.maximum_assign = assignOpDecorator(modules.operators.op_assign[\"↑=\"]);\nNDArray.prototype.minimum_assign = assignOpDecorator(modules.operators.op_assign[\"↓=\"]);\n\nNDArray.prototype.bitwise_or_assign = assignOpDecorator(modules.operators.op_assign[\"|=\"]);\nNDArray.prototype.bitwise_and_assign = assignOpDecorator(modules.operators.op_assign[\"&=\"]);\nNDArray.prototype.bitwise_shift_left_assign = assignOpDecorator(modules.operators.op_assign[\"<<=\"]);\nNDArray.prototype.bitwise_shift_right_assign = assignOpDecorator(modules.operators.op_assign[\">>=\"]);\n\nNDArray.prototype.logical_or_assign = assignOpDecorator(modules.operators.op_assign[\"or=\"]);\nNDArray.prototype.logical_and_assign = assignOpDecorator(modules.operators.op_assign[\"and=\"]);\n\n\n\n// ==============================\n//    array instantiation and reshaping\n// ==============================\n\nNDArray.prototype.JS = function () {\n  return modules.jsInterface.toJS(this);\n}\nNDArray.prototype.fromJS = function (A) {\n  return modules.jsInterface.fromJS(A);\n}\n\n// ==============================\n//    elementwise methods\n// ==============================\n\nNDArray.prototype.round = function (decimals = 0) {\n  ({ decimals } = Object.assign({ decimals }, this.__popKwArgs()));\n  return modules.elementwise.round(this, decimals);\n};\n\n// ==============================\n//    transform methods\n// ==============================\n\n/** @param {null|number[]} axes */\nNDArray.prototype.transpose = function (axes = null) {\n  ({ axes } = Object.assign({ axes }, this.__popKwArgs()));\n  return modules.transform.transpose(this, axes);\n};\n\nNDArray.prototype.sort = function (axis = -1) {\n  ({ axis } = Object.assign({ axis }, this.__popKwArgs()));\n  modules.transform.sort(this, axis);\n  return null;\n};\n\n\n//=============================\n\n\n\n\n\n// /** @typedef {'+'|'-'|'*'} BinaryOperatorSymbol */\n// /** @typedef {'~'|'!'} UnaryOperatorSymbol */\n// /** @typedef {'='|'+='|'*='} AssignmentOperatorSymbol */\n\n// /**\n//  * @callback BinaryOp\n//  * @param  {BinaryOperatorSymbol} symbol\n//  * @param  {NDArray} other\n//  * @param  {NDArray?} out\n//  * @returns {NDArray}\n//  */\n// /**\n//  * @callback AssignmentOp\n//  * @param  {AssignmentOperatorSymbol} symbol\n//  * @param  {NDArray} other\n//  * @param  {...import(\"./core-indexes\").GeneralIndexSpec} indexSpec\n//  * @returns {NDArray}\n//  */\n// /**\n//  * @callback UnaryOp\n//  * @param  {UnaryOperatorSymbol} symbol\n//  * @returns {NDArray}\n//  */\n\n// // /**@type {BinaryOp|AssignmentOp}*/\n\n// /**\n//  * @overload\n//  * @param  {BinaryOperatorSymbol} symbol\n//  * @param  {NDArray} other\n//  * @param  {NDArray?} out\n//  * @returns {NDArray}\n// */\n// /**\n//  * @overload\n//  * @param  {AssignmentOperatorSymbol} symbol\n//  * @param  {NDArray} other\n//  * @param  {...import(\"./core-indexes\").GeneralIndexSpec} indexSpec\n//  * @returns {NDArray}\n// */\n// /**\n//  * @param  {UnaryOperatorSymbol} symbol\n//  * @returns {NDArray}\n// */\n// NDArray.prototype.op = function (...arguments) {\n\n//   return this;\n// }\n\n\n\n\n\nmodule.exports = NDArray;","//@ts-check\n/**\n * This file exists for the sole purpose splitting the class methods across multiple files\n * while preserving all features of intellisense or JSDoc without errors.\n * The main issue is that the implementation of the methods require NDArray very often.\n * It resolves circular dependencies by using a global variable imported in each module.\n * The main file must define `require('./core-globals').GLOBALS.NDArray = NDArray;` before\n * importing any of the files that use it.\n * \n * A template header for files importing NDArray from this file is given below.\n *    DO NOT use `const NDArray = require(\"./core-globals\").GLOBALS.NDArray;`.\n *    Use const {NDArray} = ... instead as indicated. (Intellisense stops working otherwise)\n */\n// /** @typedef {import(\"./core\")} NDArray*/\n// const { NDArray } = require(\"./core-globals\").GLOBALS;\n\n\n\n/** @typedef {typeof import(\"./core\")} NDArrayPrototype*/\n/** @typedef {typeof import(\"./index\")} npPrototype*/\n\nmodule.exports = {\n  GLOBALS: {\n    NDArray:/** @type {NDArrayPrototype}*/ (/** @type {*}*/ (null)),\n    np:/** @type {npPrototype}*/ (/** @type {*}*/ (null)),\n  },\n};","//@ts-check\n/** @typedef {import(\"./core\")} NDArray*/\n\nconst { NDArray, np } = require(\"./globals\").GLOBALS;\n\nvar ohm = require('ohm-js');\n\n\nconst grammar = {}\ngrammar.grammar = String.raw`\nArrayGrammar {\n  Instruction\n  = Variable \"[\" Slice \"]\" AssignSymbol ArithmeticLogicExp -- sliceAssignment\n  | ArithmeticLogicExp                       -- expression\n  \n  Variable\n   = \"#\" digit+ \"#\"\n  \n  AssignSymbol\n  =\"=\"|\"+=\"|\"-=\"|\"/=\"|\"%=\"|\"&=\"|\"|=\"|\"^=\"|\"@=\"\n  \n  /* Declaration in precedence order (weakest first) */\n  ArithmeticLogicExp = Precedence11\n\n  /* https://docs.python.org/3/reference/expressions.html */\n  Operator11 = \"<\" | \"<=\" | \">\" | \">=\" | \"!=\" | \"==\"\n  Operator10 = \"|\"\n  Operator09 = \"^\"\n  Operator08 = \"&\"\n  Operator07 = \"<<\" | \">>\"\n  Operator06 = \"+\" | \"-\"\n  Operator05 = \"*\" | \"@\" | \"/\" | \"//\" | \"%\"\n  Operator04 = \"~\" /* Unary */\n  Operator03 = \"+\" | \"-\" /* Unary. Special treatment to prevent \"-1.3\" to be \"-(array of 1.3)\" */\n  Operator02 = \"**\"\n  /* Operator01 = \"x[index]\" | \"x[index:index]\" | \"x(arguments...)\" | \"x.attribute\" */\n  /* Operator00 = \"(expressions...)\" */\n\n  Precedence11 = Precedence11 Operator11 Precedence10 | \"\" \"\" Precedence10\n  Precedence10 = Precedence10 Operator10 Precedence09 | \"\" \"\" Precedence09\n  Precedence09 = Precedence09 Operator09 Precedence08 | \"\" \"\" Precedence08\n  Precedence08 = Precedence08 Operator08 Precedence07 | \"\" \"\" Precedence07\n  Precedence07 = Precedence07 Operator07 Precedence06 | \"\" \"\" Precedence06\n  Precedence06 = Precedence06 Operator06 Precedence05 | \"\" \"\" Precedence05\n  Precedence05 = Precedence05 Operator05 Precedence04 | \"\" \"\" Precedence04\n  Precedence04 = \"\"           Operator04 Precedence03 | \"\" \"\" Precedence03 /* Unary */\n  Precedence03 = \"\"           Operator03 Precedence02 | \"\" \"\" Precedence02 /* Special */\n  Precedence02 = Precedence02 Operator02 Precedence03 | \"\" \"\" Precedence01\n  Precedence01 = Arr\n  \n  Parenthesis = \"(\" ArithmeticLogicExp \")\"\n  Arr\n    = Arr \".\" Name CallArgs     -- method\n    | Arr \".\" Name              -- attribute\n    | Arr \"[\" Slice \"]\"         -- slice\n    | Parenthesis\n    | Name (\".\" Name)* CallArgs -- call\n    | number\n    | Variable\n\n  Name  (an identifier)\n    = (letter|\"_\") (letter|\"_\"|digit)*\n\n  number  (a number)\n    = (\"+\"|\"-\")? digit* \".\" digit+ \"E\" (\"+\"|\"-\")? \"digit+\"\n    | (\"+\"|\"-\")? digit* \".\" digit+ \"e\" (\"+\"|\"-\")? \"digit+\"\n    | (\"+\"|\"-\")? digit* \".\" digit+  \"\"  \"\"        \"\"\n    | (\"+\"|\"-\")? digit+ \"\"  \"\"      \"\"  \"\"        \"\"\n  \n  int (an integer) = \"\"  digit+ | \"-\" digit+ | \"+\" digit+\n\n  CallArgs // Using empty strings instead of separate rules\n   = \"(\" Args \",\"  KwArgs \",\"? \")\"\n   | \"(\" Args \",\"? \"\"      \"\"  \")\"\n   | \"(\" \"\"   \",\"? KwArgs \",\"? \")\"\n   | \"(\" \"\"    \"\"  \"\"      \"\"  \")\"\n   \n  Args = NonemptyListOf<ArgValue, \",\">\n  KwArgs = NonemptyListOf<KwArg, \",\">\n  KwArg = Name \"=\" ArgValue\n\n  ArgValue = Constant | JsArray | ArithmeticLogicExp | String\n  Constant = \"True\" | \"False\" | \"None\" | \"np.nan\" | \"np.inf\"\n  JsArray\n    = \"[\" ListOf<ArgValue, \",\"> \",\"? \"]\"\n    | \"(\" ListOf<ArgValue, \",\"> \",\"? \")\"\n\n  String = \"\\'\" any* \"\\'\" | \"\\\"\" any* \"\\\"\"\n   \n  Slice = NonemptyListOf<SliceTerm, \",\">\n  SliceTerm\n    = SliceRange\n    | (\":\" | \"...\" | \"None\") -- constant\n    | JsArray\n    | ArithmeticLogicExp\n  \n  SliceRange\n    = int \":\" int \":\" int\n    | int \":\" int \"\"  \"\"\n    | int \":\" \"\"  \":\" int\n    | int \":\" \"\"  \"\"  \"\"\n    | \"\"  \":\" int \":\" int\n    | \"\"  \":\" int \"\"  \"\"\n    | \"\"  \":\" \"\"  \":\" int\n    | \"\"  \":\" \"\"  \"\"  \"\"\n}\n`;\n\ngrammar.ohmGrammar = ohm.grammar(grammar.grammar);\n\n\ngrammar.__makeSemantics = () => {\n\n\n  const semanticVariables = [];\n  const semantics = {\n    Instruction_sliceAssignment($tgt, _open, $indexesSpec, _close, $symbol, $src) {\n      const _tgt = $tgt.parse();\n      const _src = $src.parse();\n      const symbol = $symbol.sourceString;\n      const indexesSpec = $indexesSpec.parse();\n      let tgt = NDArray.prototype.modules.basic.asarray(_tgt);\n      NDArray.prototype.modules.operators.op_assign[symbol](_tgt, _src, indexesSpec);\n      if (tgt !== _tgt) {\n        // WARNING: Creates a copy. This is terrible for arr[2, 4, 3] = 5\n        tgt = NDArray.prototype.modules.jsInterface.toJS(tgt);\n        while (_tgt.length) _tgt.pop();\n        // @ts-ignore\n        _tgt.push(..._tgt);\n      }\n      return null;\n    },\n    Instruction_expression($arr) {\n      let arr = $arr.parse();\n      if (typeof arr === \"number\") return arr;\n      if (typeof arr === \"boolean\") return arr;\n      if (Array.isArray(arr)) return arr;\n      if (arr instanceof NDArray) arr = NDArray.prototype.__number_collapse(arr);\n      return arr;\n    },\n    Precedence11: BinaryOperation,\n    Precedence10: BinaryOperation,\n    Precedence09: BinaryOperation,\n    Precedence08: BinaryOperation,\n    Precedence07: BinaryOperation,\n    Precedence06: BinaryOperation,\n    Precedence05: BinaryOperation,\n    Precedence04: UnaryOperation,\n    Precedence03: UnaryOperation,\n    Precedence02: BinaryOperation,\n    number: function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n      return parseFloat(this.sourceString)\n    },\n    Arr_slice($arr, _open, $indexesSpec, _close) {\n      const arr = $arr.parse();\n      const indexesSpec = $indexesSpec.parse();\n      return arr.index(...indexesSpec);\n    },\n    SliceTerm_constant($x) {\n      return $x.sourceString;\n    },\n    Arr_call($name, $names, _, $callArgs) {\n      let name = $name.sourceString + $names.sourceString;\n      if (name.slice(0, 3) == \"np.\") name = name.slice(3);\n      const func = name.split('.').reduce((obj, name) => obj[name], np);\n      if (func === undefined) throw new Error(`Unrecognized function ${name}`)\n      const { args, kwArgs } = $callArgs.parse();\n      return func.bind(kwArgs)(...args);\n    },\n    Arr_method($arr, _dot, $name, $callArgs) {\n      let arr = $arr.parse();\n      let name = $name.sourceString;\n      const { args, kwArgs } = $callArgs.parse();\n      if (arr[name] === undefined) throw new Error(`Unrecognized method ${name}`);\n      return arr.withKwArgs(kwArgs)[name](...args);\n    },\n    Parenthesis(_, $arr, __) { return $arr.parse(); },\n    Arr_attribute($arr, _, $name) { return $arr.parse()[$name.sourceString]; },\n    Variable(_, $i, __) {\n      const i = parseInt($i.sourceString);\n      let value = semanticVariables[i];\n      const isListOfArrays = Array.isArray(value) && value.length && value[0] instanceof NDArray;\n      if (Array.isArray(value) && !isListOfArrays) value = np.array(value);\n      return value;\n    },\n    int($sign, $value) {\n      const value = parseInt($value.sourceString);\n      if ($sign.sourceString == '-') return -value;\n      else return value\n    },\n    SliceRange($start, _, $stop, __, $step) {\n      return this.sourceString;\n    },\n    Constant($x) {\n      switch ($x.sourceString) {\n        case \"True\": return true;\n        case \"False\": return false;\n        case \"None\": return null;\n        case \"np.nan\": return Number.NaN;\n        case \"np.inf\": return Number.POSITIVE_INFINITY;\n      }\n      throw new Error(`Unrecognized constant ${$x.sourceString}`)\n    },\n    String(_open, $str, _close) {\n      return $str.sourceString;\n    },\n    CallArgs(_open, $args, _comma, $kwArgs, _trailing, _close) {\n      const args = $args.parse() || [];\n      let entries = $kwArgs.parse() || [];\n      let kwArgs = Object.fromEntries(entries);\n      return { args, kwArgs };\n    },\n    KwArg($key, _equals, $value) {\n      const key = $key.sourceString;\n      const value = $value.parse();\n      return [key, value];\n    },\n    NonemptyListOf(first, _, more) {\n      return [first, ...more.children].map(c => c.parse());\n    },\n    JsArray(_open, $list, _trailing, _close) {\n      const list = $list.parse();\n      // Downcast arrays (needed because, e.g., for [-1, 3, -2], -1 and -2 are interpreted as MyArray rather than int)\n      const { toJS } = NDArray.prototype.modules.jsInterface;\n      for (let i in list) if (list[i] instanceof NDArray) list[i] = toJS(list[i]);\n      return list;\n    },\n    _terminal() { return null; },\n  };\n\n  function BinaryOperation($A, $symbol, $B) {\n    const A = $A.parse();\n    const B = $B.parse();\n    const symbol = $symbol.sourceString;\n    if (symbol == \"\" && A === null) return B;\n    const { op_binary: op } = NDArray.prototype.modules.operators;\n    return op[symbol](A, B);\n  }\n  function UnaryOperation(_, $symbol, $B) {\n    const B = $B.parse();\n    const symbol = $symbol.sourceString;\n    if (symbol == \"\") return B;\n    const { op_binary: op, unary_op } = NDArray.prototype.modules.operators;\n    switch (symbol) {\n      case \"+\": return B;\n      case \"-\": return op[\"*\"](-1, B);\n      case \"~\": return unary_op[\"~\"](B);\n      case \"!\": return unary_op[\"not\"](B);\n    }\n    throw new Error(`Programming Error: ${symbol}`);\n  }\n\n  const { ohmGrammar } = grammar;\n\n  const ohmSemantics = ohmGrammar.createSemantics();\n  ohmSemantics.addOperation('parse', semantics);\n  /**\n   * @param {TemplateStringsArray} template\n   * @param {any[]} variables\n   */\n  function parse(template, ...variables) {\n    // Replace variables in template with #0# #1# #2#, ...\n    let idx = 0;\n    const template_with_placeholders = template.join('###').replace(/###/g, () => `#${idx++}#`);\n    semanticVariables.length = 0;\n    semanticVariables.push(...variables);\n    const match = ohmGrammar.match(template_with_placeholders);\n    if (!match.succeeded()) throw new Error(match.message);\n    return ohmSemantics(match).parse();\n  }\n\n  return { parse, ohmSemantics, semantics, semanticVariables, busy: 0 };\n}\n\n\ngrammar.__parser_pool = [grammar.__makeSemantics()];\n\n/**\n * @param {TemplateStringsArray} template\n * @param {any[]} variables\n */\ngrammar.parse = function (template, ...variables) {\n  // Thread control, because the parser depends on semanticVariables,\n  // but we don't want to waste CPU time recreating the parser on each call\n  // No cleaning is done (we assume that the number of threads is negligible compared to the memory size)\n  const { __parser_pool: pool } = grammar;\n  for (let i = 0; i < pool.length; i++) {\n    const parser = pool[i];\n    if (parser.busy++ == 0) {\n      try { return parser.parse(template, ...variables); }\n      finally { parser.busy = 0; }\n    }\n    if (i == pool.length) pool.push(grammar.__makeSemantics());\n  }\n}\n\n\nmodule.exports = grammar;","//@ts-check\n\n/**\n * @param {TemplateStringsArray|any[]|number|boolean} template\n * @param {any[]} variables\n */\nconst np = function (template, ...variables) {\n  const usage = 'Usage example: np`np.arange(10)+${5}` or np([0,1,2]).';\n  if (typeof template == \"number\") return template;\n  if (template instanceof np.NDArray) return template;\n  if (!Array.isArray(template)) throw new Error(`Expected template or array. ${usage}`);\n  if (!template.length) throw new Error(`Expected argument. ${usage}`);\n  if (typeof template[0] == \"string\") {\n    if (variables.length + 1 != template.length) throw new Error(`Wrong input. ${usage}`);\n    return np.modules.grammar.parse(/**@type {*}*/(template), ...variables);\n  }\n  else {\n    if (variables.length) throw new Error(`Wrong input. ${usage}`);\n    return np.asarray(template);\n  }\n}\n\n\n// ==============================\n//    Define Global before importing any module\n// ==============================\nrequire('./globals').GLOBALS.np = np;\n\nconst NDArray = require('./core');\nnp.NDArray = NDArray;\n\n\nnp.modules = {\n  NDArray: NDArray,\n  grammar: require('./grammar'),\n  constructors: require('./constructors'),\n  jsUtils: require('./js-utils'),\n  random: require('./random'),\n}\n\nnp.random = np.modules.random;\n\n\n// ==============================\n//    Grammar parser (must be declared after GLOBALS.np assignment)\n// ==============================\n\n\nconst jsInterface = NDArray.prototype.modules.jsInterface;\nnp.fromJS = jsInterface.fromJS;\n/**\n * @param {TemplateStringsArray|any[]|number|boolean} template\n * @param {any[]} variables\n */\nnp.JS = function (template, ...variables) {\n  return jsInterface.toJS(np(template, ...variables));\n}\n\n\nnp.ravel = NDArray.prototype.modules.basic.ravel;\nnp.reshape = NDArray.prototype.modules.basic.reshape;\nnp.array = NDArray.prototype.modules.basic.array;\nnp.asarray = NDArray.prototype.modules.basic.asarray;\n\n\n\nconst reduce = NDArray.prototype.modules.reduce;\nnp.sum = reduce.reducers.sum;\nnp.product = reduce.reducers.product;\nnp.prod = np.product;\nnp.any = reduce.reducers.any;\nnp.all = reduce.reducers.all;\nnp.max = reduce.reducers.max;\nnp.min = reduce.reducers.min;\nnp.argmax = reduce.reducers.argmax;\nnp.argmin = reduce.reducers.argmin;\nnp.mean = reduce.reducers.mean;\nnp.var = reduce.reducers.var;\nnp.std = reduce.reducers.std;\n\n\nconst transform = NDArray.prototype.modules.transform;\nnp.transpose = transform.transpose;\nnp.apply_along_axis = transform.apply_along_axis;\nnp.sort = transform.sort;\nnp.concatenate = transform.concatenate;\nnp.stack = transform.stack;\n\n\n\nconst operators = NDArray.prototype.modules.operators;\nnp.add = operators.op_binary[\"+\"];\nnp.subtract = operators.op_binary[\"-\"];\nnp.multiply = operators.op_binary[\"*\"];\nnp.divide = operators.op_binary[\"/\"];\nnp.mod = operators.op_binary[\"%\"];\nnp.divide_int = operators.op_binary[\"//\"];\nnp.pow = operators.op_binary[\"**\"];\nnp.bitwise_or = operators.op_binary[\"|\"];\nnp.bitwise_and = operators.op_binary[\"&\"];\nnp.bitwise_xor = operators.op_binary[\"^\"];\nnp.bitwise_shift_left = operators.op_binary[\"<<\"];\nnp.bitwise_shift_right = operators.op_binary[\">>\"];\nnp.greater = operators.op_binary[\">\"];\nnp.less = operators.op_binary[\"<\"];\nnp.greater_equal = operators.op_binary[\">=\"];\nnp.less_equal = operators.op_binary[\"<=\"];\nnp.equal = operators.op_binary[\"==\"];\nnp.not_equal = operators.op_binary[\"!=\"];\nnp.maximum = operators.op_binary[\"↑\"];\nnp.minimum = operators.op_binary[\"↓\"];\nnp.logical_or = operators.op_binary[\"or\"];\nnp.logical_and = operators.op_binary[\"and\"];\n\nnp.bitwise_not = operators.op_unary[\"~\"];\nnp.logical_not = operators.op_unary[\"not\"];\n\n\n\nconst ew = NDArray.prototype.modules.elementwise;\nnp.sign = ew.__make_elementwise(Math.sign);\nnp.sqrt = ew.__make_elementwise(Math.sqrt);\nnp.square = ew.__make_elementwise((a) => a * a);\nnp.abs = ew.__make_elementwise(Math.abs);\nnp.exp = ew.__make_elementwise(Math.exp);\nnp.log = ew.__make_elementwise(Math.log);\nnp.log2 = ew.__make_elementwise(Math.log2);\nnp.log10 = ew.__make_elementwise(Math.log10);\nnp.log1p = ew.__make_elementwise(Math.log1p);\nnp.sin = ew.__make_elementwise(Math.sin);\nnp.cos = ew.__make_elementwise(Math.cos);\nnp.tan = ew.__make_elementwise(Math.tan);\nnp.asin = ew.__make_elementwise(Math.asin);\nnp.acos = ew.__make_elementwise(Math.acos);\nnp.atan = ew.__make_elementwise(Math.atan);\nnp.atan2 = ew.__make_elementwise(Math.atan2);\nnp.cosh = ew.__make_elementwise(Math.cosh);\nnp.sinh = ew.__make_elementwise(Math.sinh);\nnp.tanh = ew.__make_elementwise(Math.tanh);\nnp.acosh = ew.__make_elementwise(Math.acosh);\nnp.asinh = ew.__make_elementwise(Math.asinh);\nnp.atanh = ew.__make_elementwise(Math.atanh);\nnp.round = ew.round;\n\n\nconst constructors = np.modules.constructors;\n\nnp.empty = constructors.empty;\nnp.zeros = constructors.zeros;\nnp.ones = constructors.ones;\nnp.arange = constructors.arange;\nnp.linspace = constructors.linspace;\nnp.geomspace = constructors.geomspace;\n\nmodule.exports = np;","//@ts-check\n\nfunction binary_operation(A, B, func) {\n  // Pointwise check for equality for arbitrary js arrays (without broadcasting)\n  const C = [];\n  const q = [[A, B, C, 0]];\n  let seen;\n  while (true) {\n    const _next = q.pop();\n    if (!_next) return true;\n    const [a, b, c, depth] = _next\n    if (Array.isArray(a) && Array.isArray(b) && a.length == b.length) {\n      for (let i in a) {\n        const c_i = [];\n        c.push(c_i);\n        q.push([a[i], b[i], c_i, depth + 1]);\n      }\n    }\n    else c.push(func(a, b));\n    if (depth > 10000 && Array.isArray(a)) { // Activate circular reference detection\n      // Checking only A suffices (the other will exhaust otherwise)\n      seen = /**@type {any[]}*/(seen || []);\n      if (seen.includes(a)) throw new Error(`Circular reference found. ${a}`)\n      seen[depth - 10000] = a;\n    }\n  }\n};\n\nfunction ravel(A) {\n  // Flatten js array\n  const q = [[A, 0]], flat = [];\n  let seen;\n  while (true) {\n    const _next = q.pop();\n    if (!_next) break;\n    const [a, depth] = _next\n    if (depth > 10000 && Array.isArray(a)) { // Activate circular reference detection\n      seen = /**@type {any[]}*/(seen || []);\n      if (seen.includes(a)) throw new Error(`Circular reference found. ${a}`)\n      seen[depth - 10000] = a;\n    }\n    if (Array.isArray(a)) {\n      q.push(...a.map(v => [v, depth + 1]));\n      continue;\n    }\n    flat.push(a);\n  }\n  return flat;\n};\n\nfunction allEq(A, B, nan_equal = false) {\n  const different = new Error('');\n  const func = (a, b) => {\n    if (a !== b && !(nan_equal && Number.isNaN(a) && Number.isNaN(b))) throw different;\n    return 0;\n  }\n  try { binary_operation(A, B, func) }\n  catch (err) {\n    if (err === different) return false;\n    else throw err;\n  }\n  return true;\n};\n\nfunction allClose(A, B, rtol = 1.e-5, atol = 1.e-8, nan_equal = false,) {\n  const func = (a, b) => { //copied from isclose\n    if (Number.isFinite(a) && Number.isFinite(b)) return Math.abs(a - b) <= atol + rtol * Math.abs(b);\n    return (a === b) || (nan_equal && Number.isNaN(a) && Number.isNaN(b));\n  }\n  const different = new Error('');\n  const wrapper = (a, b) => {\n    if (!func(a, b)) throw different;\n    return 0;\n  }\n  try { binary_operation(A, B, wrapper) }\n  catch (err) {\n    if (err === different) return false;\n    else throw err;\n  }\n  return true;\n}\n\nmodule.exports = {\n  ravel,\n  allEq,\n  allClose,\n  binary_operation,\n}","//@ts-check\nconst { np } = require(\"./globals\").GLOBALS;\n\n/** @typedef {typeof import(\"./core\").prototype} NDArray*/\n\n\nfunction random(shape) {\n  return np.NDArray.prototype._new(shape, (_) => Math.random(), Number)\n};\nfunction uniform(a, b, shape) {\n  return np.add(a, np.multiply(random(shape), (b - a)));\n};\nfunction exponential(mean, shape) {\n  return np.multiply(mean, np.subtract(0, np.log(random(shape))));\n};\n\n/** @param {number} n */\nfunction __normal(n) {\n  const out = [];\n  while (out.length < n) {\n    let u = Math.random() * 2 - 1;\n    let v = Math.random() * 2 - 1;\n    let s = u * u + v * v;\n    if (s >= 1) continue;\n    let x = Math.sqrt(-2 * Math.log(s) / s) * u;\n    let y = Math.sqrt(-2 * Math.log(s) / s) * v;\n    out.push(x);\n    out.push(y);\n  }\n  if (out.length > n) out.pop();\n  return out;\n}\nfunction randn(shape) {\n  const flat = __normal(np.prod(shape));\n  return new np.NDArray(flat, shape, Number);\n};\nfunction normal(mean, std, shape) {\n  return np.add(mean, np.multiply(std, shape));\n};\n\n\n/** @param {any[]} list */\nfunction _shuffle(list) {\n  // Fisher-Yates (aka Knuth) shuffle.\n  // https://stackoverflow.com/a/2450976\n  for (let i = list.length - 1; i >= 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [list[i], list[j]] = [list[j], list[i]];\n  }\n}\n\n/** @param {any[]} list */\nfunction _shuffled(list) {\n  const out = [...list];\n  _shuffle(out);\n  return out;\n}\n\n/** @param {NDArray} arr  @returns {NDArray} */\nfunction shuffled(arr) {\n  if (arr.shape.length == 0) return arr;\n  if (arr.shape.length == 1) {\n    const flat = _shuffled(arr.flat)\n    return new np.NDArray(flat, arr.shape, arr.dtype);\n  }\n  const perm = _shuffled(Array.from({ length: arr.length }, (_, i) => i));\n  const out = np.empty(arr.shape, arr.dtype);\n  for (let i = 0; i < arr.length; i++) out.assign([i], arr.index(perm[i]));\n  return out;\n}\n\n/**\n * @param {NDArray} arr\n */\nfunction shuffle(arr) {\n  arr.assign(shuffled(arr));\n}\n\nmodule.exports = {\n  random, uniform, exponential,\n  randn, normal, shuffle,\n}","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n// --------------------------------------------------------------------\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nfunction abstract(optMethodName) {\n  const methodName = optMethodName || '';\n  return function() {\n    throw new Error(\n        'this method ' +\n        methodName +\n        ' is abstract! ' +\n        '(it has no implementation in class ' +\n        this.constructor.name +\n        ')',\n    );\n  };\n}\n\nfunction assert(cond, message) {\n  if (!cond) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n\n// Define a lazily-computed, non-enumerable property named `propName`\n// on the object `obj`. `getterFn` will be called to compute the value the\n// first time the property is accessed.\nfunction defineLazyProperty(obj, propName, getterFn) {\n  let memo;\n  Object.defineProperty(obj, propName, {\n    get() {\n      if (!memo) {\n        memo = getterFn.call(this);\n      }\n      return memo;\n    },\n  });\n}\n\nfunction clone(obj) {\n  if (obj) {\n    return Object.assign({}, obj);\n  }\n  return obj;\n}\n\nfunction repeatFn(fn, n) {\n  const arr = [];\n  while (n-- > 0) {\n    arr.push(fn());\n  }\n  return arr;\n}\n\nfunction repeatStr(str, n) {\n  return new Array(n + 1).join(str);\n}\n\nfunction repeat(x, n) {\n  return repeatFn(() => x, n);\n}\n\nfunction getDuplicates(array) {\n  const duplicates = [];\n  for (let idx = 0; idx < array.length; idx++) {\n    const x = array[idx];\n    if (array.lastIndexOf(x) !== idx && duplicates.indexOf(x) < 0) {\n      duplicates.push(x);\n    }\n  }\n  return duplicates;\n}\n\nfunction copyWithoutDuplicates(array) {\n  const noDuplicates = [];\n  array.forEach(entry => {\n    if (noDuplicates.indexOf(entry) < 0) {\n      noDuplicates.push(entry);\n    }\n  });\n  return noDuplicates;\n}\n\nfunction isSyntactic(ruleName) {\n  const firstChar = ruleName[0];\n  return firstChar === firstChar.toUpperCase();\n}\n\nfunction isLexical(ruleName) {\n  return !isSyntactic(ruleName);\n}\n\nfunction padLeft(str, len, optChar) {\n  const ch = optChar || ' ';\n  if (str.length < len) {\n    return repeatStr(ch, len - str.length) + str;\n  }\n  return str;\n}\n\n// StringBuffer\n\nfunction StringBuffer() {\n  this.strings = [];\n}\n\nStringBuffer.prototype.append = function(str) {\n  this.strings.push(str);\n};\n\nStringBuffer.prototype.contents = function() {\n  return this.strings.join('');\n};\n\nconst escapeUnicode = str => String.fromCodePoint(parseInt(str, 16));\n\nfunction unescapeCodePoint(s) {\n  if (s.charAt(0) === '\\\\') {\n    switch (s.charAt(1)) {\n      case 'b':\n        return '\\b';\n      case 'f':\n        return '\\f';\n      case 'n':\n        return '\\n';\n      case 'r':\n        return '\\r';\n      case 't':\n        return '\\t';\n      case 'v':\n        return '\\v';\n      case 'x':\n        return escapeUnicode(s.slice(2, 4));\n      case 'u':\n        return s.charAt(2) === '{' ?\n          escapeUnicode(s.slice(3, -1)) :\n          escapeUnicode(s.slice(2, 6));\n      default:\n        return s.charAt(1);\n    }\n  } else {\n    return s;\n  }\n}\n\n// Helper for producing a description of an unknown object in a safe way.\n// Especially useful for error messages where an unexpected type of object was encountered.\nfunction unexpectedObjToString(obj) {\n  if (obj == null) {\n    return String(obj);\n  }\n  const baseToString = Object.prototype.toString.call(obj);\n  try {\n    let typeName;\n    if (obj.constructor && obj.constructor.name) {\n      typeName = obj.constructor.name;\n    } else if (baseToString.indexOf('[object ') === 0) {\n      typeName = baseToString.slice(8, -1); // Extract e.g. \"Array\" from \"[object Array]\".\n    } else {\n      typeName = typeof obj;\n    }\n    return typeName + ': ' + JSON.stringify(String(obj));\n  } catch (e) {\n    return baseToString;\n  }\n}\n\nvar common = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  abstract: abstract,\n  assert: assert,\n  defineLazyProperty: defineLazyProperty,\n  clone: clone,\n  repeatFn: repeatFn,\n  repeatStr: repeatStr,\n  repeat: repeat,\n  getDuplicates: getDuplicates,\n  copyWithoutDuplicates: copyWithoutDuplicates,\n  isSyntactic: isSyntactic,\n  isLexical: isLexical,\n  padLeft: padLeft,\n  StringBuffer: StringBuffer,\n  unescapeCodePoint: unescapeCodePoint,\n  unexpectedObjToString: unexpectedObjToString\n});\n\n// These are just categories that are used in ES5/ES2015.\n// The full list of Unicode categories is here: http://www.fileformat.info/info/unicode/category/index.htm.\nconst UnicodeCategories = {\n  // Letters\n  Lu: /\\p{Lu}/u,\n  Ll: /\\p{Ll}/u,\n  Lt: /\\p{Lt}/u,\n  Lm: /\\p{Lm}/u,\n  Lo: /\\p{Lo}/u,\n\n  // Numbers\n  Nl: /\\p{Nl}/u,\n  Nd: /\\p{Nd}/u,\n\n  // Marks\n  Mn: /\\p{Mn}/u,\n  Mc: /\\p{Mc}/u,\n\n  // Punctuation, Connector\n  Pc: /\\p{Pc}/u,\n\n  // Separator, Space\n  Zs: /\\p{Zs}/u,\n\n  // These two are not real Unicode categories, but our useful for Ohm.\n  // L is a combination of all the letter categories.\n  // Ltmo is a combination of Lt, Lm, and Lo.\n  L: /\\p{Letter}/u,\n  Ltmo: /\\p{Lt}|\\p{Lm}|\\p{Lo}/u,\n};\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// General stuff\n\nclass PExpr {\n  constructor() {\n    if (this.constructor === PExpr) {\n      throw new Error(\"PExpr cannot be instantiated -- it's abstract\");\n    }\n  }\n\n  // Set the `source` property to the interval containing the source for this expression.\n  withSource(interval) {\n    if (interval) {\n      this.source = interval.trimmed();\n    }\n    return this;\n  }\n}\n\n// Any\n\nconst any = Object.create(PExpr.prototype);\n\n// End\n\nconst end = Object.create(PExpr.prototype);\n\n// Terminals\n\nclass Terminal extends PExpr {\n  constructor(obj) {\n    super();\n    this.obj = obj;\n  }\n}\n\n// Ranges\n\nclass Range extends PExpr {\n  constructor(from, to) {\n    super();\n    this.from = from;\n    this.to = to;\n    // If either `from` or `to` is made up of multiple code units, then\n    // the range should consume a full code point, not a single code unit.\n    this.matchCodePoint = from.length > 1 || to.length > 1;\n  }\n}\n\n// Parameters\n\nclass Param extends PExpr {\n  constructor(index) {\n    super();\n    this.index = index;\n  }\n}\n\n// Alternation\n\nclass Alt extends PExpr {\n  constructor(terms) {\n    super();\n    this.terms = terms;\n  }\n}\n\n// Extend is an implementation detail of rule extension\n\nclass Extend extends Alt {\n  constructor(superGrammar, name, body) {\n    const origBody = superGrammar.rules[name].body;\n    super([body, origBody]);\n\n    this.superGrammar = superGrammar;\n    this.name = name;\n    this.body = body;\n  }\n}\n\n// Splice is an implementation detail of rule overriding with the `...` operator.\nclass Splice extends Alt {\n  constructor(superGrammar, ruleName, beforeTerms, afterTerms) {\n    const origBody = superGrammar.rules[ruleName].body;\n    super([...beforeTerms, origBody, ...afterTerms]);\n\n    this.superGrammar = superGrammar;\n    this.ruleName = ruleName;\n    this.expansionPos = beforeTerms.length;\n  }\n}\n\n// Sequences\n\nclass Seq extends PExpr {\n  constructor(factors) {\n    super();\n    this.factors = factors;\n  }\n}\n\n// Iterators and optionals\n\nclass Iter extends PExpr {\n  constructor(expr) {\n    super();\n    this.expr = expr;\n  }\n}\n\nclass Star extends Iter {}\nclass Plus extends Iter {}\nclass Opt extends Iter {}\n\nStar.prototype.operator = '*';\nPlus.prototype.operator = '+';\nOpt.prototype.operator = '?';\n\nStar.prototype.minNumMatches = 0;\nPlus.prototype.minNumMatches = 1;\nOpt.prototype.minNumMatches = 0;\n\nStar.prototype.maxNumMatches = Number.POSITIVE_INFINITY;\nPlus.prototype.maxNumMatches = Number.POSITIVE_INFINITY;\nOpt.prototype.maxNumMatches = 1;\n\n// Predicates\n\nclass Not extends PExpr {\n  constructor(expr) {\n    super();\n    this.expr = expr;\n  }\n}\n\nclass Lookahead extends PExpr {\n  constructor(expr) {\n    super();\n    this.expr = expr;\n  }\n}\n\n// \"Lexification\"\n\nclass Lex extends PExpr {\n  constructor(expr) {\n    super();\n    this.expr = expr;\n  }\n}\n\n// Rule application\n\nclass Apply extends PExpr {\n  constructor(ruleName, args = []) {\n    super();\n    this.ruleName = ruleName;\n    this.args = args;\n  }\n\n  isSyntactic() {\n    return isSyntactic(this.ruleName);\n  }\n\n  // This method just caches the result of `this.toString()` in a non-enumerable property.\n  toMemoKey() {\n    if (!this._memoKey) {\n      Object.defineProperty(this, '_memoKey', {value: this.toString()});\n    }\n    return this._memoKey;\n  }\n}\n\n// Unicode character\n\nclass UnicodeChar extends PExpr {\n  constructor(category) {\n    super();\n    this.category = category;\n    this.pattern = UnicodeCategories[category];\n  }\n}\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction createError(message, optInterval) {\n  let e;\n  if (optInterval) {\n    e = new Error(optInterval.getLineAndColumnMessage() + message);\n    e.shortMessage = message;\n    e.interval = optInterval;\n  } else {\n    e = new Error(message);\n  }\n  return e;\n}\n\n// ----------------- errors about intervals -----------------\n\nfunction intervalSourcesDontMatch() {\n  return createError(\"Interval sources don't match\");\n}\n\n// ----------------- errors about grammars -----------------\n\n// Grammar syntax error\n\nfunction grammarSyntaxError(matchFailure) {\n  const e = new Error();\n  Object.defineProperty(e, 'message', {\n    enumerable: true,\n    get() {\n      return matchFailure.message;\n    },\n  });\n  Object.defineProperty(e, 'shortMessage', {\n    enumerable: true,\n    get() {\n      return 'Expected ' + matchFailure.getExpectedText();\n    },\n  });\n  e.interval = matchFailure.getInterval();\n  return e;\n}\n\n// Undeclared grammar\n\nfunction undeclaredGrammar(grammarName, namespace, interval) {\n  const message = namespace ?\n    `Grammar ${grammarName} is not declared in namespace '${namespace}'` :\n    'Undeclared grammar ' + grammarName;\n  return createError(message, interval);\n}\n\n// Duplicate grammar declaration\n\nfunction duplicateGrammarDeclaration(grammar, namespace) {\n  return createError('Grammar ' + grammar.name + ' is already declared in this namespace');\n}\n\nfunction grammarDoesNotSupportIncrementalParsing(grammar) {\n  return createError(`Grammar '${grammar.name}' does not support incremental parsing`);\n}\n\n// ----------------- rules -----------------\n\n// Undeclared rule\n\nfunction undeclaredRule(ruleName, grammarName, optInterval) {\n  return createError(\n      'Rule ' + ruleName + ' is not declared in grammar ' + grammarName,\n      optInterval,\n  );\n}\n\n// Cannot override undeclared rule\n\nfunction cannotOverrideUndeclaredRule(ruleName, grammarName, optSource) {\n  return createError(\n      'Cannot override rule ' + ruleName + ' because it is not declared in ' + grammarName,\n      optSource,\n  );\n}\n\n// Cannot extend undeclared rule\n\nfunction cannotExtendUndeclaredRule(ruleName, grammarName, optSource) {\n  return createError(\n      'Cannot extend rule ' + ruleName + ' because it is not declared in ' + grammarName,\n      optSource,\n  );\n}\n\n// Duplicate rule declaration\n\nfunction duplicateRuleDeclaration(ruleName, grammarName, declGrammarName, optSource) {\n  let message =\n    \"Duplicate declaration for rule '\" + ruleName + \"' in grammar '\" + grammarName + \"'\";\n  if (grammarName !== declGrammarName) {\n    message += \" (originally declared in '\" + declGrammarName + \"')\";\n  }\n  return createError(message, optSource);\n}\n\n// Wrong number of parameters\n\nfunction wrongNumberOfParameters(ruleName, expected, actual, source) {\n  return createError(\n      'Wrong number of parameters for rule ' +\n      ruleName +\n      ' (expected ' +\n      expected +\n      ', got ' +\n      actual +\n      ')',\n      source,\n  );\n}\n\n// Wrong number of arguments\n\nfunction wrongNumberOfArguments(ruleName, expected, actual, expr) {\n  return createError(\n      'Wrong number of arguments for rule ' +\n      ruleName +\n      ' (expected ' +\n      expected +\n      ', got ' +\n      actual +\n      ')',\n      expr,\n  );\n}\n\n// Duplicate parameter names\n\nfunction duplicateParameterNames(ruleName, duplicates, source) {\n  return createError(\n      'Duplicate parameter names in rule ' + ruleName + ': ' + duplicates.join(', '),\n      source,\n  );\n}\n\n// Invalid parameter expression\n\nfunction invalidParameter(ruleName, expr) {\n  return createError(\n      'Invalid parameter to rule ' +\n      ruleName +\n      ': ' +\n      expr +\n      ' has arity ' +\n      expr.getArity() +\n      ', but parameter expressions must have arity 1',\n      expr.source,\n  );\n}\n\n// Application of syntactic rule from lexical rule\n\nconst syntacticVsLexicalNote =\n  'NOTE: A _syntactic rule_ is a rule whose name begins with a capital letter. ' +\n  'See https://ohmjs.org/d/svl for more details.';\n\nfunction applicationOfSyntacticRuleFromLexicalContext(ruleName, applyExpr) {\n  return createError(\n      'Cannot apply syntactic rule ' + ruleName + ' from here (inside a lexical context)',\n      applyExpr.source,\n  );\n}\n\n// Lexical rule application used with applySyntactic\n\nfunction applySyntacticWithLexicalRuleApplication(applyExpr) {\n  const {ruleName} = applyExpr;\n  return createError(\n      `applySyntactic is for syntactic rules, but '${ruleName}' is a lexical rule. ` +\n      syntacticVsLexicalNote,\n      applyExpr.source,\n  );\n}\n\n// Application of applySyntactic in a syntactic context\n\nfunction unnecessaryExperimentalApplySyntactic(applyExpr) {\n  return createError(\n      'applySyntactic is not required here (in a syntactic context)',\n      applyExpr.source,\n  );\n}\n\n// Incorrect argument type\n\nfunction incorrectArgumentType(expectedType, expr) {\n  return createError('Incorrect argument type: expected ' + expectedType, expr.source);\n}\n\n// Multiple instances of the super-splice operator (`...`) in the rule body.\n\nfunction multipleSuperSplices(expr) {\n  return createError(\"'...' can appear at most once in a rule body\", expr.source);\n}\n\n// Unicode code point escapes\n\nfunction invalidCodePoint(applyWrapper) {\n  const node = applyWrapper._node;\n  assert(node && node.isNonterminal() && node.ctorName === 'escapeChar_unicodeCodePoint');\n\n  // Get an interval that covers all of the hex digits.\n  const digitIntervals = applyWrapper.children.slice(1, -1).map(d => d.source);\n  const fullInterval = digitIntervals[0].coverageWith(...digitIntervals.slice(1));\n  return createError(\n      `U+${fullInterval.contents} is not a valid Unicode code point`,\n      fullInterval,\n  );\n}\n\n// ----------------- Kleene operators -----------------\n\nfunction kleeneExprHasNullableOperand(kleeneExpr, applicationStack) {\n  const actuals =\n    applicationStack.length > 0 ? applicationStack[applicationStack.length - 1].args : [];\n  const expr = kleeneExpr.expr.substituteParams(actuals);\n  let message =\n    'Nullable expression ' +\n    expr +\n    \" is not allowed inside '\" +\n    kleeneExpr.operator +\n    \"' (possible infinite loop)\";\n  if (applicationStack.length > 0) {\n    const stackTrace = applicationStack\n        .map(app => new Apply(app.ruleName, app.args))\n        .join('\\n');\n    message += '\\nApplication stack (most recent application last):\\n' + stackTrace;\n  }\n  return createError(message, kleeneExpr.expr.source);\n}\n\n// ----------------- arity -----------------\n\nfunction inconsistentArity(ruleName, expected, actual, expr) {\n  return createError(\n      'Rule ' +\n      ruleName +\n      ' involves an alternation which has inconsistent arity ' +\n      '(expected ' +\n      expected +\n      ', got ' +\n      actual +\n      ')',\n      expr.source,\n  );\n}\n\n// ----------------- convenience -----------------\n\nfunction multipleErrors(errors) {\n  const messages = errors.map(e => e.message);\n  return createError(['Errors:'].concat(messages).join('\\n- '), errors[0].interval);\n}\n\n// ----------------- semantic -----------------\n\nfunction missingSemanticAction(ctorName, name, type, stack) {\n  let stackTrace = stack\n      .slice(0, -1)\n      .map(info => {\n        const ans = '  ' + info[0].name + ' > ' + info[1];\n        return info.length === 3 ? ans + \" for '\" + info[2] + \"'\" : ans;\n      })\n      .join('\\n');\n  stackTrace += '\\n  ' + name + ' > ' + ctorName;\n\n  let moreInfo = '';\n  if (ctorName === '_iter') {\n    moreInfo = [\n      '\\nNOTE: as of Ohm v16, there is no default action for iteration nodes — see ',\n      '  https://ohmjs.org/d/dsa for details.',\n    ].join('\\n');\n  }\n\n  const message = [\n    `Missing semantic action for '${ctorName}' in ${type} '${name}'.${moreInfo}`,\n    'Action stack (most recent call last):',\n    stackTrace,\n  ].join('\\n');\n\n  const e = createError(message);\n  e.name = 'missingSemanticAction';\n  return e;\n}\n\nfunction throwErrors(errors) {\n  if (errors.length === 1) {\n    throw errors[0];\n  }\n  if (errors.length > 1) {\n    throw multipleErrors(errors);\n  }\n}\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// Given an array of numbers `arr`, return an array of the numbers as strings,\n// right-justified and padded to the same length.\nfunction padNumbersToEqualLength(arr) {\n  let maxLen = 0;\n  const strings = arr.map(n => {\n    const str = n.toString();\n    maxLen = Math.max(maxLen, str.length);\n    return str;\n  });\n  return strings.map(s => padLeft(s, maxLen));\n}\n\n// Produce a new string that would be the result of copying the contents\n// of the string `src` onto `dest` at offset `offest`.\nfunction strcpy(dest, src, offset) {\n  const origDestLen = dest.length;\n  const start = dest.slice(0, offset);\n  const end = dest.slice(offset + src.length);\n  return (start + src + end).substr(0, origDestLen);\n}\n\n// Casts the underlying lineAndCol object to a formatted message string,\n// highlighting `ranges`.\nfunction lineAndColumnToMessage(...ranges) {\n  const lineAndCol = this;\n  const {offset} = lineAndCol;\n  const {repeatStr} = common;\n\n  const sb = new StringBuffer();\n  sb.append('Line ' + lineAndCol.lineNum + ', col ' + lineAndCol.colNum + ':\\n');\n\n  // An array of the previous, current, and next line numbers as strings of equal length.\n  const lineNumbers = padNumbersToEqualLength([\n    lineAndCol.prevLine == null ? 0 : lineAndCol.lineNum - 1,\n    lineAndCol.lineNum,\n    lineAndCol.nextLine == null ? 0 : lineAndCol.lineNum + 1,\n  ]);\n\n  // Helper for appending formatting input lines to the buffer.\n  const appendLine = (num, content, prefix) => {\n    sb.append(prefix + lineNumbers[num] + ' | ' + content + '\\n');\n  };\n\n  // Include the previous line for context if possible.\n  if (lineAndCol.prevLine != null) {\n    appendLine(0, lineAndCol.prevLine, '  ');\n  }\n  // Line that the error occurred on.\n  appendLine(1, lineAndCol.line, '> ');\n\n  // Build up the line that points to the offset and possible indicates one or more ranges.\n  // Start with a blank line, and indicate each range by overlaying a string of `~` chars.\n  const lineLen = lineAndCol.line.length;\n  let indicationLine = repeatStr(' ', lineLen + 1);\n  for (let i = 0; i < ranges.length; ++i) {\n    let startIdx = ranges[i][0];\n    let endIdx = ranges[i][1];\n    assert(startIdx >= 0 && startIdx <= endIdx, 'range start must be >= 0 and <= end');\n\n    const lineStartOffset = offset - lineAndCol.colNum + 1;\n    startIdx = Math.max(0, startIdx - lineStartOffset);\n    endIdx = Math.min(endIdx - lineStartOffset, lineLen);\n\n    indicationLine = strcpy(indicationLine, repeatStr('~', endIdx - startIdx), startIdx);\n  }\n  const gutterWidth = 2 + lineNumbers[1].length + 3;\n  sb.append(repeatStr(' ', gutterWidth));\n  indicationLine = strcpy(indicationLine, '^', lineAndCol.colNum - 1);\n  sb.append(indicationLine.replace(/ +$/, '') + '\\n');\n\n  // Include the next line for context if possible.\n  if (lineAndCol.nextLine != null) {\n    appendLine(2, lineAndCol.nextLine, '  ');\n  }\n  return sb.contents();\n}\n\n// --------------------------------------------------------------------\n// Exports\n// --------------------------------------------------------------------\n\nlet builtInRulesCallbacks = [];\n\n// Since Grammar.BuiltInRules is bootstrapped, most of Ohm can't directly depend it.\n// This function allows modules that do depend on the built-in rules to register a callback\n// that will be called later in the initialization process.\nfunction awaitBuiltInRules(cb) {\n  builtInRulesCallbacks.push(cb);\n}\n\nfunction announceBuiltInRules(grammar) {\n  builtInRulesCallbacks.forEach(cb => {\n    cb(grammar);\n  });\n  builtInRulesCallbacks = null;\n}\n\n// Return an object with the line and column information for the given\n// offset in `str`.\nfunction getLineAndColumn(str, offset) {\n  let lineNum = 1;\n  let colNum = 1;\n\n  let currOffset = 0;\n  let lineStartOffset = 0;\n\n  let nextLine = null;\n  let prevLine = null;\n  let prevLineStartOffset = -1;\n\n  while (currOffset < offset) {\n    const c = str.charAt(currOffset++);\n    if (c === '\\n') {\n      lineNum++;\n      colNum = 1;\n      prevLineStartOffset = lineStartOffset;\n      lineStartOffset = currOffset;\n    } else if (c !== '\\r') {\n      colNum++;\n    }\n  }\n\n  // Find the end of the target line.\n  let lineEndOffset = str.indexOf('\\n', lineStartOffset);\n  if (lineEndOffset === -1) {\n    lineEndOffset = str.length;\n  } else {\n    // Get the next line.\n    const nextLineEndOffset = str.indexOf('\\n', lineEndOffset + 1);\n    nextLine =\n      nextLineEndOffset === -1 ?\n        str.slice(lineEndOffset) :\n        str.slice(lineEndOffset, nextLineEndOffset);\n    // Strip leading and trailing EOL char(s).\n    nextLine = nextLine.replace(/^\\r?\\n/, '').replace(/\\r$/, '');\n  }\n\n  // Get the previous line.\n  if (prevLineStartOffset >= 0) {\n    // Strip trailing EOL char(s).\n    prevLine = str.slice(prevLineStartOffset, lineStartOffset).replace(/\\r?\\n$/, '');\n  }\n\n  // Get the target line, stripping a trailing carriage return if necessary.\n  const line = str.slice(lineStartOffset, lineEndOffset).replace(/\\r$/, '');\n\n  return {\n    offset,\n    lineNum,\n    colNum,\n    line,\n    prevLine,\n    nextLine,\n    toString: lineAndColumnToMessage,\n  };\n}\n\n// Return a nicely-formatted string describing the line and column for the\n// given offset in `str` highlighting `ranges`.\nfunction getLineAndColumnMessage(str, offset, ...ranges) {\n  return getLineAndColumn(str, offset).toString(...ranges);\n}\n\nconst uniqueId = (() => {\n  let idCounter = 0;\n  return prefix => '' + prefix + idCounter++;\n})();\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nclass Interval {\n  constructor(sourceString, startIdx, endIdx) {\n    this.sourceString = sourceString;\n    this.startIdx = startIdx;\n    this.endIdx = endIdx;\n  }\n\n  get contents() {\n    if (this._contents === undefined) {\n      this._contents = this.sourceString.slice(this.startIdx, this.endIdx);\n    }\n    return this._contents;\n  }\n\n  get length() {\n    return this.endIdx - this.startIdx;\n  }\n\n  coverageWith(...intervals) {\n    return Interval.coverage(...intervals, this);\n  }\n\n  collapsedLeft() {\n    return new Interval(this.sourceString, this.startIdx, this.startIdx);\n  }\n\n  collapsedRight() {\n    return new Interval(this.sourceString, this.endIdx, this.endIdx);\n  }\n\n  getLineAndColumn() {\n    return getLineAndColumn(this.sourceString, this.startIdx);\n  }\n\n  getLineAndColumnMessage() {\n    const range = [this.startIdx, this.endIdx];\n    return getLineAndColumnMessage(this.sourceString, this.startIdx, range);\n  }\n\n  // Returns an array of 0, 1, or 2 intervals that represents the result of the\n  // interval difference operation.\n  minus(that) {\n    if (this.sourceString !== that.sourceString) {\n      throw intervalSourcesDontMatch();\n    } else if (this.startIdx === that.startIdx && this.endIdx === that.endIdx) {\n      // `this` and `that` are the same interval!\n      return [];\n    } else if (this.startIdx < that.startIdx && that.endIdx < this.endIdx) {\n      // `that` splits `this` into two intervals\n      return [\n        new Interval(this.sourceString, this.startIdx, that.startIdx),\n        new Interval(this.sourceString, that.endIdx, this.endIdx),\n      ];\n    } else if (this.startIdx < that.endIdx && that.endIdx < this.endIdx) {\n      // `that` contains a prefix of `this`\n      return [new Interval(this.sourceString, that.endIdx, this.endIdx)];\n    } else if (this.startIdx < that.startIdx && that.startIdx < this.endIdx) {\n      // `that` contains a suffix of `this`\n      return [new Interval(this.sourceString, this.startIdx, that.startIdx)];\n    } else {\n      // `that` and `this` do not overlap\n      return [this];\n    }\n  }\n\n  // Returns a new Interval that has the same extent as this one, but which is relative\n  // to `that`, an Interval that fully covers this one.\n  relativeTo(that) {\n    if (this.sourceString !== that.sourceString) {\n      throw intervalSourcesDontMatch();\n    }\n    assert(\n        this.startIdx >= that.startIdx && this.endIdx <= that.endIdx,\n        'other interval does not cover this one',\n    );\n    return new Interval(\n        this.sourceString,\n        this.startIdx - that.startIdx,\n        this.endIdx - that.startIdx,\n    );\n  }\n\n  // Returns a new Interval which contains the same contents as this one,\n  // but with whitespace trimmed from both ends.\n  trimmed() {\n    const {contents} = this;\n    const startIdx = this.startIdx + contents.match(/^\\s*/)[0].length;\n    const endIdx = this.endIdx - contents.match(/\\s*$/)[0].length;\n    return new Interval(this.sourceString, startIdx, endIdx);\n  }\n\n  subInterval(offset, len) {\n    const newStartIdx = this.startIdx + offset;\n    return new Interval(this.sourceString, newStartIdx, newStartIdx + len);\n  }\n}\n\nInterval.coverage = function(firstInterval, ...intervals) {\n  let {startIdx, endIdx} = firstInterval;\n  for (const interval of intervals) {\n    if (interval.sourceString !== firstInterval.sourceString) {\n      throw intervalSourcesDontMatch();\n    } else {\n      startIdx = Math.min(startIdx, interval.startIdx);\n      endIdx = Math.max(endIdx, interval.endIdx);\n    }\n  }\n  return new Interval(firstInterval.sourceString, startIdx, endIdx);\n};\n\nconst MAX_CHAR_CODE = 0xffff;\n\nclass InputStream {\n  constructor(source) {\n    this.source = source;\n    this.pos = 0;\n    this.examinedLength = 0;\n  }\n\n  atEnd() {\n    const ans = this.pos >= this.source.length;\n    this.examinedLength = Math.max(this.examinedLength, this.pos + 1);\n    return ans;\n  }\n\n  next() {\n    const ans = this.source[this.pos++];\n    this.examinedLength = Math.max(this.examinedLength, this.pos);\n    return ans;\n  }\n\n  nextCharCode() {\n    const nextChar = this.next();\n    return nextChar && nextChar.charCodeAt(0);\n  }\n\n  nextCodePoint() {\n    const cp = this.source.slice(this.pos++).codePointAt(0);\n    // If the code point is beyond plane 0, it takes up two characters.\n    if (cp > MAX_CHAR_CODE) {\n      this.pos += 1;\n    }\n    this.examinedLength = Math.max(this.examinedLength, this.pos);\n    return cp;\n  }\n\n  matchString(s, optIgnoreCase) {\n    let idx;\n    if (optIgnoreCase) {\n      /*\n        Case-insensitive comparison is a tricky business. Some notable gotchas include the\n        \"Turkish I\" problem (http://www.i18nguy.com/unicode/turkish-i18n.html) and the fact\n        that the German Esszet (ß) turns into \"SS\" in upper case.\n\n        This is intended to be a locale-invariant comparison, which means it may not obey\n        locale-specific expectations (e.g. \"i\" => \"İ\").\n       */\n      for (idx = 0; idx < s.length; idx++) {\n        const actual = this.next();\n        const expected = s[idx];\n        if (actual == null || actual.toUpperCase() !== expected.toUpperCase()) {\n          return false;\n        }\n      }\n      return true;\n    }\n    // Default is case-sensitive comparison.\n    for (idx = 0; idx < s.length; idx++) {\n      if (this.next() !== s[idx]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  sourceSlice(startIdx, endIdx) {\n    return this.source.slice(startIdx, endIdx);\n  }\n\n  interval(startIdx, optEndIdx) {\n    return new Interval(this.source, startIdx, optEndIdx ? optEndIdx : this.pos);\n  }\n}\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nclass MatchResult {\n  constructor(\n      matcher,\n      input,\n      startExpr,\n      cst,\n      cstOffset,\n      rightmostFailurePosition,\n      optRecordedFailures,\n  ) {\n    this.matcher = matcher;\n    this.input = input;\n    this.startExpr = startExpr;\n    this._cst = cst;\n    this._cstOffset = cstOffset;\n    this._rightmostFailurePosition = rightmostFailurePosition;\n    this._rightmostFailures = optRecordedFailures;\n\n    if (this.failed()) {\n      /* eslint-disable no-invalid-this */\n      defineLazyProperty(this, 'message', function() {\n        const detail = 'Expected ' + this.getExpectedText();\n        return (\n          getLineAndColumnMessage(this.input, this.getRightmostFailurePosition()) + detail\n        );\n      });\n      defineLazyProperty(this, 'shortMessage', function() {\n        const detail = 'expected ' + this.getExpectedText();\n        const errorInfo = getLineAndColumn(\n            this.input,\n            this.getRightmostFailurePosition(),\n        );\n        return 'Line ' + errorInfo.lineNum + ', col ' + errorInfo.colNum + ': ' + detail;\n      });\n      /* eslint-enable no-invalid-this */\n    }\n  }\n\n  succeeded() {\n    return !!this._cst;\n  }\n\n  failed() {\n    return !this.succeeded();\n  }\n\n  getRightmostFailurePosition() {\n    return this._rightmostFailurePosition;\n  }\n\n  getRightmostFailures() {\n    if (!this._rightmostFailures) {\n      this.matcher.setInput(this.input);\n      const matchResultWithFailures = this.matcher._match(this.startExpr, {\n        tracing: false,\n        positionToRecordFailures: this.getRightmostFailurePosition(),\n      });\n      this._rightmostFailures = matchResultWithFailures.getRightmostFailures();\n    }\n    return this._rightmostFailures;\n  }\n\n  toString() {\n    return this.succeeded() ?\n      '[match succeeded]' :\n      '[match failed at position ' + this.getRightmostFailurePosition() + ']';\n  }\n\n  // Return a string summarizing the expected contents of the input stream when\n  // the match failure occurred.\n  getExpectedText() {\n    if (this.succeeded()) {\n      throw new Error('cannot get expected text of a successful MatchResult');\n    }\n\n    const sb = new StringBuffer();\n    let failures = this.getRightmostFailures();\n\n    // Filter out the fluffy failures to make the default error messages more useful\n    failures = failures.filter(failure => !failure.isFluffy());\n\n    for (let idx = 0; idx < failures.length; idx++) {\n      if (idx > 0) {\n        if (idx === failures.length - 1) {\n          sb.append(failures.length > 2 ? ', or ' : ' or ');\n        } else {\n          sb.append(', ');\n        }\n      }\n      sb.append(failures[idx].toString());\n    }\n    return sb.contents();\n  }\n\n  getInterval() {\n    const pos = this.getRightmostFailurePosition();\n    return new Interval(this.input, pos, pos);\n  }\n}\n\nclass PosInfo {\n  constructor() {\n    this.applicationMemoKeyStack = []; // active applications at this position\n    this.memo = {};\n    this.maxExaminedLength = 0;\n    this.maxRightmostFailureOffset = -1;\n    this.currentLeftRecursion = undefined;\n  }\n\n  isActive(application) {\n    return this.applicationMemoKeyStack.indexOf(application.toMemoKey()) >= 0;\n  }\n\n  enter(application) {\n    this.applicationMemoKeyStack.push(application.toMemoKey());\n  }\n\n  exit() {\n    this.applicationMemoKeyStack.pop();\n  }\n\n  startLeftRecursion(headApplication, memoRec) {\n    memoRec.isLeftRecursion = true;\n    memoRec.headApplication = headApplication;\n    memoRec.nextLeftRecursion = this.currentLeftRecursion;\n    this.currentLeftRecursion = memoRec;\n\n    const {applicationMemoKeyStack} = this;\n    const indexOfFirstInvolvedRule =\n      applicationMemoKeyStack.indexOf(headApplication.toMemoKey()) + 1;\n    const involvedApplicationMemoKeys = applicationMemoKeyStack.slice(\n        indexOfFirstInvolvedRule,\n    );\n\n    memoRec.isInvolved = function(applicationMemoKey) {\n      return involvedApplicationMemoKeys.indexOf(applicationMemoKey) >= 0;\n    };\n\n    memoRec.updateInvolvedApplicationMemoKeys = function() {\n      for (let idx = indexOfFirstInvolvedRule; idx < applicationMemoKeyStack.length; idx++) {\n        const applicationMemoKey = applicationMemoKeyStack[idx];\n        if (!this.isInvolved(applicationMemoKey)) {\n          involvedApplicationMemoKeys.push(applicationMemoKey);\n        }\n      }\n    };\n  }\n\n  endLeftRecursion() {\n    this.currentLeftRecursion = this.currentLeftRecursion.nextLeftRecursion;\n  }\n\n  // Note: this method doesn't get called for the \"head\" of a left recursion -- for LR heads,\n  // the memoized result (which starts out being a failure) is always used.\n  shouldUseMemoizedResult(memoRec) {\n    if (!memoRec.isLeftRecursion) {\n      return true;\n    }\n    const {applicationMemoKeyStack} = this;\n    for (let idx = 0; idx < applicationMemoKeyStack.length; idx++) {\n      const applicationMemoKey = applicationMemoKeyStack[idx];\n      if (memoRec.isInvolved(applicationMemoKey)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  memoize(memoKey, memoRec) {\n    this.memo[memoKey] = memoRec;\n    this.maxExaminedLength = Math.max(this.maxExaminedLength, memoRec.examinedLength);\n    this.maxRightmostFailureOffset = Math.max(\n        this.maxRightmostFailureOffset,\n        memoRec.rightmostFailureOffset,\n    );\n    return memoRec;\n  }\n\n  clearObsoleteEntries(pos, invalidatedIdx) {\n    if (pos + this.maxExaminedLength <= invalidatedIdx) {\n      // Optimization: none of the rule applications that were memoized here examined the\n      // interval of the input that changed, so nothing has to be invalidated.\n      return;\n    }\n\n    const {memo} = this;\n    this.maxExaminedLength = 0;\n    this.maxRightmostFailureOffset = -1;\n    Object.keys(memo).forEach(k => {\n      const memoRec = memo[k];\n      if (pos + memoRec.examinedLength > invalidatedIdx) {\n        delete memo[k];\n      } else {\n        this.maxExaminedLength = Math.max(this.maxExaminedLength, memoRec.examinedLength);\n        this.maxRightmostFailureOffset = Math.max(\n            this.maxRightmostFailureOffset,\n            memoRec.rightmostFailureOffset,\n        );\n      }\n    });\n  }\n}\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n// Unicode characters that are used in the `toString` output.\nconst BALLOT_X = '\\u2717';\nconst CHECK_MARK = '\\u2713';\nconst DOT_OPERATOR = '\\u22C5';\nconst RIGHTWARDS_DOUBLE_ARROW = '\\u21D2';\nconst SYMBOL_FOR_HORIZONTAL_TABULATION = '\\u2409';\nconst SYMBOL_FOR_LINE_FEED = '\\u240A';\nconst SYMBOL_FOR_CARRIAGE_RETURN = '\\u240D';\n\nconst Flags = {\n  succeeded: 1 << 0,\n  isRootNode: 1 << 1,\n  isImplicitSpaces: 1 << 2,\n  isMemoized: 1 << 3,\n  isHeadOfLeftRecursion: 1 << 4,\n  terminatesLR: 1 << 5,\n};\n\nfunction spaces(n) {\n  return repeat(' ', n).join('');\n}\n\n// Return a string representation of a portion of `input` at offset `pos`.\n// The result will contain exactly `len` characters.\nfunction getInputExcerpt(input, pos, len) {\n  const excerpt = asEscapedString(input.slice(pos, pos + len));\n\n  // Pad the output if necessary.\n  if (excerpt.length < len) {\n    return excerpt + repeat(' ', len - excerpt.length).join('');\n  }\n  return excerpt;\n}\n\nfunction asEscapedString(obj) {\n  if (typeof obj === 'string') {\n    // Replace non-printable characters with visible symbols.\n    return obj\n        .replace(/ /g, DOT_OPERATOR)\n        .replace(/\\t/g, SYMBOL_FOR_HORIZONTAL_TABULATION)\n        .replace(/\\n/g, SYMBOL_FOR_LINE_FEED)\n        .replace(/\\r/g, SYMBOL_FOR_CARRIAGE_RETURN);\n  }\n  return String(obj);\n}\n\n// ----------------- Trace -----------------\n\nclass Trace {\n  constructor(input, pos1, pos2, expr, succeeded, bindings, optChildren) {\n    this.input = input;\n    this.pos = this.pos1 = pos1;\n    this.pos2 = pos2;\n    this.source = new Interval(input, pos1, pos2);\n    this.expr = expr;\n    this.bindings = bindings;\n    this.children = optChildren || [];\n    this.terminatingLREntry = null;\n\n    this._flags = succeeded ? Flags.succeeded : 0;\n  }\n\n  get displayString() {\n    return this.expr.toDisplayString();\n  }\n\n  clone() {\n    return this.cloneWithExpr(this.expr);\n  }\n\n  cloneWithExpr(expr) {\n    const ans = new Trace(\n        this.input,\n        this.pos,\n        this.pos2,\n        expr,\n        this.succeeded,\n        this.bindings,\n        this.children,\n    );\n\n    ans.isHeadOfLeftRecursion = this.isHeadOfLeftRecursion;\n    ans.isImplicitSpaces = this.isImplicitSpaces;\n    ans.isMemoized = this.isMemoized;\n    ans.isRootNode = this.isRootNode;\n    ans.terminatesLR = this.terminatesLR;\n    ans.terminatingLREntry = this.terminatingLREntry;\n    return ans;\n  }\n\n  // Record the trace information for the terminating condition of the LR loop.\n  recordLRTermination(ruleBodyTrace, value) {\n    this.terminatingLREntry = new Trace(\n        this.input,\n        this.pos,\n        this.pos2,\n        this.expr,\n        false,\n        [value],\n        [ruleBodyTrace],\n    );\n    this.terminatingLREntry.terminatesLR = true;\n  }\n\n  // Recursively traverse this trace node and all its descendents, calling a visitor function\n  // for each node that is visited. If `vistorObjOrFn` is an object, then its 'enter' property\n  // is a function to call before visiting the children of a node, and its 'exit' property is\n  // a function to call afterwards. If `visitorObjOrFn` is a function, it represents the 'enter'\n  // function.\n  //\n  // The functions are called with three arguments: the Trace node, its parent Trace, and a number\n  // representing the depth of the node in the tree. (The root node has depth 0.) `optThisArg`, if\n  // specified, is the value to use for `this` when executing the visitor functions.\n  walk(visitorObjOrFn, optThisArg) {\n    let visitor = visitorObjOrFn;\n    if (typeof visitor === 'function') {\n      visitor = {enter: visitor};\n    }\n\n    function _walk(node, parent, depth) {\n      let recurse = true;\n      if (visitor.enter) {\n        if (visitor.enter.call(optThisArg, node, parent, depth) === Trace.prototype.SKIP) {\n          recurse = false;\n        }\n      }\n      if (recurse) {\n        node.children.forEach(child => {\n          _walk(child, node, depth + 1);\n        });\n        if (visitor.exit) {\n          visitor.exit.call(optThisArg, node, parent, depth);\n        }\n      }\n    }\n    if (this.isRootNode) {\n      // Don't visit the root node itself, only its children.\n      this.children.forEach(c => {\n        _walk(c, null, 0);\n      });\n    } else {\n      _walk(this, null, 0);\n    }\n  }\n\n  // Return a string representation of the trace.\n  // Sample:\n  //     12⋅+⋅2⋅*⋅3 ✓ exp ⇒  \"12\"\n  //     12⋅+⋅2⋅*⋅3   ✓ addExp (LR) ⇒  \"12\"\n  //     12⋅+⋅2⋅*⋅3       ✗ addExp_plus\n  toString() {\n    const sb = new StringBuffer();\n    this.walk((node, parent, depth) => {\n      if (!node) {\n        return this.SKIP;\n      }\n      const ctorName = node.expr.constructor.name;\n      // Don't print anything for Alt nodes.\n      if (ctorName === 'Alt') {\n        return; // eslint-disable-line consistent-return\n      }\n      sb.append(getInputExcerpt(node.input, node.pos, 10) + spaces(depth * 2 + 1));\n      sb.append((node.succeeded ? CHECK_MARK : BALLOT_X) + ' ' + node.displayString);\n      if (node.isHeadOfLeftRecursion) {\n        sb.append(' (LR)');\n      }\n      if (node.succeeded) {\n        const contents = asEscapedString(node.source.contents);\n        sb.append(' ' + RIGHTWARDS_DOUBLE_ARROW + '  ');\n        sb.append(typeof contents === 'string' ? '\"' + contents + '\"' : contents);\n      }\n      sb.append('\\n');\n    });\n    return sb.contents();\n  }\n}\n\n// A value that can be returned from visitor functions to indicate that a\n// node should not be recursed into.\nTrace.prototype.SKIP = {};\n\n// For convenience, create a getter and setter for the boolean flags in `Flags`.\nObject.keys(Flags).forEach(name => {\n  const mask = Flags[name];\n  Object.defineProperty(Trace.prototype, name, {\n    get() {\n      return (this._flags & mask) !== 0;\n    },\n    set(val) {\n      if (val) {\n        this._flags |= mask;\n      } else {\n        this._flags &= ~mask;\n      }\n    },\n  });\n});\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Return true if we should skip spaces preceding this expression in a syntactic context.\n*/\nPExpr.prototype.allowsSkippingPrecedingSpace = abstract('allowsSkippingPrecedingSpace');\n\n/*\n  Generally, these are all first-order expressions and (with the exception of Apply)\n  directly read from the input stream.\n*/\nany.allowsSkippingPrecedingSpace =\n  end.allowsSkippingPrecedingSpace =\n  Apply.prototype.allowsSkippingPrecedingSpace =\n  Terminal.prototype.allowsSkippingPrecedingSpace =\n  Range.prototype.allowsSkippingPrecedingSpace =\n  UnicodeChar.prototype.allowsSkippingPrecedingSpace =\n    function() {\n      return true;\n    };\n\n/*\n  Higher-order expressions that don't directly consume input.\n*/\nAlt.prototype.allowsSkippingPrecedingSpace =\n  Iter.prototype.allowsSkippingPrecedingSpace =\n  Lex.prototype.allowsSkippingPrecedingSpace =\n  Lookahead.prototype.allowsSkippingPrecedingSpace =\n  Not.prototype.allowsSkippingPrecedingSpace =\n  Param.prototype.allowsSkippingPrecedingSpace =\n  Seq.prototype.allowsSkippingPrecedingSpace =\n    function() {\n      return false;\n    };\n\nlet BuiltInRules$1;\n\nawaitBuiltInRules(g => {\n  BuiltInRules$1 = g;\n});\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\nlet lexifyCount;\n\nPExpr.prototype.assertAllApplicationsAreValid = function(ruleName, grammar) {\n  lexifyCount = 0;\n  this._assertAllApplicationsAreValid(ruleName, grammar);\n};\n\nPExpr.prototype._assertAllApplicationsAreValid = abstract(\n    '_assertAllApplicationsAreValid',\n);\n\nany._assertAllApplicationsAreValid =\n  end._assertAllApplicationsAreValid =\n  Terminal.prototype._assertAllApplicationsAreValid =\n  Range.prototype._assertAllApplicationsAreValid =\n  Param.prototype._assertAllApplicationsAreValid =\n  UnicodeChar.prototype._assertAllApplicationsAreValid =\n    function(ruleName, grammar) {\n      // no-op\n    };\n\nLex.prototype._assertAllApplicationsAreValid = function(ruleName, grammar) {\n  lexifyCount++;\n  this.expr._assertAllApplicationsAreValid(ruleName, grammar);\n  lexifyCount--;\n};\n\nAlt.prototype._assertAllApplicationsAreValid = function(ruleName, grammar) {\n  for (let idx = 0; idx < this.terms.length; idx++) {\n    this.terms[idx]._assertAllApplicationsAreValid(ruleName, grammar);\n  }\n};\n\nSeq.prototype._assertAllApplicationsAreValid = function(ruleName, grammar) {\n  for (let idx = 0; idx < this.factors.length; idx++) {\n    this.factors[idx]._assertAllApplicationsAreValid(ruleName, grammar);\n  }\n};\n\nIter.prototype._assertAllApplicationsAreValid =\n  Not.prototype._assertAllApplicationsAreValid =\n  Lookahead.prototype._assertAllApplicationsAreValid =\n    function(ruleName, grammar) {\n      this.expr._assertAllApplicationsAreValid(ruleName, grammar);\n    };\n\nApply.prototype._assertAllApplicationsAreValid = function(\n    ruleName,\n    grammar,\n    skipSyntacticCheck = false,\n) {\n  const ruleInfo = grammar.rules[this.ruleName];\n  const isContextSyntactic = isSyntactic(ruleName) && lexifyCount === 0;\n\n  // Make sure that the rule exists...\n  if (!ruleInfo) {\n    throw undeclaredRule(this.ruleName, grammar.name, this.source);\n  }\n\n  // ...and that this application is allowed\n  if (!skipSyntacticCheck && isSyntactic(this.ruleName) && !isContextSyntactic) {\n    throw applicationOfSyntacticRuleFromLexicalContext(this.ruleName, this);\n  }\n\n  // ...and that this application has the correct number of arguments.\n  const actual = this.args.length;\n  const expected = ruleInfo.formals.length;\n  if (actual !== expected) {\n    throw wrongNumberOfArguments(this.ruleName, expected, actual, this.source);\n  }\n\n  const isBuiltInApplySyntactic =\n    BuiltInRules$1 && ruleInfo === BuiltInRules$1.rules.applySyntactic;\n  const isBuiltInCaseInsensitive =\n    BuiltInRules$1 && ruleInfo === BuiltInRules$1.rules.caseInsensitive;\n\n  // If it's an application of 'caseInsensitive', ensure that the argument is a Terminal.\n  if (isBuiltInCaseInsensitive) {\n    if (!(this.args[0] instanceof Terminal)) {\n      throw incorrectArgumentType('a Terminal (e.g. \"abc\")', this.args[0]);\n    }\n  }\n\n  if (isBuiltInApplySyntactic) {\n    const arg = this.args[0];\n    if (!(arg instanceof Apply)) {\n      throw incorrectArgumentType('a syntactic rule application', arg);\n    }\n    if (!isSyntactic(arg.ruleName)) {\n      throw applySyntacticWithLexicalRuleApplication(arg);\n    }\n    if (isContextSyntactic) {\n      throw unnecessaryExperimentalApplySyntactic(this);\n    }\n  }\n\n  // ...and that all of the argument expressions only have valid applications and have arity 1.\n  // If `this` is an application of the built-in applySyntactic rule, then its arg is\n  // allowed (and expected) to be a syntactic rule, even if we're in a lexical context.\n  this.args.forEach(arg => {\n    arg._assertAllApplicationsAreValid(ruleName, grammar, isBuiltInApplySyntactic);\n    if (arg.getArity() !== 1) {\n      throw invalidParameter(this.ruleName, arg);\n    }\n  });\n};\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\nPExpr.prototype.assertChoicesHaveUniformArity = abstract(\n    'assertChoicesHaveUniformArity',\n);\n\nany.assertChoicesHaveUniformArity =\n  end.assertChoicesHaveUniformArity =\n  Terminal.prototype.assertChoicesHaveUniformArity =\n  Range.prototype.assertChoicesHaveUniformArity =\n  Param.prototype.assertChoicesHaveUniformArity =\n  Lex.prototype.assertChoicesHaveUniformArity =\n  UnicodeChar.prototype.assertChoicesHaveUniformArity =\n    function(ruleName) {\n      // no-op\n    };\n\nAlt.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  if (this.terms.length === 0) {\n    return;\n  }\n  const arity = this.terms[0].getArity();\n  for (let idx = 0; idx < this.terms.length; idx++) {\n    const term = this.terms[idx];\n    term.assertChoicesHaveUniformArity();\n    const otherArity = term.getArity();\n    if (arity !== otherArity) {\n      throw inconsistentArity(ruleName, arity, otherArity, term);\n    }\n  }\n};\n\nExtend.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  // Extend is a special case of Alt that's guaranteed to have exactly two\n  // cases: [extensions, origBody].\n  const actualArity = this.terms[0].getArity();\n  const expectedArity = this.terms[1].getArity();\n  if (actualArity !== expectedArity) {\n    throw inconsistentArity(ruleName, expectedArity, actualArity, this.terms[0]);\n  }\n};\n\nSeq.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  for (let idx = 0; idx < this.factors.length; idx++) {\n    this.factors[idx].assertChoicesHaveUniformArity(ruleName);\n  }\n};\n\nIter.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  this.expr.assertChoicesHaveUniformArity(ruleName);\n};\n\nNot.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  // no-op (not required b/c the nested expr doesn't show up in the CST)\n};\n\nLookahead.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  this.expr.assertChoicesHaveUniformArity(ruleName);\n};\n\nApply.prototype.assertChoicesHaveUniformArity = function(ruleName) {\n  // The arities of the parameter expressions is required to be 1 by\n  // `assertAllApplicationsAreValid()`.\n};\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\nPExpr.prototype.assertIteratedExprsAreNotNullable = abstract(\n    'assertIteratedExprsAreNotNullable',\n);\n\nany.assertIteratedExprsAreNotNullable =\n  end.assertIteratedExprsAreNotNullable =\n  Terminal.prototype.assertIteratedExprsAreNotNullable =\n  Range.prototype.assertIteratedExprsAreNotNullable =\n  Param.prototype.assertIteratedExprsAreNotNullable =\n  UnicodeChar.prototype.assertIteratedExprsAreNotNullable =\n    function(grammar) {\n      // no-op\n    };\n\nAlt.prototype.assertIteratedExprsAreNotNullable = function(grammar) {\n  for (let idx = 0; idx < this.terms.length; idx++) {\n    this.terms[idx].assertIteratedExprsAreNotNullable(grammar);\n  }\n};\n\nSeq.prototype.assertIteratedExprsAreNotNullable = function(grammar) {\n  for (let idx = 0; idx < this.factors.length; idx++) {\n    this.factors[idx].assertIteratedExprsAreNotNullable(grammar);\n  }\n};\n\nIter.prototype.assertIteratedExprsAreNotNullable = function(grammar) {\n  // Note: this is the implementation of this method for `Star` and `Plus` expressions.\n  // It is overridden for `Opt` below.\n  this.expr.assertIteratedExprsAreNotNullable(grammar);\n  if (this.expr.isNullable(grammar)) {\n    throw kleeneExprHasNullableOperand(this, []);\n  }\n};\n\nOpt.prototype.assertIteratedExprsAreNotNullable =\n  Not.prototype.assertIteratedExprsAreNotNullable =\n  Lookahead.prototype.assertIteratedExprsAreNotNullable =\n  Lex.prototype.assertIteratedExprsAreNotNullable =\n    function(grammar) {\n      this.expr.assertIteratedExprsAreNotNullable(grammar);\n    };\n\nApply.prototype.assertIteratedExprsAreNotNullable = function(grammar) {\n  this.args.forEach(arg => {\n    arg.assertIteratedExprsAreNotNullable(grammar);\n  });\n};\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nclass Node {\n  constructor(matchLength) {\n    this.matchLength = matchLength;\n  }\n\n  get ctorName() {\n    throw new Error('subclass responsibility');\n  }\n\n  numChildren() {\n    return this.children ? this.children.length : 0;\n  }\n\n  childAt(idx) {\n    if (this.children) {\n      return this.children[idx];\n    }\n  }\n\n  indexOfChild(arg) {\n    return this.children.indexOf(arg);\n  }\n\n  hasChildren() {\n    return this.numChildren() > 0;\n  }\n\n  hasNoChildren() {\n    return !this.hasChildren();\n  }\n\n  onlyChild() {\n    if (this.numChildren() !== 1) {\n      throw new Error(\n          'cannot get only child of a node of type ' +\n          this.ctorName +\n          ' (it has ' +\n          this.numChildren() +\n          ' children)',\n      );\n    } else {\n      return this.firstChild();\n    }\n  }\n\n  firstChild() {\n    if (this.hasNoChildren()) {\n      throw new Error(\n          'cannot get first child of a ' + this.ctorName + ' node, which has no children',\n      );\n    } else {\n      return this.childAt(0);\n    }\n  }\n\n  lastChild() {\n    if (this.hasNoChildren()) {\n      throw new Error(\n          'cannot get last child of a ' + this.ctorName + ' node, which has no children',\n      );\n    } else {\n      return this.childAt(this.numChildren() - 1);\n    }\n  }\n\n  childBefore(child) {\n    const childIdx = this.indexOfChild(child);\n    if (childIdx < 0) {\n      throw new Error('Node.childBefore() called w/ an argument that is not a child');\n    } else if (childIdx === 0) {\n      throw new Error('cannot get child before first child');\n    } else {\n      return this.childAt(childIdx - 1);\n    }\n  }\n\n  childAfter(child) {\n    const childIdx = this.indexOfChild(child);\n    if (childIdx < 0) {\n      throw new Error('Node.childAfter() called w/ an argument that is not a child');\n    } else if (childIdx === this.numChildren() - 1) {\n      throw new Error('cannot get child after last child');\n    } else {\n      return this.childAt(childIdx + 1);\n    }\n  }\n\n  isTerminal() {\n    return false;\n  }\n\n  isNonterminal() {\n    return false;\n  }\n\n  isIteration() {\n    return false;\n  }\n\n  isOptional() {\n    return false;\n  }\n}\n\n// Terminals\n\nclass TerminalNode extends Node {\n  get ctorName() {\n    return '_terminal';\n  }\n\n  isTerminal() {\n    return true;\n  }\n\n  get primitiveValue() {\n    throw new Error('The `primitiveValue` property was removed in Ohm v17.');\n  }\n}\n\n// Nonterminals\n\nclass NonterminalNode extends Node {\n  constructor(ruleName, children, childOffsets, matchLength) {\n    super(matchLength);\n    this.ruleName = ruleName;\n    this.children = children;\n    this.childOffsets = childOffsets;\n  }\n\n  get ctorName() {\n    return this.ruleName;\n  }\n\n  isNonterminal() {\n    return true;\n  }\n\n  isLexical() {\n    return isLexical(this.ctorName);\n  }\n\n  isSyntactic() {\n    return isSyntactic(this.ctorName);\n  }\n}\n\n// Iterations\n\nclass IterationNode extends Node {\n  constructor(children, childOffsets, matchLength, isOptional) {\n    super(matchLength);\n    this.children = children;\n    this.childOffsets = childOffsets;\n    this.optional = isOptional;\n  }\n\n  get ctorName() {\n    return '_iter';\n  }\n\n  isIteration() {\n    return true;\n  }\n\n  isOptional() {\n    return this.optional;\n  }\n}\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Evaluate the expression and return `true` if it succeeds, `false` otherwise. This method should\n  only be called directly by `State.prototype.eval(expr)`, which also updates the data structures\n  that are used for tracing. (Making those updates in a method of `State` enables the trace-specific\n  data structures to be \"secrets\" of that class, which is good for modularity.)\n\n  The contract of this method is as follows:\n  * When the return value is `true`,\n    - the state object will have `expr.getArity()` more bindings than it did before the call.\n  * When the return value is `false`,\n    - the state object may have more bindings than it did before the call, and\n    - its input stream's position may be anywhere.\n\n  Note that `State.prototype.eval(expr)`, unlike this method, guarantees that neither the state\n  object's bindings nor its input stream's position will change if the expression fails to match.\n*/\nPExpr.prototype.eval = abstract('eval'); // function(state) { ... }\n\nany.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  const cp = inputStream.nextCodePoint();\n  if (cp !== undefined) {\n    state.pushBinding(new TerminalNode(String.fromCodePoint(cp).length), origPos);\n    return true;\n  } else {\n    state.processFailure(origPos, this);\n    return false;\n  }\n};\n\nend.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  if (inputStream.atEnd()) {\n    state.pushBinding(new TerminalNode(0), origPos);\n    return true;\n  } else {\n    state.processFailure(origPos, this);\n    return false;\n  }\n};\n\nTerminal.prototype.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  if (!inputStream.matchString(this.obj)) {\n    state.processFailure(origPos, this);\n    return false;\n  } else {\n    state.pushBinding(new TerminalNode(this.obj.length), origPos);\n    return true;\n  }\n};\n\nRange.prototype.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n\n  // A range can operate in one of two modes: matching a single, 16-bit _code unit_,\n  // or matching a _code point_. (Code points over 0xFFFF take up two 16-bit code units.)\n  const cp = this.matchCodePoint ? inputStream.nextCodePoint() : inputStream.nextCharCode();\n\n  // Always compare by code point value to get the correct result in all scenarios.\n  // Note that for strings of length 1, codePointAt(0) and charPointAt(0) are equivalent.\n  if (cp !== undefined && this.from.codePointAt(0) <= cp && cp <= this.to.codePointAt(0)) {\n    state.pushBinding(new TerminalNode(String.fromCodePoint(cp).length), origPos);\n    return true;\n  } else {\n    state.processFailure(origPos, this);\n    return false;\n  }\n};\n\nParam.prototype.eval = function(state) {\n  return state.eval(state.currentApplication().args[this.index]);\n};\n\nLex.prototype.eval = function(state) {\n  state.enterLexifiedContext();\n  const ans = state.eval(this.expr);\n  state.exitLexifiedContext();\n  return ans;\n};\n\nAlt.prototype.eval = function(state) {\n  for (let idx = 0; idx < this.terms.length; idx++) {\n    if (state.eval(this.terms[idx])) {\n      return true;\n    }\n  }\n  return false;\n};\n\nSeq.prototype.eval = function(state) {\n  for (let idx = 0; idx < this.factors.length; idx++) {\n    const factor = this.factors[idx];\n    if (!state.eval(factor)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nIter.prototype.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  const arity = this.getArity();\n  const cols = [];\n  const colOffsets = [];\n  while (cols.length < arity) {\n    cols.push([]);\n    colOffsets.push([]);\n  }\n\n  let numMatches = 0;\n  let prevPos = origPos;\n  let idx;\n  while (numMatches < this.maxNumMatches && state.eval(this.expr)) {\n    if (inputStream.pos === prevPos) {\n      throw kleeneExprHasNullableOperand(this, state._applicationStack);\n    }\n    prevPos = inputStream.pos;\n    numMatches++;\n    const row = state._bindings.splice(state._bindings.length - arity, arity);\n    const rowOffsets = state._bindingOffsets.splice(\n        state._bindingOffsets.length - arity,\n        arity,\n    );\n    for (idx = 0; idx < row.length; idx++) {\n      cols[idx].push(row[idx]);\n      colOffsets[idx].push(rowOffsets[idx]);\n    }\n  }\n  if (numMatches < this.minNumMatches) {\n    return false;\n  }\n  let offset = state.posToOffset(origPos);\n  let matchLength = 0;\n  if (numMatches > 0) {\n    const lastCol = cols[arity - 1];\n    const lastColOffsets = colOffsets[arity - 1];\n\n    const endOffset =\n      lastColOffsets[lastColOffsets.length - 1] + lastCol[lastCol.length - 1].matchLength;\n    offset = colOffsets[0][0];\n    matchLength = endOffset - offset;\n  }\n  const isOptional = this instanceof Opt;\n  for (idx = 0; idx < cols.length; idx++) {\n    state._bindings.push(\n        new IterationNode(cols[idx], colOffsets[idx], matchLength, isOptional),\n    );\n    state._bindingOffsets.push(offset);\n  }\n  return true;\n};\n\nNot.prototype.eval = function(state) {\n  /*\n    TODO:\n    - Right now we're just throwing away all of the failures that happen inside a `not`, and\n      recording `this` as a failed expression.\n    - Double negation should be equivalent to lookahead, but that's not the case right now wrt\n      failures. E.g., ~~'foo' produces a failure for ~~'foo', but maybe it should produce\n      a failure for 'foo' instead.\n  */\n\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  state.pushFailuresInfo();\n\n  const ans = state.eval(this.expr);\n\n  state.popFailuresInfo();\n  if (ans) {\n    state.processFailure(origPos, this);\n    return false;\n  }\n\n  inputStream.pos = origPos;\n  return true;\n};\n\nLookahead.prototype.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  if (state.eval(this.expr)) {\n    inputStream.pos = origPos;\n    return true;\n  } else {\n    return false;\n  }\n};\n\nApply.prototype.eval = function(state) {\n  const caller = state.currentApplication();\n  const actuals = caller ? caller.args : [];\n  const app = this.substituteParams(actuals);\n\n  const posInfo = state.getCurrentPosInfo();\n  if (posInfo.isActive(app)) {\n    // This rule is already active at this position, i.e., it is left-recursive.\n    return app.handleCycle(state);\n  }\n\n  const memoKey = app.toMemoKey();\n  const memoRec = posInfo.memo[memoKey];\n\n  if (memoRec && posInfo.shouldUseMemoizedResult(memoRec)) {\n    if (state.hasNecessaryInfo(memoRec)) {\n      return state.useMemoizedResult(state.inputStream.pos, memoRec);\n    }\n    delete posInfo.memo[memoKey];\n  }\n  return app.reallyEval(state);\n};\n\nApply.prototype.handleCycle = function(state) {\n  const posInfo = state.getCurrentPosInfo();\n  const {currentLeftRecursion} = posInfo;\n  const memoKey = this.toMemoKey();\n  let memoRec = posInfo.memo[memoKey];\n\n  if (currentLeftRecursion && currentLeftRecursion.headApplication.toMemoKey() === memoKey) {\n    // We already know about this left recursion, but it's possible there are \"involved\n    // applications\" that we don't already know about, so...\n    memoRec.updateInvolvedApplicationMemoKeys();\n  } else if (!memoRec) {\n    // New left recursion detected! Memoize a failure to try to get a seed parse.\n    memoRec = posInfo.memoize(memoKey, {\n      matchLength: 0,\n      examinedLength: 0,\n      value: false,\n      rightmostFailureOffset: -1,\n    });\n    posInfo.startLeftRecursion(this, memoRec);\n  }\n  return state.useMemoizedResult(state.inputStream.pos, memoRec);\n};\n\nApply.prototype.reallyEval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  const origPosInfo = state.getCurrentPosInfo();\n  const ruleInfo = state.grammar.rules[this.ruleName];\n  const {body} = ruleInfo;\n  const {description} = ruleInfo;\n\n  state.enterApplication(origPosInfo, this);\n\n  if (description) {\n    state.pushFailuresInfo();\n  }\n\n  // Reset the input stream's examinedLength property so that we can track\n  // the examined length of this particular application.\n  const origInputStreamExaminedLength = inputStream.examinedLength;\n  inputStream.examinedLength = 0;\n\n  let value = this.evalOnce(body, state);\n  const currentLR = origPosInfo.currentLeftRecursion;\n  const memoKey = this.toMemoKey();\n  const isHeadOfLeftRecursion = currentLR && currentLR.headApplication.toMemoKey() === memoKey;\n  let memoRec;\n\n  if (state.doNotMemoize) {\n    state.doNotMemoize = false;\n  } else if (isHeadOfLeftRecursion) {\n    value = this.growSeedResult(body, state, origPos, currentLR, value);\n    origPosInfo.endLeftRecursion();\n    memoRec = currentLR;\n    memoRec.examinedLength = inputStream.examinedLength - origPos;\n    memoRec.rightmostFailureOffset = state._getRightmostFailureOffset();\n    origPosInfo.memoize(memoKey, memoRec); // updates origPosInfo's maxExaminedLength\n  } else if (!currentLR || !currentLR.isInvolved(memoKey)) {\n    // This application is not involved in left recursion, so it's ok to memoize it.\n    memoRec = origPosInfo.memoize(memoKey, {\n      matchLength: inputStream.pos - origPos,\n      examinedLength: inputStream.examinedLength - origPos,\n      value,\n      failuresAtRightmostPosition: state.cloneRecordedFailures(),\n      rightmostFailureOffset: state._getRightmostFailureOffset(),\n    });\n  }\n  const succeeded = !!value;\n\n  if (description) {\n    state.popFailuresInfo();\n    if (!succeeded) {\n      state.processFailure(origPos, this);\n    }\n    if (memoRec) {\n      memoRec.failuresAtRightmostPosition = state.cloneRecordedFailures();\n    }\n  }\n\n  // Record trace information in the memo table, so that it is available if the memoized result\n  // is used later.\n  if (state.isTracing() && memoRec) {\n    const entry = state.getTraceEntry(origPos, this, succeeded, succeeded ? [value] : []);\n    if (isHeadOfLeftRecursion) {\n      assert(entry.terminatingLREntry != null || !succeeded);\n      entry.isHeadOfLeftRecursion = true;\n    }\n    memoRec.traceEntry = entry;\n  }\n\n  // Fix the input stream's examinedLength -- it should be the maximum examined length\n  // across all applications, not just this one.\n  inputStream.examinedLength = Math.max(\n      inputStream.examinedLength,\n      origInputStreamExaminedLength,\n  );\n\n  state.exitApplication(origPosInfo, value);\n\n  return succeeded;\n};\n\nApply.prototype.evalOnce = function(expr, state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n\n  if (state.eval(expr)) {\n    const arity = expr.getArity();\n    const bindings = state._bindings.splice(state._bindings.length - arity, arity);\n    const offsets = state._bindingOffsets.splice(state._bindingOffsets.length - arity, arity);\n    const matchLength = inputStream.pos - origPos;\n    return new NonterminalNode(this.ruleName, bindings, offsets, matchLength);\n  } else {\n    return false;\n  }\n};\n\nApply.prototype.growSeedResult = function(body, state, origPos, lrMemoRec, newValue) {\n  if (!newValue) {\n    return false;\n  }\n\n  const {inputStream} = state;\n\n  while (true) {\n    lrMemoRec.matchLength = inputStream.pos - origPos;\n    lrMemoRec.value = newValue;\n    lrMemoRec.failuresAtRightmostPosition = state.cloneRecordedFailures();\n\n    if (state.isTracing()) {\n      // Before evaluating the body again, add a trace node for this application to the memo entry.\n      // Its only child is a copy of the trace node from `newValue`, which will always be the last\n      // element in `state.trace`.\n      const seedTrace = state.trace[state.trace.length - 1];\n      lrMemoRec.traceEntry = new Trace(\n          state.input,\n          origPos,\n          inputStream.pos,\n          this,\n          true,\n          [newValue],\n          [seedTrace.clone()],\n      );\n    }\n    inputStream.pos = origPos;\n    newValue = this.evalOnce(body, state);\n    if (inputStream.pos - origPos <= lrMemoRec.matchLength) {\n      break;\n    }\n    if (state.isTracing()) {\n      state.trace.splice(-2, 1); // Drop the trace for the old seed.\n    }\n  }\n  if (state.isTracing()) {\n    // The last entry is for an unused result -- pop it and save it in the \"real\" entry.\n    lrMemoRec.traceEntry.recordLRTermination(state.trace.pop(), newValue);\n  }\n  inputStream.pos = origPos + lrMemoRec.matchLength;\n  return lrMemoRec.value;\n};\n\nUnicodeChar.prototype.eval = function(state) {\n  const {inputStream} = state;\n  const origPos = inputStream.pos;\n  const ch = inputStream.next();\n  if (ch && this.pattern.test(ch)) {\n    state.pushBinding(new TerminalNode(ch.length), origPos);\n    return true;\n  } else {\n    state.processFailure(origPos, this);\n    return false;\n  }\n};\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\nPExpr.prototype.getArity = abstract('getArity');\n\nany.getArity =\n  end.getArity =\n  Terminal.prototype.getArity =\n  Range.prototype.getArity =\n  Param.prototype.getArity =\n  Apply.prototype.getArity =\n  UnicodeChar.prototype.getArity =\n    function() {\n      return 1;\n    };\n\nAlt.prototype.getArity = function() {\n  // This is ok b/c all terms must have the same arity -- this property is\n  // checked by the Grammar constructor.\n  return this.terms.length === 0 ? 0 : this.terms[0].getArity();\n};\n\nSeq.prototype.getArity = function() {\n  let arity = 0;\n  for (let idx = 0; idx < this.factors.length; idx++) {\n    arity += this.factors[idx].getArity();\n  }\n  return arity;\n};\n\nIter.prototype.getArity = function() {\n  return this.expr.getArity();\n};\n\nNot.prototype.getArity = function() {\n  return 0;\n};\n\nLookahead.prototype.getArity = Lex.prototype.getArity = function() {\n  return this.expr.getArity();\n};\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction getMetaInfo(expr, grammarInterval) {\n  const metaInfo = {};\n  if (expr.source && grammarInterval) {\n    const adjusted = expr.source.relativeTo(grammarInterval);\n    metaInfo.sourceInterval = [adjusted.startIdx, adjusted.endIdx];\n  }\n  return metaInfo;\n}\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\nPExpr.prototype.outputRecipe = abstract('outputRecipe');\n\nany.outputRecipe = function(formals, grammarInterval) {\n  return ['any', getMetaInfo(this, grammarInterval)];\n};\n\nend.outputRecipe = function(formals, grammarInterval) {\n  return ['end', getMetaInfo(this, grammarInterval)];\n};\n\nTerminal.prototype.outputRecipe = function(formals, grammarInterval) {\n  return ['terminal', getMetaInfo(this, grammarInterval), this.obj];\n};\n\nRange.prototype.outputRecipe = function(formals, grammarInterval) {\n  return ['range', getMetaInfo(this, grammarInterval), this.from, this.to];\n};\n\nParam.prototype.outputRecipe = function(formals, grammarInterval) {\n  return ['param', getMetaInfo(this, grammarInterval), this.index];\n};\n\nAlt.prototype.outputRecipe = function(formals, grammarInterval) {\n  return ['alt', getMetaInfo(this, grammarInterval)].concat(\n      this.terms.map(term => term.outputRecipe(formals, grammarInterval)),\n  );\n};\n\nExtend.prototype.outputRecipe = function(formals, grammarInterval) {\n  const extension = this.terms[0]; // [extension, original]\n  return extension.outputRecipe(formals, grammarInterval);\n};\n\nSplice.prototype.outputRecipe = function(formals, grammarInterval) {\n  const beforeTerms = this.terms.slice(0, this.expansionPos);\n  const afterTerms = this.terms.slice(this.expansionPos + 1);\n  return [\n    'splice',\n    getMetaInfo(this, grammarInterval),\n    beforeTerms.map(term => term.outputRecipe(formals, grammarInterval)),\n    afterTerms.map(term => term.outputRecipe(formals, grammarInterval)),\n  ];\n};\n\nSeq.prototype.outputRecipe = function(formals, grammarInterval) {\n  return ['seq', getMetaInfo(this, grammarInterval)].concat(\n      this.factors.map(factor => factor.outputRecipe(formals, grammarInterval)),\n  );\n};\n\nStar.prototype.outputRecipe =\n  Plus.prototype.outputRecipe =\n  Opt.prototype.outputRecipe =\n  Not.prototype.outputRecipe =\n  Lookahead.prototype.outputRecipe =\n  Lex.prototype.outputRecipe =\n    function(formals, grammarInterval) {\n      return [\n        this.constructor.name.toLowerCase(),\n        getMetaInfo(this, grammarInterval),\n        this.expr.outputRecipe(formals, grammarInterval),\n      ];\n    };\n\nApply.prototype.outputRecipe = function(formals, grammarInterval) {\n  return [\n    'app',\n    getMetaInfo(this, grammarInterval),\n    this.ruleName,\n    this.args.map(arg => arg.outputRecipe(formals, grammarInterval)),\n  ];\n};\n\nUnicodeChar.prototype.outputRecipe = function(formals, grammarInterval) {\n  return ['unicodeChar', getMetaInfo(this, grammarInterval), this.category];\n};\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Called at grammar creation time to rewrite a rule body, replacing each reference to a formal\n  parameter with a `Param` node. Returns a PExpr -- either a new one, or the original one if\n  it was modified in place.\n*/\nPExpr.prototype.introduceParams = abstract('introduceParams');\n\nany.introduceParams =\n  end.introduceParams =\n  Terminal.prototype.introduceParams =\n  Range.prototype.introduceParams =\n  Param.prototype.introduceParams =\n  UnicodeChar.prototype.introduceParams =\n    function(formals) {\n      return this;\n    };\n\nAlt.prototype.introduceParams = function(formals) {\n  this.terms.forEach((term, idx, terms) => {\n    terms[idx] = term.introduceParams(formals);\n  });\n  return this;\n};\n\nSeq.prototype.introduceParams = function(formals) {\n  this.factors.forEach((factor, idx, factors) => {\n    factors[idx] = factor.introduceParams(formals);\n  });\n  return this;\n};\n\nIter.prototype.introduceParams =\n  Not.prototype.introduceParams =\n  Lookahead.prototype.introduceParams =\n  Lex.prototype.introduceParams =\n    function(formals) {\n      this.expr = this.expr.introduceParams(formals);\n      return this;\n    };\n\nApply.prototype.introduceParams = function(formals) {\n  const index = formals.indexOf(this.ruleName);\n  if (index >= 0) {\n    if (this.args.length > 0) {\n      // TODO: Should this be supported? See issue #64.\n      throw new Error('Parameterized rules cannot be passed as arguments to another rule.');\n    }\n    return new Param(index).withSource(this.source);\n  } else {\n    this.args.forEach((arg, idx, args) => {\n      args[idx] = arg.introduceParams(formals);\n    });\n    return this;\n  }\n};\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n// Returns `true` if this parsing expression may accept without consuming any input.\nPExpr.prototype.isNullable = function(grammar) {\n  return this._isNullable(grammar, Object.create(null));\n};\n\nPExpr.prototype._isNullable = abstract('_isNullable');\n\nany._isNullable =\n  Range.prototype._isNullable =\n  Param.prototype._isNullable =\n  Plus.prototype._isNullable =\n  UnicodeChar.prototype._isNullable =\n    function(grammar, memo) {\n      return false;\n    };\n\nend._isNullable = function(grammar, memo) {\n  return true;\n};\n\nTerminal.prototype._isNullable = function(grammar, memo) {\n  if (typeof this.obj === 'string') {\n    // This is an over-simplification: it's only correct if the input is a string. If it's an array\n    // or an object, then the empty string parsing expression is not nullable.\n    return this.obj === '';\n  } else {\n    return false;\n  }\n};\n\nAlt.prototype._isNullable = function(grammar, memo) {\n  return this.terms.length === 0 || this.terms.some(term => term._isNullable(grammar, memo));\n};\n\nSeq.prototype._isNullable = function(grammar, memo) {\n  return this.factors.every(factor => factor._isNullable(grammar, memo));\n};\n\nStar.prototype._isNullable =\n  Opt.prototype._isNullable =\n  Not.prototype._isNullable =\n  Lookahead.prototype._isNullable =\n    function(grammar, memo) {\n      return true;\n    };\n\nLex.prototype._isNullable = function(grammar, memo) {\n  return this.expr._isNullable(grammar, memo);\n};\n\nApply.prototype._isNullable = function(grammar, memo) {\n  const key = this.toMemoKey();\n  if (!Object.prototype.hasOwnProperty.call(memo, key)) {\n    const {body} = grammar.rules[this.ruleName];\n    const inlined = body.substituteParams(this.args);\n    memo[key] = false; // Prevent infinite recursion for recursive rules.\n    memo[key] = inlined._isNullable(grammar, memo);\n  }\n  return memo[key];\n};\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Returns a PExpr that results from recursively replacing every formal parameter (i.e., instance\n  of `Param`) inside this PExpr with its actual value from `actuals` (an Array).\n\n  The receiver must not be modified; a new PExpr must be returned if any replacement is necessary.\n*/\n// function(actuals) { ... }\nPExpr.prototype.substituteParams = abstract('substituteParams');\n\nany.substituteParams =\n  end.substituteParams =\n  Terminal.prototype.substituteParams =\n  Range.prototype.substituteParams =\n  UnicodeChar.prototype.substituteParams =\n    function(actuals) {\n      return this;\n    };\n\nParam.prototype.substituteParams = function(actuals) {\n  return actuals[this.index];\n};\n\nAlt.prototype.substituteParams = function(actuals) {\n  return new Alt(this.terms.map(term => term.substituteParams(actuals)));\n};\n\nSeq.prototype.substituteParams = function(actuals) {\n  return new Seq(this.factors.map(factor => factor.substituteParams(actuals)));\n};\n\nIter.prototype.substituteParams =\n  Not.prototype.substituteParams =\n  Lookahead.prototype.substituteParams =\n  Lex.prototype.substituteParams =\n    function(actuals) {\n      return new this.constructor(this.expr.substituteParams(actuals));\n    };\n\nApply.prototype.substituteParams = function(actuals) {\n  if (this.args.length === 0) {\n    // Avoid making a copy of this application, as an optimization\n    return this;\n  } else {\n    const args = this.args.map(arg => arg.substituteParams(actuals));\n    return new Apply(this.ruleName, args);\n  }\n};\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nfunction isRestrictedJSIdentifier(str) {\n  return /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(str);\n}\n\nfunction resolveDuplicatedNames(argumentNameList) {\n  // `count` is used to record the number of times each argument name occurs in the list,\n  // this is useful for checking duplicated argument name. It maps argument names to ints.\n  const count = Object.create(null);\n  argumentNameList.forEach(argName => {\n    count[argName] = (count[argName] || 0) + 1;\n  });\n\n  // Append subscripts ('_1', '_2', ...) to duplicate argument names.\n  Object.keys(count).forEach(dupArgName => {\n    if (count[dupArgName] <= 1) {\n      return;\n    }\n\n    // This name shows up more than once, so add subscripts.\n    let subscript = 1;\n    argumentNameList.forEach((argName, idx) => {\n      if (argName === dupArgName) {\n        argumentNameList[idx] = argName + '_' + subscript++;\n      }\n    });\n  });\n}\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  Returns a list of strings that will be used as the default argument names for its receiver\n  (a pexpr) in a semantic action. This is used exclusively by the Semantics Editor.\n\n  `firstArgIndex` is the 1-based index of the first argument name that will be generated for this\n  pexpr. It enables us to name arguments positionally, e.g., if the second argument is a\n  non-alphanumeric terminal like \"+\", it will be named '$2'.\n\n  `noDupCheck` is true if the caller of `toArgumentNameList` is not a top level caller. It enables\n  us to avoid nested duplication subscripts appending, e.g., '_1_1', '_1_2', by only checking\n  duplicates at the top level.\n\n  Here is a more elaborate example that illustrates how this method works:\n  `(a \"+\" b).toArgumentNameList(1)` evaluates to `['a', '$2', 'b']` with the following recursive\n  calls:\n\n    (a).toArgumentNameList(1) -> ['a'],\n    (\"+\").toArgumentNameList(2) -> ['$2'],\n    (b).toArgumentNameList(3) -> ['b']\n\n  Notes:\n  * This method must only be called on well-formed expressions, e.g., the receiver must\n    not have any Alt sub-expressions with inconsistent arities.\n  * e.getArity() === e.toArgumentNameList(1).length\n*/\n// function(firstArgIndex, noDupCheck) { ... }\nPExpr.prototype.toArgumentNameList = abstract('toArgumentNameList');\n\nany.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return ['any'];\n};\n\nend.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return ['end'];\n};\n\nTerminal.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  if (typeof this.obj === 'string' && /^[_a-zA-Z0-9]+$/.test(this.obj)) {\n    // If this terminal is a valid suffix for a JS identifier, just prepend it with '_'\n    return ['_' + this.obj];\n  } else {\n    // Otherwise, name it positionally.\n    return ['$' + firstArgIndex];\n  }\n};\n\nRange.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  let argName = this.from + '_to_' + this.to;\n  // If the `argName` is not valid then try to prepend a `_`.\n  if (!isRestrictedJSIdentifier(argName)) {\n    argName = '_' + argName;\n  }\n  // If the `argName` still not valid after prepending a `_`, then name it positionally.\n  if (!isRestrictedJSIdentifier(argName)) {\n    argName = '$' + firstArgIndex;\n  }\n  return [argName];\n};\n\nAlt.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  // `termArgNameLists` is an array of arrays where each row is the\n  // argument name list that corresponds to a term in this alternation.\n  const termArgNameLists = this.terms.map(term =>\n    term.toArgumentNameList(firstArgIndex, true),\n  );\n\n  const argumentNameList = [];\n  const numArgs = termArgNameLists[0].length;\n  for (let colIdx = 0; colIdx < numArgs; colIdx++) {\n    const col = [];\n    for (let rowIdx = 0; rowIdx < this.terms.length; rowIdx++) {\n      col.push(termArgNameLists[rowIdx][colIdx]);\n    }\n    const uniqueNames = copyWithoutDuplicates(col);\n    argumentNameList.push(uniqueNames.join('_or_'));\n  }\n\n  if (!noDupCheck) {\n    resolveDuplicatedNames(argumentNameList);\n  }\n  return argumentNameList;\n};\n\nSeq.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  // Generate the argument name list, without worrying about duplicates.\n  let argumentNameList = [];\n  this.factors.forEach(factor => {\n    const factorArgumentNameList = factor.toArgumentNameList(firstArgIndex, true);\n    argumentNameList = argumentNameList.concat(factorArgumentNameList);\n\n    // Shift the firstArgIndex to take this factor's argument names into account.\n    firstArgIndex += factorArgumentNameList.length;\n  });\n  if (!noDupCheck) {\n    resolveDuplicatedNames(argumentNameList);\n  }\n  return argumentNameList;\n};\n\nIter.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  const argumentNameList = this.expr\n      .toArgumentNameList(firstArgIndex, noDupCheck)\n      .map(exprArgumentString =>\n      exprArgumentString[exprArgumentString.length - 1] === 's' ?\n        exprArgumentString + 'es' :\n        exprArgumentString + 's',\n      );\n  if (!noDupCheck) {\n    resolveDuplicatedNames(argumentNameList);\n  }\n  return argumentNameList;\n};\n\nOpt.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return this.expr.toArgumentNameList(firstArgIndex, noDupCheck).map(argName => {\n    return 'opt' + argName[0].toUpperCase() + argName.slice(1);\n  });\n};\n\nNot.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return [];\n};\n\nLookahead.prototype.toArgumentNameList = Lex.prototype.toArgumentNameList =\n  function(firstArgIndex, noDupCheck) {\n    return this.expr.toArgumentNameList(firstArgIndex, noDupCheck);\n  };\n\nApply.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return [this.ruleName];\n};\n\nUnicodeChar.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return ['$' + firstArgIndex];\n};\n\nParam.prototype.toArgumentNameList = function(firstArgIndex, noDupCheck) {\n  return ['param' + this.index];\n};\n\n// \"Value pexprs\" (Value, Str, Arr, Obj) are going away soon, so we don't worry about them here.\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n// Returns a string representing the PExpr, for use as a UI label, etc.\nPExpr.prototype.toDisplayString = abstract('toDisplayString');\n\nAlt.prototype.toDisplayString = Seq.prototype.toDisplayString = function() {\n  if (this.source) {\n    return this.source.trimmed().contents;\n  }\n  return '[' + this.constructor.name + ']';\n};\n\nany.toDisplayString =\n  end.toDisplayString =\n  Iter.prototype.toDisplayString =\n  Not.prototype.toDisplayString =\n  Lookahead.prototype.toDisplayString =\n  Lex.prototype.toDisplayString =\n  Terminal.prototype.toDisplayString =\n  Range.prototype.toDisplayString =\n  Param.prototype.toDisplayString =\n    function() {\n      return this.toString();\n    };\n\nApply.prototype.toDisplayString = function() {\n  if (this.args.length > 0) {\n    const ps = this.args.map(arg => arg.toDisplayString());\n    return this.ruleName + '<' + ps.join(',') + '>';\n  } else {\n    return this.ruleName;\n  }\n};\n\nUnicodeChar.prototype.toDisplayString = function() {\n  return 'Unicode [' + this.category + '] character';\n};\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\n/*\n  `Failure`s represent expressions that weren't matched while parsing. They are used to generate\n  error messages automatically. The interface of `Failure`s includes the collowing methods:\n\n  - getText() : String\n  - getType() : String  (one of {\"description\", \"string\", \"code\"})\n  - isDescription() : bool\n  - isStringTerminal() : bool\n  - isCode() : bool\n  - isFluffy() : bool\n  - makeFluffy() : void\n  - subsumes(Failure) : bool\n*/\n\nfunction isValidType(type) {\n  return type === 'description' || type === 'string' || type === 'code';\n}\n\nclass Failure {\n  constructor(pexpr, text, type) {\n    if (!isValidType(type)) {\n      throw new Error('invalid Failure type: ' + type);\n    }\n    this.pexpr = pexpr;\n    this.text = text;\n    this.type = type;\n    this.fluffy = false;\n  }\n\n  getPExpr() {\n    return this.pexpr;\n  }\n\n  getText() {\n    return this.text;\n  }\n\n  getType() {\n    return this.type;\n  }\n\n  isDescription() {\n    return this.type === 'description';\n  }\n\n  isStringTerminal() {\n    return this.type === 'string';\n  }\n\n  isCode() {\n    return this.type === 'code';\n  }\n\n  isFluffy() {\n    return this.fluffy;\n  }\n\n  makeFluffy() {\n    this.fluffy = true;\n  }\n\n  clearFluffy() {\n    this.fluffy = false;\n  }\n\n  subsumes(that) {\n    return (\n      this.getText() === that.getText() &&\n      this.type === that.type &&\n      (!this.isFluffy() || (this.isFluffy() && that.isFluffy()))\n    );\n  }\n\n  toString() {\n    return this.type === 'string' ? JSON.stringify(this.getText()) : this.getText();\n  }\n\n  clone() {\n    const failure = new Failure(this.pexpr, this.text, this.type);\n    if (this.isFluffy()) {\n      failure.makeFluffy();\n    }\n    return failure;\n  }\n\n  toKey() {\n    return this.toString() + '#' + this.type;\n  }\n}\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\nPExpr.prototype.toFailure = abstract('toFailure');\n\nany.toFailure = function(grammar) {\n  return new Failure(this, 'any object', 'description');\n};\n\nend.toFailure = function(grammar) {\n  return new Failure(this, 'end of input', 'description');\n};\n\nTerminal.prototype.toFailure = function(grammar) {\n  return new Failure(this, this.obj, 'string');\n};\n\nRange.prototype.toFailure = function(grammar) {\n  // TODO: come up with something better\n  return new Failure(this, JSON.stringify(this.from) + '..' + JSON.stringify(this.to), 'code');\n};\n\nNot.prototype.toFailure = function(grammar) {\n  const description =\n    this.expr === any ? 'nothing' : 'not ' + this.expr.toFailure(grammar);\n  return new Failure(this, description, 'description');\n};\n\nLookahead.prototype.toFailure = function(grammar) {\n  return this.expr.toFailure(grammar);\n};\n\nApply.prototype.toFailure = function(grammar) {\n  let {description} = grammar.rules[this.ruleName];\n  if (!description) {\n    const article = /^[aeiouAEIOU]/.test(this.ruleName) ? 'an' : 'a';\n    description = article + ' ' + this.ruleName;\n  }\n  return new Failure(this, description, 'description');\n};\n\nUnicodeChar.prototype.toFailure = function(grammar) {\n  return new Failure(this, 'a Unicode [' + this.category + '] character', 'description');\n};\n\nAlt.prototype.toFailure = function(grammar) {\n  const fs = this.terms.map(t => t.toFailure(grammar));\n  const description = '(' + fs.join(' or ') + ')';\n  return new Failure(this, description, 'description');\n};\n\nSeq.prototype.toFailure = function(grammar) {\n  const fs = this.factors.map(f => f.toFailure(grammar));\n  const description = '(' + fs.join(' ') + ')';\n  return new Failure(this, description, 'description');\n};\n\nIter.prototype.toFailure = function(grammar) {\n  const description = '(' + this.expr.toFailure(grammar) + this.operator + ')';\n  return new Failure(this, description, 'description');\n};\n\n// --------------------------------------------------------------------\n// Operations\n// --------------------------------------------------------------------\n\n/*\n  e1.toString() === e2.toString() ==> e1 and e2 are semantically equivalent.\n  Note that this is not an iff (<==>): e.g.,\n  (~\"b\" \"a\").toString() !== (\"a\").toString(), even though\n  ~\"b\" \"a\" and \"a\" are interchangeable in any grammar,\n  both in terms of the languages they accept and their arities.\n*/\nPExpr.prototype.toString = abstract('toString');\n\nany.toString = function() {\n  return 'any';\n};\n\nend.toString = function() {\n  return 'end';\n};\n\nTerminal.prototype.toString = function() {\n  return JSON.stringify(this.obj);\n};\n\nRange.prototype.toString = function() {\n  return JSON.stringify(this.from) + '..' + JSON.stringify(this.to);\n};\n\nParam.prototype.toString = function() {\n  return '$' + this.index;\n};\n\nLex.prototype.toString = function() {\n  return '#(' + this.expr.toString() + ')';\n};\n\nAlt.prototype.toString = function() {\n  return this.terms.length === 1 ?\n    this.terms[0].toString() :\n    '(' + this.terms.map(term => term.toString()).join(' | ') + ')';\n};\n\nSeq.prototype.toString = function() {\n  return this.factors.length === 1 ?\n    this.factors[0].toString() :\n    '(' + this.factors.map(factor => factor.toString()).join(' ') + ')';\n};\n\nIter.prototype.toString = function() {\n  return this.expr + this.operator;\n};\n\nNot.prototype.toString = function() {\n  return '~' + this.expr;\n};\n\nLookahead.prototype.toString = function() {\n  return '&' + this.expr;\n};\n\nApply.prototype.toString = function() {\n  if (this.args.length > 0) {\n    const ps = this.args.map(arg => arg.toString());\n    return this.ruleName + '<' + ps.join(',') + '>';\n  } else {\n    return this.ruleName;\n  }\n};\n\nUnicodeChar.prototype.toString = function() {\n  return '\\\\p{' + this.category + '}';\n};\n\nclass CaseInsensitiveTerminal extends PExpr {\n  constructor(param) {\n    super();\n    this.obj = param;\n  }\n\n  _getString(state) {\n    const terminal = state.currentApplication().args[this.obj.index];\n    assert(terminal instanceof Terminal, 'expected a Terminal expression');\n    return terminal.obj;\n  }\n\n  // Implementation of the PExpr API\n\n  allowsSkippingPrecedingSpace() {\n    return true;\n  }\n\n  eval(state) {\n    const {inputStream} = state;\n    const origPos = inputStream.pos;\n    const matchStr = this._getString(state);\n    if (!inputStream.matchString(matchStr, true)) {\n      state.processFailure(origPos, this);\n      return false;\n    } else {\n      state.pushBinding(new TerminalNode(matchStr.length), origPos);\n      return true;\n    }\n  }\n\n  getArity() {\n    return 1;\n  }\n\n  substituteParams(actuals) {\n    return new CaseInsensitiveTerminal(this.obj.substituteParams(actuals));\n  }\n\n  toDisplayString() {\n    return this.obj.toDisplayString() + ' (case-insensitive)';\n  }\n\n  toFailure(grammar) {\n    return new Failure(\n        this,\n        this.obj.toFailure(grammar) + ' (case-insensitive)',\n        'description',\n    );\n  }\n\n  _isNullable(grammar, memo) {\n    return this.obj._isNullable(grammar, memo);\n  }\n}\n\n// --------------------------------------------------------------------\n\nvar pexprs = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CaseInsensitiveTerminal: CaseInsensitiveTerminal,\n  PExpr: PExpr,\n  any: any,\n  end: end,\n  Terminal: Terminal,\n  Range: Range,\n  Param: Param,\n  Alt: Alt,\n  Extend: Extend,\n  Splice: Splice,\n  Seq: Seq,\n  Iter: Iter,\n  Star: Star,\n  Plus: Plus,\n  Opt: Opt,\n  Not: Not,\n  Lookahead: Lookahead,\n  Lex: Lex,\n  Apply: Apply,\n  UnicodeChar: UnicodeChar\n});\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nlet builtInApplySyntacticBody;\n\nawaitBuiltInRules(builtInRules => {\n  builtInApplySyntacticBody = builtInRules.rules.applySyntactic.body;\n});\n\nconst applySpaces = new Apply('spaces');\n\nclass MatchState {\n  constructor(matcher, startExpr, optPositionToRecordFailures) {\n    this.matcher = matcher;\n    this.startExpr = startExpr;\n\n    this.grammar = matcher.grammar;\n    this.input = matcher.getInput();\n    this.inputStream = new InputStream(this.input);\n    this.memoTable = matcher._memoTable;\n\n    this.userData = undefined;\n    this.doNotMemoize = false;\n\n    this._bindings = [];\n    this._bindingOffsets = [];\n    this._applicationStack = [];\n    this._posStack = [0];\n    this.inLexifiedContextStack = [false];\n\n    this.rightmostFailurePosition = -1;\n    this._rightmostFailurePositionStack = [];\n    this._recordedFailuresStack = [];\n\n    if (optPositionToRecordFailures !== undefined) {\n      this.positionToRecordFailures = optPositionToRecordFailures;\n      this.recordedFailures = Object.create(null);\n    }\n  }\n\n  posToOffset(pos) {\n    return pos - this._posStack[this._posStack.length - 1];\n  }\n\n  enterApplication(posInfo, app) {\n    this._posStack.push(this.inputStream.pos);\n    this._applicationStack.push(app);\n    this.inLexifiedContextStack.push(false);\n    posInfo.enter(app);\n    this._rightmostFailurePositionStack.push(this.rightmostFailurePosition);\n    this.rightmostFailurePosition = -1;\n  }\n\n  exitApplication(posInfo, optNode) {\n    const origPos = this._posStack.pop();\n    this._applicationStack.pop();\n    this.inLexifiedContextStack.pop();\n    posInfo.exit();\n\n    this.rightmostFailurePosition = Math.max(\n        this.rightmostFailurePosition,\n        this._rightmostFailurePositionStack.pop(),\n    );\n\n    if (optNode) {\n      this.pushBinding(optNode, origPos);\n    }\n  }\n\n  enterLexifiedContext() {\n    this.inLexifiedContextStack.push(true);\n  }\n\n  exitLexifiedContext() {\n    this.inLexifiedContextStack.pop();\n  }\n\n  currentApplication() {\n    return this._applicationStack[this._applicationStack.length - 1];\n  }\n\n  inSyntacticContext() {\n    const currentApplication = this.currentApplication();\n    if (currentApplication) {\n      return currentApplication.isSyntactic() && !this.inLexifiedContext();\n    } else {\n      // The top-level context is syntactic if the start application is.\n      return this.startExpr.factors[0].isSyntactic();\n    }\n  }\n\n  inLexifiedContext() {\n    return this.inLexifiedContextStack[this.inLexifiedContextStack.length - 1];\n  }\n\n  skipSpaces() {\n    this.pushFailuresInfo();\n    this.eval(applySpaces);\n    this.popBinding();\n    this.popFailuresInfo();\n    return this.inputStream.pos;\n  }\n\n  skipSpacesIfInSyntacticContext() {\n    return this.inSyntacticContext() ? this.skipSpaces() : this.inputStream.pos;\n  }\n\n  maybeSkipSpacesBefore(expr) {\n    if (expr.allowsSkippingPrecedingSpace() && expr !== applySpaces) {\n      return this.skipSpacesIfInSyntacticContext();\n    } else {\n      return this.inputStream.pos;\n    }\n  }\n\n  pushBinding(node, origPos) {\n    this._bindings.push(node);\n    this._bindingOffsets.push(this.posToOffset(origPos));\n  }\n\n  popBinding() {\n    this._bindings.pop();\n    this._bindingOffsets.pop();\n  }\n\n  numBindings() {\n    return this._bindings.length;\n  }\n\n  truncateBindings(newLength) {\n    // Yes, this is this really faster than setting the `length` property (tested with\n    // bin/es5bench on Node v6.1.0).\n    // Update 2021-10-25: still true on v14.15.5 — it's ~20% speedup on es5bench.\n    while (this._bindings.length > newLength) {\n      this.popBinding();\n    }\n  }\n\n  getCurrentPosInfo() {\n    return this.getPosInfo(this.inputStream.pos);\n  }\n\n  getPosInfo(pos) {\n    let posInfo = this.memoTable[pos];\n    if (!posInfo) {\n      posInfo = this.memoTable[pos] = new PosInfo();\n    }\n    return posInfo;\n  }\n\n  processFailure(pos, expr) {\n    this.rightmostFailurePosition = Math.max(this.rightmostFailurePosition, pos);\n\n    if (this.recordedFailures && pos === this.positionToRecordFailures) {\n      const app = this.currentApplication();\n      if (app) {\n        // Substitute parameters with the actual pexprs that were passed to\n        // the current rule.\n        expr = expr.substituteParams(app.args);\n      }\n\n      this.recordFailure(expr.toFailure(this.grammar), false);\n    }\n  }\n\n  recordFailure(failure, shouldCloneIfNew) {\n    const key = failure.toKey();\n    if (!this.recordedFailures[key]) {\n      this.recordedFailures[key] = shouldCloneIfNew ? failure.clone() : failure;\n    } else if (this.recordedFailures[key].isFluffy() && !failure.isFluffy()) {\n      this.recordedFailures[key].clearFluffy();\n    }\n  }\n\n  recordFailures(failures, shouldCloneIfNew) {\n    Object.keys(failures).forEach(key => {\n      this.recordFailure(failures[key], shouldCloneIfNew);\n    });\n  }\n\n  cloneRecordedFailures() {\n    if (!this.recordedFailures) {\n      return undefined;\n    }\n\n    const ans = Object.create(null);\n    Object.keys(this.recordedFailures).forEach(key => {\n      ans[key] = this.recordedFailures[key].clone();\n    });\n    return ans;\n  }\n\n  getRightmostFailurePosition() {\n    return this.rightmostFailurePosition;\n  }\n\n  _getRightmostFailureOffset() {\n    return this.rightmostFailurePosition >= 0 ?\n      this.posToOffset(this.rightmostFailurePosition) :\n      -1;\n  }\n\n  // Returns the memoized trace entry for `expr` at `pos`, if one exists, `null` otherwise.\n  getMemoizedTraceEntry(pos, expr) {\n    const posInfo = this.memoTable[pos];\n    if (posInfo && expr instanceof Apply) {\n      const memoRec = posInfo.memo[expr.toMemoKey()];\n      if (memoRec && memoRec.traceEntry) {\n        const entry = memoRec.traceEntry.cloneWithExpr(expr);\n        entry.isMemoized = true;\n        return entry;\n      }\n    }\n    return null;\n  }\n\n  // Returns a new trace entry, with the currently active trace array as its children.\n  getTraceEntry(pos, expr, succeeded, bindings) {\n    if (expr instanceof Apply) {\n      const app = this.currentApplication();\n      const actuals = app ? app.args : [];\n      expr = expr.substituteParams(actuals);\n    }\n    return (\n      this.getMemoizedTraceEntry(pos, expr) ||\n      new Trace(this.input, pos, this.inputStream.pos, expr, succeeded, bindings, this.trace)\n    );\n  }\n\n  isTracing() {\n    return !!this.trace;\n  }\n\n  hasNecessaryInfo(memoRec) {\n    if (this.trace && !memoRec.traceEntry) {\n      return false;\n    }\n\n    if (\n      this.recordedFailures &&\n      this.inputStream.pos + memoRec.rightmostFailureOffset === this.positionToRecordFailures\n    ) {\n      return !!memoRec.failuresAtRightmostPosition;\n    }\n\n    return true;\n  }\n\n  useMemoizedResult(origPos, memoRec) {\n    if (this.trace) {\n      this.trace.push(memoRec.traceEntry);\n    }\n\n    const memoRecRightmostFailurePosition =\n      this.inputStream.pos + memoRec.rightmostFailureOffset;\n    this.rightmostFailurePosition = Math.max(\n        this.rightmostFailurePosition,\n        memoRecRightmostFailurePosition,\n    );\n    if (\n      this.recordedFailures &&\n      this.positionToRecordFailures === memoRecRightmostFailurePosition &&\n      memoRec.failuresAtRightmostPosition\n    ) {\n      this.recordFailures(memoRec.failuresAtRightmostPosition, true);\n    }\n\n    this.inputStream.examinedLength = Math.max(\n        this.inputStream.examinedLength,\n        memoRec.examinedLength + origPos,\n    );\n\n    if (memoRec.value) {\n      this.inputStream.pos += memoRec.matchLength;\n      this.pushBinding(memoRec.value, origPos);\n      return true;\n    }\n    return false;\n  }\n\n  // Evaluate `expr` and return `true` if it succeeded, `false` otherwise. On success, `bindings`\n  // will have `expr.getArity()` more elements than before, and the input stream's position may\n  // have increased. On failure, `bindings` and position will be unchanged.\n  eval(expr) {\n    const {inputStream} = this;\n    const origNumBindings = this._bindings.length;\n    const origUserData = this.userData;\n\n    let origRecordedFailures;\n    if (this.recordedFailures) {\n      origRecordedFailures = this.recordedFailures;\n      this.recordedFailures = Object.create(null);\n    }\n\n    const origPos = inputStream.pos;\n    const memoPos = this.maybeSkipSpacesBefore(expr);\n\n    let origTrace;\n    if (this.trace) {\n      origTrace = this.trace;\n      this.trace = [];\n    }\n\n    // Do the actual evaluation.\n    const ans = expr.eval(this);\n\n    if (this.trace) {\n      const bindings = this._bindings.slice(origNumBindings);\n      const traceEntry = this.getTraceEntry(memoPos, expr, ans, bindings);\n      traceEntry.isImplicitSpaces = expr === applySpaces;\n      traceEntry.isRootNode = expr === this.startExpr;\n      origTrace.push(traceEntry);\n      this.trace = origTrace;\n    }\n\n    if (ans) {\n      if (this.recordedFailures && inputStream.pos === this.positionToRecordFailures) {\n        Object.keys(this.recordedFailures).forEach(key => {\n          this.recordedFailures[key].makeFluffy();\n        });\n      }\n    } else {\n      // Reset the position, bindings, and userData.\n      inputStream.pos = origPos;\n      this.truncateBindings(origNumBindings);\n      this.userData = origUserData;\n    }\n\n    if (this.recordedFailures) {\n      this.recordFailures(origRecordedFailures, false);\n    }\n\n    // The built-in applySyntactic rule needs special handling: we want to skip\n    // trailing spaces, just as with the top-level application of a syntactic rule.\n    if (expr === builtInApplySyntacticBody) {\n      this.skipSpaces();\n    }\n\n    return ans;\n  }\n\n  getMatchResult() {\n    this.grammar._setUpMatchState(this);\n    this.eval(this.startExpr);\n    let rightmostFailures;\n    if (this.recordedFailures) {\n      rightmostFailures = Object.keys(this.recordedFailures).map(\n          key => this.recordedFailures[key],\n      );\n    }\n    const cst = this._bindings[0];\n    if (cst) {\n      cst.grammar = this.grammar;\n    }\n    return new MatchResult(\n        this.matcher,\n        this.input,\n        this.startExpr,\n        cst,\n        this._bindingOffsets[0],\n        this.rightmostFailurePosition,\n        rightmostFailures,\n    );\n  }\n\n  getTrace() {\n    this.trace = [];\n    const matchResult = this.getMatchResult();\n\n    // The trace node for the start rule is always the last entry. If it is a syntactic rule,\n    // the first entry is for an application of 'spaces'.\n    // TODO(pdubroy): Clean this up by introducing a special `Match<startAppl>` rule, which will\n    // ensure that there is always a single root trace node.\n    const rootTrace = this.trace[this.trace.length - 1];\n    rootTrace.result = matchResult;\n    return rootTrace;\n  }\n\n  pushFailuresInfo() {\n    this._rightmostFailurePositionStack.push(this.rightmostFailurePosition);\n    this._recordedFailuresStack.push(this.recordedFailures);\n  }\n\n  popFailuresInfo() {\n    this.rightmostFailurePosition = this._rightmostFailurePositionStack.pop();\n    this.recordedFailures = this._recordedFailuresStack.pop();\n  }\n}\n\nclass Matcher {\n  constructor(grammar) {\n    this.grammar = grammar;\n    this._memoTable = [];\n    this._input = '';\n    this._isMemoTableStale = false;\n  }\n\n  _resetMemoTable() {\n    this._memoTable = [];\n    this._isMemoTableStale = false;\n  }\n\n  getInput() {\n    return this._input;\n  }\n\n  setInput(str) {\n    if (this._input !== str) {\n      this.replaceInputRange(0, this._input.length, str);\n    }\n    return this;\n  }\n\n  replaceInputRange(startIdx, endIdx, str) {\n    const prevInput = this._input;\n    const memoTable = this._memoTable;\n    if (\n      startIdx < 0 ||\n      startIdx > prevInput.length ||\n      endIdx < 0 ||\n      endIdx > prevInput.length ||\n      startIdx > endIdx\n    ) {\n      throw new Error('Invalid indices: ' + startIdx + ' and ' + endIdx);\n    }\n\n    // update input\n    this._input = prevInput.slice(0, startIdx) + str + prevInput.slice(endIdx);\n    if (this._input !== prevInput && memoTable.length > 0) {\n      this._isMemoTableStale = true;\n    }\n\n    // update memo table (similar to the above)\n    const restOfMemoTable = memoTable.slice(endIdx);\n    memoTable.length = startIdx;\n    for (let idx = 0; idx < str.length; idx++) {\n      memoTable.push(undefined);\n    }\n    for (const posInfo of restOfMemoTable) {\n      memoTable.push(posInfo);\n    }\n\n    // Invalidate memoRecs\n    for (let pos = 0; pos < startIdx; pos++) {\n      const posInfo = memoTable[pos];\n      if (posInfo) {\n        posInfo.clearObsoleteEntries(pos, startIdx);\n      }\n    }\n\n    return this;\n  }\n\n  match(optStartApplicationStr, options = {incremental: true}) {\n    return this._match(this._getStartExpr(optStartApplicationStr), {\n      incremental: options.incremental,\n      tracing: false,\n    });\n  }\n\n  trace(optStartApplicationStr, options = {incremental: true}) {\n    return this._match(this._getStartExpr(optStartApplicationStr), {\n      incremental: options.incremental,\n      tracing: true,\n    });\n  }\n\n  _match(startExpr, options = {}) {\n    const opts = {\n      tracing: false,\n      incremental: true,\n      positionToRecordFailures: undefined,\n      ...options,\n    };\n    if (!opts.incremental) {\n      this._resetMemoTable();\n    } else if (this._isMemoTableStale && !this.grammar.supportsIncrementalParsing) {\n      throw grammarDoesNotSupportIncrementalParsing(this.grammar);\n    }\n\n    const state = new MatchState(this, startExpr, opts.positionToRecordFailures);\n    return opts.tracing ? state.getTrace() : state.getMatchResult();\n  }\n\n  /*\n    Returns the starting expression for this Matcher's associated grammar. If\n    `optStartApplicationStr` is specified, it is a string expressing a rule application in the\n    grammar. If not specified, the grammar's default start rule will be used.\n  */\n  _getStartExpr(optStartApplicationStr) {\n    const applicationStr = optStartApplicationStr || this.grammar.defaultStartRule;\n    if (!applicationStr) {\n      throw new Error('Missing start rule argument -- the grammar has no default start rule.');\n    }\n\n    const startApp = this.grammar.parseApplication(applicationStr);\n    return new Seq([startApp, end]);\n  }\n}\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nconst globalActionStack = [];\n\nconst hasOwnProperty = (x, prop) => Object.prototype.hasOwnProperty.call(x, prop);\n\n// ----------------- Wrappers -----------------\n\n// Wrappers decorate CST nodes with all of the functionality (i.e., operations and attributes)\n// provided by a Semantics (see below). `Wrapper` is the abstract superclass of all wrappers. A\n// `Wrapper` must have `_node` and `_semantics` instance variables, which refer to the CST node and\n// Semantics (resp.) for which it was created, and a `_childWrappers` instance variable which is\n// used to cache the wrapper instances that are created for its child nodes. Setting these instance\n// variables is the responsibility of the constructor of each Semantics-specific subclass of\n// `Wrapper`.\nclass Wrapper {\n  constructor(node, sourceInterval, baseInterval) {\n    this._node = node;\n    this.source = sourceInterval;\n\n    // The interval that the childOffsets of `node` are relative to. It should be the source\n    // of the closest Nonterminal node.\n    this._baseInterval = baseInterval;\n\n    if (node.isNonterminal()) {\n      assert(sourceInterval === baseInterval);\n    }\n    this._childWrappers = [];\n  }\n\n  _forgetMemoizedResultFor(attributeName) {\n    // Remove the memoized attribute from the cstNode and all its children.\n    delete this._node[this._semantics.attributeKeys[attributeName]];\n    this.children.forEach(child => {\n      child._forgetMemoizedResultFor(attributeName);\n    });\n  }\n\n  // Returns the wrapper of the specified child node. Child wrappers are created lazily and\n  // cached in the parent wrapper's `_childWrappers` instance variable.\n  child(idx) {\n    if (!(0 <= idx && idx < this._node.numChildren())) {\n      // TODO: Consider throwing an exception here.\n      return undefined;\n    }\n    let childWrapper = this._childWrappers[idx];\n    if (!childWrapper) {\n      const childNode = this._node.childAt(idx);\n      const offset = this._node.childOffsets[idx];\n\n      const source = this._baseInterval.subInterval(offset, childNode.matchLength);\n      const base = childNode.isNonterminal() ? source : this._baseInterval;\n      childWrapper = this._childWrappers[idx] = this._semantics.wrap(childNode, source, base);\n    }\n    return childWrapper;\n  }\n\n  // Returns an array containing the wrappers of all of the children of the node associated\n  // with this wrapper.\n  _children() {\n    // Force the creation of all child wrappers\n    for (let idx = 0; idx < this._node.numChildren(); idx++) {\n      this.child(idx);\n    }\n    return this._childWrappers;\n  }\n\n  // Returns `true` if the CST node associated with this wrapper corresponds to an iteration\n  // expression, i.e., a Kleene-*, Kleene-+, or an optional. Returns `false` otherwise.\n  isIteration() {\n    return this._node.isIteration();\n  }\n\n  // Returns `true` if the CST node associated with this wrapper is a terminal node, `false`\n  // otherwise.\n  isTerminal() {\n    return this._node.isTerminal();\n  }\n\n  // Returns `true` if the CST node associated with this wrapper is a nonterminal node, `false`\n  // otherwise.\n  isNonterminal() {\n    return this._node.isNonterminal();\n  }\n\n  // Returns `true` if the CST node associated with this wrapper is a nonterminal node\n  // corresponding to a syntactic rule, `false` otherwise.\n  isSyntactic() {\n    return this.isNonterminal() && this._node.isSyntactic();\n  }\n\n  // Returns `true` if the CST node associated with this wrapper is a nonterminal node\n  // corresponding to a lexical rule, `false` otherwise.\n  isLexical() {\n    return this.isNonterminal() && this._node.isLexical();\n  }\n\n  // Returns `true` if the CST node associated with this wrapper is an iterator node\n  // having either one or no child (? operator), `false` otherwise.\n  // Otherwise, throws an exception.\n  isOptional() {\n    return this._node.isOptional();\n  }\n\n  // Create a new _iter wrapper in the same semantics as this wrapper.\n  iteration(optChildWrappers) {\n    const childWrappers = optChildWrappers || [];\n\n    const childNodes = childWrappers.map(c => c._node);\n    const iter = new IterationNode(childNodes, [], -1, false);\n\n    const wrapper = this._semantics.wrap(iter, null, null);\n    wrapper._childWrappers = childWrappers;\n    return wrapper;\n  }\n\n  // Returns an array containing the children of this CST node.\n  get children() {\n    return this._children();\n  }\n\n  // Returns the name of grammar rule that created this CST node.\n  get ctorName() {\n    return this._node.ctorName;\n  }\n\n  // Returns the number of children of this CST node.\n  get numChildren() {\n    return this._node.numChildren();\n  }\n\n  // Returns the contents of the input stream consumed by this CST node.\n  get sourceString() {\n    return this.source.contents;\n  }\n}\n\n// ----------------- Semantics -----------------\n\n// A Semantics is a container for a family of Operations and Attributes for a given grammar.\n// Semantics enable modularity (different clients of a grammar can create their set of operations\n// and attributes in isolation) and extensibility even when operations and attributes are mutually-\n// recursive. This constructor should not be called directly except from\n// `Semantics.createSemantics`. The normal ways to create a Semantics, given a grammar 'g', are\n// `g.createSemantics()` and `g.extendSemantics(parentSemantics)`.\nclass Semantics {\n  constructor(grammar, superSemantics) {\n    const self = this;\n    this.grammar = grammar;\n    this.checkedActionDicts = false;\n\n    // Constructor for wrapper instances, which are passed as the arguments to the semantic actions\n    // of an operation or attribute. Operations and attributes require double dispatch: the semantic\n    // action is chosen based on both the node's type and the semantics. Wrappers ensure that\n    // the `execute` method is called with the correct (most specific) semantics object as an\n    // argument.\n    this.Wrapper = class extends (superSemantics ? superSemantics.Wrapper : Wrapper) {\n      constructor(node, sourceInterval, baseInterval) {\n        super(node, sourceInterval, baseInterval);\n        self.checkActionDictsIfHaventAlready();\n        this._semantics = self;\n      }\n\n      toString() {\n        return '[semantics wrapper for ' + self.grammar.name + ']';\n      }\n    };\n\n    this.super = superSemantics;\n    if (superSemantics) {\n      if (!(grammar.equals(this.super.grammar) || grammar._inheritsFrom(this.super.grammar))) {\n        throw new Error(\n            \"Cannot extend a semantics for grammar '\" +\n            this.super.grammar.name +\n            \"' for use with grammar '\" +\n            grammar.name +\n            \"' (not a sub-grammar)\",\n        );\n      }\n      this.operations = Object.create(this.super.operations);\n      this.attributes = Object.create(this.super.attributes);\n      this.attributeKeys = Object.create(null);\n\n      // Assign unique symbols for each of the attributes inherited from the super-semantics so that\n      // they are memoized independently.\n      // eslint-disable-next-line guard-for-in\n      for (const attributeName in this.attributes) {\n        Object.defineProperty(this.attributeKeys, attributeName, {\n          value: uniqueId(attributeName),\n        });\n      }\n    } else {\n      this.operations = Object.create(null);\n      this.attributes = Object.create(null);\n      this.attributeKeys = Object.create(null);\n    }\n  }\n\n  toString() {\n    return '[semantics for ' + this.grammar.name + ']';\n  }\n\n  checkActionDictsIfHaventAlready() {\n    if (!this.checkedActionDicts) {\n      this.checkActionDicts();\n      this.checkedActionDicts = true;\n    }\n  }\n\n  // Checks that the action dictionaries for all operations and attributes in this semantics,\n  // including the ones that were inherited from the super-semantics, agree with the grammar.\n  // Throws an exception if one or more of them doesn't.\n  checkActionDicts() {\n    let name;\n    // eslint-disable-next-line guard-for-in\n    for (name in this.operations) {\n      this.operations[name].checkActionDict(this.grammar);\n    }\n    // eslint-disable-next-line guard-for-in\n    for (name in this.attributes) {\n      this.attributes[name].checkActionDict(this.grammar);\n    }\n  }\n\n  toRecipe(semanticsOnly) {\n    function hasSuperSemantics(s) {\n      return s.super !== Semantics.BuiltInSemantics._getSemantics();\n    }\n\n    let str = '(function(g) {\\n';\n    if (hasSuperSemantics(this)) {\n      str += '  var semantics = ' + this.super.toRecipe(true) + '(g';\n\n      const superSemanticsGrammar = this.super.grammar;\n      let relatedGrammar = this.grammar;\n      while (relatedGrammar !== superSemanticsGrammar) {\n        str += '.superGrammar';\n        relatedGrammar = relatedGrammar.superGrammar;\n      }\n\n      str += ');\\n';\n      str += '  return g.extendSemantics(semantics)';\n    } else {\n      str += '  return g.createSemantics()';\n    }\n    ['Operation', 'Attribute'].forEach(type => {\n      const semanticOperations = this[type.toLowerCase() + 's'];\n      Object.keys(semanticOperations).forEach(name => {\n        const {actionDict, formals, builtInDefault} = semanticOperations[name];\n\n        let signature = name;\n        if (formals.length > 0) {\n          signature += '(' + formals.join(', ') + ')';\n        }\n\n        let method;\n        if (hasSuperSemantics(this) && this.super[type.toLowerCase() + 's'][name]) {\n          method = 'extend' + type;\n        } else {\n          method = 'add' + type;\n        }\n        str += '\\n    .' + method + '(' + JSON.stringify(signature) + ', {';\n\n        const srcArray = [];\n        Object.keys(actionDict).forEach(actionName => {\n          if (actionDict[actionName] !== builtInDefault) {\n            let source = actionDict[actionName].toString().trim();\n\n            // Convert method shorthand to plain old function syntax.\n            // https://github.com/ohmjs/ohm/issues/263\n            source = source.replace(/^.*\\(/, 'function(');\n\n            srcArray.push('\\n      ' + JSON.stringify(actionName) + ': ' + source);\n          }\n        });\n        str += srcArray.join(',') + '\\n    })';\n      });\n    });\n    str += ';\\n  })';\n\n    if (!semanticsOnly) {\n      str =\n        '(function() {\\n' +\n        '  var grammar = this.fromRecipe(' +\n        this.grammar.toRecipe() +\n        ');\\n' +\n        '  var semantics = ' +\n        str +\n        '(grammar);\\n' +\n        '  return semantics;\\n' +\n        '});\\n';\n    }\n\n    return str;\n  }\n\n  addOperationOrAttribute(type, signature, actionDict) {\n    const typePlural = type + 's';\n\n    const parsedNameAndFormalArgs = parseSignature(signature, type);\n    const {name} = parsedNameAndFormalArgs;\n    const {formals} = parsedNameAndFormalArgs;\n\n    // TODO: check that there are no duplicate formal arguments\n\n    this.assertNewName(name, type);\n\n    // Create the action dictionary for this operation / attribute that contains a `_default` action\n    // which defines the default behavior of iteration, terminal, and non-terminal nodes...\n    const builtInDefault = newDefaultAction(type, name, doIt);\n    const realActionDict = {_default: builtInDefault};\n    // ... and add in the actions supplied by the programmer, which may override some or all of the\n    // default ones.\n    Object.keys(actionDict).forEach(name => {\n      realActionDict[name] = actionDict[name];\n    });\n\n    const entry =\n      type === 'operation' ?\n        new Operation(name, formals, realActionDict, builtInDefault) :\n        new Attribute(name, realActionDict, builtInDefault);\n\n    // The following check is not strictly necessary (it will happen later anyway) but it's better\n    // to catch errors early.\n    entry.checkActionDict(this.grammar);\n\n    this[typePlural][name] = entry;\n\n    function doIt(...args) {\n      // Dispatch to most specific version of this operation / attribute -- it may have been\n      // overridden by a sub-semantics.\n      const thisThing = this._semantics[typePlural][name];\n\n      // Check that the caller passed the correct number of arguments.\n      if (arguments.length !== thisThing.formals.length) {\n        throw new Error(\n            'Invalid number of arguments passed to ' +\n            name +\n            ' ' +\n            type +\n            ' (expected ' +\n            thisThing.formals.length +\n            ', got ' +\n            arguments.length +\n            ')',\n        );\n      }\n\n      // Create an \"arguments object\" from the arguments that were passed to this\n      // operation / attribute.\n      const argsObj = Object.create(null);\n      for (const [idx, val] of Object.entries(args)) {\n        const formal = thisThing.formals[idx];\n        argsObj[formal] = val;\n      }\n\n      const oldArgs = this.args;\n      this.args = argsObj;\n      const ans = thisThing.execute(this._semantics, this);\n      this.args = oldArgs;\n      return ans;\n    }\n\n    if (type === 'operation') {\n      this.Wrapper.prototype[name] = doIt;\n      this.Wrapper.prototype[name].toString = function() {\n        return '[' + name + ' operation]';\n      };\n    } else {\n      Object.defineProperty(this.Wrapper.prototype, name, {\n        get: doIt,\n        configurable: true, // So the property can be deleted.\n      });\n      Object.defineProperty(this.attributeKeys, name, {\n        value: uniqueId(name),\n      });\n    }\n  }\n\n  extendOperationOrAttribute(type, name, actionDict) {\n    const typePlural = type + 's';\n\n    // Make sure that `name` really is just a name, i.e., that it doesn't also contain formals.\n    parseSignature(name, 'attribute');\n\n    if (!(this.super && name in this.super[typePlural])) {\n      throw new Error(\n          'Cannot extend ' +\n          type +\n          \" '\" +\n          name +\n          \"': did not inherit an \" +\n          type +\n          ' with that name',\n      );\n    }\n    if (hasOwnProperty(this[typePlural], name)) {\n      throw new Error('Cannot extend ' + type + \" '\" + name + \"' again\");\n    }\n\n    // Create a new operation / attribute whose actionDict delegates to the super operation /\n    // attribute's actionDict, and which has all the keys from `inheritedActionDict`.\n    const inheritedFormals = this[typePlural][name].formals;\n    const inheritedActionDict = this[typePlural][name].actionDict;\n    const newActionDict = Object.create(inheritedActionDict);\n    Object.keys(actionDict).forEach(name => {\n      newActionDict[name] = actionDict[name];\n    });\n\n    this[typePlural][name] =\n      type === 'operation' ?\n        new Operation(name, inheritedFormals, newActionDict) :\n        new Attribute(name, newActionDict);\n\n    // The following check is not strictly necessary (it will happen later anyway) but it's better\n    // to catch errors early.\n    this[typePlural][name].checkActionDict(this.grammar);\n  }\n\n  assertNewName(name, type) {\n    if (hasOwnProperty(Wrapper.prototype, name)) {\n      throw new Error('Cannot add ' + type + \" '\" + name + \"': that's a reserved name\");\n    }\n    if (name in this.operations) {\n      throw new Error(\n          'Cannot add ' + type + \" '\" + name + \"': an operation with that name already exists\",\n      );\n    }\n    if (name in this.attributes) {\n      throw new Error(\n          'Cannot add ' + type + \" '\" + name + \"': an attribute with that name already exists\",\n      );\n    }\n  }\n\n  // Returns a wrapper for the given CST `node` in this semantics.\n  // If `node` is already a wrapper, returns `node` itself.  // TODO: why is this needed?\n  wrap(node, source, optBaseInterval) {\n    const baseInterval = optBaseInterval || source;\n    return node instanceof this.Wrapper ? node : new this.Wrapper(node, source, baseInterval);\n  }\n}\n\nfunction parseSignature(signature, type) {\n  if (!Semantics.prototypeGrammar) {\n    // The Operations and Attributes grammar won't be available while Ohm is loading,\n    // but we can get away the following simplification b/c none of the operations\n    // that are used while loading take arguments.\n    assert(signature.indexOf('(') === -1);\n    return {\n      name: signature,\n      formals: [],\n    };\n  }\n\n  const r = Semantics.prototypeGrammar.match(\n      signature,\n    type === 'operation' ? 'OperationSignature' : 'AttributeSignature',\n  );\n  if (r.failed()) {\n    throw new Error(r.message);\n  }\n\n  return Semantics.prototypeGrammarSemantics(r).parse();\n}\n\nfunction newDefaultAction(type, name, doIt) {\n  return function(...children) {\n    const thisThing = this._semantics.operations[name] || this._semantics.attributes[name];\n    const args = thisThing.formals.map(formal => this.args[formal]);\n\n    if (!this.isIteration() && children.length === 1) {\n      // This CST node corresponds to a non-terminal in the grammar (e.g., AddExpr). The fact that\n      // we got here means that this action dictionary doesn't have an action for this particular\n      // non-terminal or a generic `_nonterminal` action.\n      // As a convenience, if this node only has one child, we just return the result of applying\n      // this operation / attribute to the child node.\n      return doIt.apply(children[0], args);\n    } else {\n      // Otherwise, we throw an exception to let the programmer know that we don't know what\n      // to do with this node.\n      throw missingSemanticAction(this.ctorName, name, type, globalActionStack);\n    }\n  };\n}\n\n// Creates a new Semantics instance for `grammar`, inheriting operations and attributes from\n// `optSuperSemantics`, if it is specified. Returns a function that acts as a proxy for the new\n// Semantics instance. When that function is invoked with a CST node as an argument, it returns\n// a wrapper for that node which gives access to the operations and attributes provided by this\n// semantics.\nSemantics.createSemantics = function(grammar, optSuperSemantics) {\n  const s = new Semantics(\n      grammar,\n    optSuperSemantics !== undefined ?\n      optSuperSemantics :\n      Semantics.BuiltInSemantics._getSemantics(),\n  );\n\n  // To enable clients to invoke a semantics like a function, return a function that acts as a proxy\n  // for `s`, which is the real `Semantics` instance.\n  const proxy = function ASemantics(matchResult) {\n    if (!(matchResult instanceof MatchResult)) {\n      throw new TypeError(\n          'Semantics expected a MatchResult, but got ' +\n          unexpectedObjToString(matchResult),\n      );\n    }\n    if (matchResult.failed()) {\n      throw new TypeError('cannot apply Semantics to ' + matchResult.toString());\n    }\n\n    const cst = matchResult._cst;\n    if (cst.grammar !== grammar) {\n      throw new Error(\n          \"Cannot use a MatchResult from grammar '\" +\n          cst.grammar.name +\n          \"' with a semantics for '\" +\n          grammar.name +\n          \"'\",\n      );\n    }\n    const inputStream = new InputStream(matchResult.input);\n    return s.wrap(cst, inputStream.interval(matchResult._cstOffset, matchResult.input.length));\n  };\n\n  // Forward public methods from the proxy to the semantics instance.\n  proxy.addOperation = function(signature, actionDict) {\n    s.addOperationOrAttribute('operation', signature, actionDict);\n    return proxy;\n  };\n  proxy.extendOperation = function(name, actionDict) {\n    s.extendOperationOrAttribute('operation', name, actionDict);\n    return proxy;\n  };\n  proxy.addAttribute = function(name, actionDict) {\n    s.addOperationOrAttribute('attribute', name, actionDict);\n    return proxy;\n  };\n  proxy.extendAttribute = function(name, actionDict) {\n    s.extendOperationOrAttribute('attribute', name, actionDict);\n    return proxy;\n  };\n  proxy._getActionDict = function(operationOrAttributeName) {\n    const action =\n      s.operations[operationOrAttributeName] || s.attributes[operationOrAttributeName];\n    if (!action) {\n      throw new Error(\n          '\"' +\n          operationOrAttributeName +\n          '\" is not a valid operation or attribute ' +\n          'name in this semantics for \"' +\n          grammar.name +\n          '\"',\n      );\n    }\n    return action.actionDict;\n  };\n  proxy._remove = function(operationOrAttributeName) {\n    let semantic;\n    if (operationOrAttributeName in s.operations) {\n      semantic = s.operations[operationOrAttributeName];\n      delete s.operations[operationOrAttributeName];\n    } else if (operationOrAttributeName in s.attributes) {\n      semantic = s.attributes[operationOrAttributeName];\n      delete s.attributes[operationOrAttributeName];\n    }\n    delete s.Wrapper.prototype[operationOrAttributeName];\n    return semantic;\n  };\n  proxy.getOperationNames = function() {\n    return Object.keys(s.operations);\n  };\n  proxy.getAttributeNames = function() {\n    return Object.keys(s.attributes);\n  };\n  proxy.getGrammar = function() {\n    return s.grammar;\n  };\n  proxy.toRecipe = function(semanticsOnly) {\n    return s.toRecipe(semanticsOnly);\n  };\n\n  // Make the proxy's toString() work.\n  proxy.toString = s.toString.bind(s);\n\n  // Returns the semantics for the proxy.\n  proxy._getSemantics = function() {\n    return s;\n  };\n\n  return proxy;\n};\n\n// ----------------- Operation -----------------\n\n// An Operation represents a function to be applied to a concrete syntax tree (CST) -- it's very\n// similar to a Visitor (http://en.wikipedia.org/wiki/Visitor_pattern). An operation is executed by\n// recursively walking the CST, and at each node, invoking the matching semantic action from\n// `actionDict`. See `Operation.prototype.execute` for details of how a CST node's matching semantic\n// action is found.\nclass Operation {\n  constructor(name, formals, actionDict, builtInDefault) {\n    this.name = name;\n    this.formals = formals;\n    this.actionDict = actionDict;\n    this.builtInDefault = builtInDefault;\n  }\n\n  checkActionDict(grammar) {\n    grammar._checkTopDownActionDict(this.typeName, this.name, this.actionDict);\n  }\n\n  // Execute this operation on the CST node associated with `nodeWrapper` in the context of the\n  // given Semantics instance.\n  execute(semantics, nodeWrapper) {\n    try {\n      // Look for a semantic action whose name matches the node's constructor name, which is either\n      // the name of a rule in the grammar, or '_terminal' (for a terminal node), or '_iter' (for an\n      // iteration node).\n      const {ctorName} = nodeWrapper._node;\n      let actionFn = this.actionDict[ctorName];\n      if (actionFn) {\n        globalActionStack.push([this, ctorName]);\n        return actionFn.apply(nodeWrapper, nodeWrapper._children());\n      }\n\n      // The action dictionary does not contain a semantic action for this specific type of node.\n      // If this is a nonterminal node and the programmer has provided a `_nonterminal` semantic\n      // action, we invoke it:\n      if (nodeWrapper.isNonterminal()) {\n        actionFn = this.actionDict._nonterminal;\n        if (actionFn) {\n          globalActionStack.push([this, '_nonterminal', ctorName]);\n          return actionFn.apply(nodeWrapper, nodeWrapper._children());\n        }\n      }\n\n      // Otherwise, we invoke the '_default' semantic action.\n      globalActionStack.push([this, 'default action', ctorName]);\n      return this.actionDict._default.apply(nodeWrapper, nodeWrapper._children());\n    } finally {\n      globalActionStack.pop();\n    }\n  }\n}\n\nOperation.prototype.typeName = 'operation';\n\n// ----------------- Attribute -----------------\n\n// Attributes are Operations whose results are memoized. This means that, for any given semantics,\n// the semantic action for a CST node will be invoked no more than once.\nclass Attribute extends Operation {\n  constructor(name, actionDict, builtInDefault) {\n    super(name, [], actionDict, builtInDefault);\n  }\n\n  execute(semantics, nodeWrapper) {\n    const node = nodeWrapper._node;\n    const key = semantics.attributeKeys[this.name];\n    if (!hasOwnProperty(node, key)) {\n      // The following is a super-send -- isn't JS beautiful? :/\n      node[key] = Operation.prototype.execute.call(this, semantics, nodeWrapper);\n    }\n    return node[key];\n  }\n}\n\nAttribute.prototype.typeName = 'attribute';\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nconst SPECIAL_ACTION_NAMES = ['_iter', '_terminal', '_nonterminal', '_default'];\n\nfunction getSortedRuleValues(grammar) {\n  return Object.keys(grammar.rules)\n      .sort()\n      .map(name => grammar.rules[name]);\n}\n\n// Until ES2019, JSON was not a valid subset of JavaScript because U+2028 (line separator)\n// and U+2029 (paragraph separator) are allowed in JSON string literals, but not in JS.\n// This function properly encodes those two characters so that the resulting string is\n// represents both valid JSON, and valid JavaScript (for ES2018 and below).\n// See https://v8.dev/features/subsume-json for more details.\nconst jsonToJS = str => str.replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029');\n\nlet ohmGrammar$1;\nlet buildGrammar$1;\n\nclass Grammar {\n  constructor(name, superGrammar, rules, optDefaultStartRule) {\n    this.name = name;\n    this.superGrammar = superGrammar;\n    this.rules = rules;\n    if (optDefaultStartRule) {\n      if (!(optDefaultStartRule in rules)) {\n        throw new Error(\n            \"Invalid start rule: '\" +\n            optDefaultStartRule +\n            \"' is not a rule in grammar '\" +\n            name +\n            \"'\",\n        );\n      }\n      this.defaultStartRule = optDefaultStartRule;\n    }\n    this._matchStateInitializer = undefined;\n    this.supportsIncrementalParsing = true;\n  }\n\n  matcher() {\n    return new Matcher(this);\n  }\n\n  // Return true if the grammar is a built-in grammar, otherwise false.\n  // NOTE: This might give an unexpected result if called before BuiltInRules is defined!\n  isBuiltIn() {\n    return this === Grammar.ProtoBuiltInRules || this === Grammar.BuiltInRules;\n  }\n\n  equals(g) {\n    if (this === g) {\n      return true;\n    }\n    // Do the cheapest comparisons first.\n    if (\n      g == null ||\n      this.name !== g.name ||\n      this.defaultStartRule !== g.defaultStartRule ||\n      !(this.superGrammar === g.superGrammar || this.superGrammar.equals(g.superGrammar))\n    ) {\n      return false;\n    }\n    const myRules = getSortedRuleValues(this);\n    const otherRules = getSortedRuleValues(g);\n    return (\n      myRules.length === otherRules.length &&\n      myRules.every((rule, i) => {\n        return (\n          rule.description === otherRules[i].description &&\n          rule.formals.join(',') === otherRules[i].formals.join(',') &&\n          rule.body.toString() === otherRules[i].body.toString()\n        );\n      })\n    );\n  }\n\n  match(input, optStartApplication) {\n    const m = this.matcher();\n    m.replaceInputRange(0, 0, input);\n    return m.match(optStartApplication);\n  }\n\n  trace(input, optStartApplication) {\n    const m = this.matcher();\n    m.replaceInputRange(0, 0, input);\n    return m.trace(optStartApplication);\n  }\n\n  createSemantics() {\n    return Semantics.createSemantics(this);\n  }\n\n  extendSemantics(superSemantics) {\n    return Semantics.createSemantics(this, superSemantics._getSemantics());\n  }\n\n  // Check that every key in `actionDict` corresponds to a semantic action, and that it maps to\n  // a function of the correct arity. If not, throw an exception.\n  _checkTopDownActionDict(what, name, actionDict) {\n    const problems = [];\n\n    // eslint-disable-next-line guard-for-in\n    for (const k in actionDict) {\n      const v = actionDict[k];\n      const isSpecialAction = SPECIAL_ACTION_NAMES.includes(k);\n\n      if (!isSpecialAction && !(k in this.rules)) {\n        problems.push(`'${k}' is not a valid semantic action for '${this.name}'`);\n        continue;\n      }\n      if (typeof v !== 'function') {\n        problems.push(`'${k}' must be a function in an action dictionary for '${this.name}'`);\n        continue;\n      }\n      const actual = v.length;\n      const expected = this._topDownActionArity(k);\n      if (actual !== expected) {\n        let details;\n        if (k === '_iter' || k === '_nonterminal') {\n          details =\n            `it should use a rest parameter, e.g. \\`${k}(...children) {}\\`. ` +\n            'NOTE: this is new in Ohm v16 — see https://ohmjs.org/d/ati for details.';\n        } else {\n          details = `expected ${expected}, got ${actual}`;\n        }\n        problems.push(`Semantic action '${k}' has the wrong arity: ${details}`);\n      }\n    }\n    if (problems.length > 0) {\n      const prettyProblems = problems.map(problem => '- ' + problem);\n      const error = new Error(\n          [\n            `Found errors in the action dictionary of the '${name}' ${what}:`,\n            ...prettyProblems,\n          ].join('\\n'),\n      );\n      error.problems = problems;\n      throw error;\n    }\n  }\n\n  // Return the expected arity for a semantic action named `actionName`, which\n  // is either a rule name or a special action name like '_nonterminal'.\n  _topDownActionArity(actionName) {\n    // All special actions have an expected arity of 0, though all but _terminal\n    // are expected to use the rest parameter syntax (e.g. `_iter(...children)`).\n    // This is considered to have arity 0, i.e. `((...args) => {}).length` is 0.\n    return SPECIAL_ACTION_NAMES.includes(actionName) ?\n      0 :\n      this.rules[actionName].body.getArity();\n  }\n\n  _inheritsFrom(grammar) {\n    let g = this.superGrammar;\n    while (g) {\n      if (g.equals(grammar, true)) {\n        return true;\n      }\n      g = g.superGrammar;\n    }\n    return false;\n  }\n\n  toRecipe(superGrammarExpr = undefined) {\n    const metaInfo = {};\n    // Include the grammar source if it is available.\n    if (this.source) {\n      metaInfo.source = this.source.contents;\n    }\n\n    let startRule = null;\n    if (this.defaultStartRule) {\n      startRule = this.defaultStartRule;\n    }\n\n    const rules = {};\n    Object.keys(this.rules).forEach(ruleName => {\n      const ruleInfo = this.rules[ruleName];\n      const {body} = ruleInfo;\n      const isDefinition = !this.superGrammar || !this.superGrammar.rules[ruleName];\n\n      let operation;\n      if (isDefinition) {\n        operation = 'define';\n      } else {\n        operation = body instanceof Extend ? 'extend' : 'override';\n      }\n\n      const metaInfo = {};\n      if (ruleInfo.source && this.source) {\n        const adjusted = ruleInfo.source.relativeTo(this.source);\n        metaInfo.sourceInterval = [adjusted.startIdx, adjusted.endIdx];\n      }\n\n      const description = isDefinition ? ruleInfo.description : null;\n      const bodyRecipe = body.outputRecipe(ruleInfo.formals, this.source);\n\n      rules[ruleName] = [\n        operation, // \"define\"/\"extend\"/\"override\"\n        metaInfo,\n        description,\n        ruleInfo.formals,\n        bodyRecipe,\n      ];\n    });\n\n    // If the caller provided an expression to use for the supergrammar, use that.\n    // Otherwise, if the supergrammar is a user grammar, use its recipe inline.\n    let superGrammarOutput = 'null';\n    if (superGrammarExpr) {\n      superGrammarOutput = superGrammarExpr;\n    } else if (this.superGrammar && !this.superGrammar.isBuiltIn()) {\n      superGrammarOutput = this.superGrammar.toRecipe();\n    }\n\n    const recipeElements = [\n      ...['grammar', metaInfo, this.name].map(JSON.stringify),\n      superGrammarOutput,\n      ...[startRule, rules].map(JSON.stringify),\n    ];\n    return jsonToJS(`[${recipeElements.join(',')}]`);\n  }\n\n  // TODO: Come up with better names for these methods.\n  // TODO: Write the analog of these methods for inherited attributes.\n  toOperationActionDictionaryTemplate() {\n    return this._toOperationOrAttributeActionDictionaryTemplate();\n  }\n  toAttributeActionDictionaryTemplate() {\n    return this._toOperationOrAttributeActionDictionaryTemplate();\n  }\n\n  _toOperationOrAttributeActionDictionaryTemplate() {\n    // TODO: add the super-grammar's templates at the right place, e.g., a case for AddExpr_plus\n    // should appear next to other cases of AddExpr.\n\n    const sb = new StringBuffer();\n    sb.append('{');\n\n    let first = true;\n    // eslint-disable-next-line guard-for-in\n    for (const ruleName in this.rules) {\n      const {body} = this.rules[ruleName];\n      if (first) {\n        first = false;\n      } else {\n        sb.append(',');\n      }\n      sb.append('\\n');\n      sb.append('  ');\n      this.addSemanticActionTemplate(ruleName, body, sb);\n    }\n\n    sb.append('\\n}');\n    return sb.contents();\n  }\n\n  addSemanticActionTemplate(ruleName, body, sb) {\n    sb.append(ruleName);\n    sb.append(': function(');\n    const arity = this._topDownActionArity(ruleName);\n    sb.append(repeat('_', arity).join(', '));\n    sb.append(') {\\n');\n    sb.append('  }');\n  }\n\n  // Parse a string which expresses a rule application in this grammar, and return the\n  // resulting Apply node.\n  parseApplication(str) {\n    let app;\n    if (str.indexOf('<') === -1) {\n      // simple application\n      app = new Apply(str);\n    } else {\n      // parameterized application\n      const cst = ohmGrammar$1.match(str, 'Base_application');\n      app = buildGrammar$1(cst, {});\n    }\n\n    // Ensure that the application is valid.\n    if (!(app.ruleName in this.rules)) {\n      throw undeclaredRule(app.ruleName, this.name);\n    }\n    const {formals} = this.rules[app.ruleName];\n    if (formals.length !== app.args.length) {\n      const {source} = this.rules[app.ruleName];\n      throw wrongNumberOfParameters(\n          app.ruleName,\n          formals.length,\n          app.args.length,\n          source,\n      );\n    }\n    return app;\n  }\n\n  _setUpMatchState(state) {\n    if (this._matchStateInitializer) {\n      this._matchStateInitializer(state);\n    }\n  }\n}\n\n// The following grammar contains a few rules that couldn't be written  in \"userland\".\n// At the bottom of src/main.js, we create a sub-grammar of this grammar that's called\n// `BuiltInRules`. That grammar contains several convenience rules, e.g., `letter` and\n// `digit`, and is implicitly the super-grammar of any grammar whose super-grammar\n// isn't specified.\nGrammar.ProtoBuiltInRules = new Grammar(\n    'ProtoBuiltInRules', // name\n    undefined, // supergrammar\n    {\n      any: {\n        body: any,\n        formals: [],\n        description: 'any character',\n        primitive: true,\n      },\n      end: {\n        body: end,\n        formals: [],\n        description: 'end of input',\n        primitive: true,\n      },\n\n      caseInsensitive: {\n        body: new CaseInsensitiveTerminal(new Param(0)),\n        formals: ['str'],\n        primitive: true,\n      },\n      lower: {\n        body: new UnicodeChar('Ll'),\n        formals: [],\n        description: 'a lowercase letter',\n        primitive: true,\n      },\n      upper: {\n        body: new UnicodeChar('Lu'),\n        formals: [],\n        description: 'an uppercase letter',\n        primitive: true,\n      },\n      // Union of Lt (titlecase), Lm (modifier), and Lo (other), i.e. any letter not in Ll or Lu.\n      unicodeLtmo: {\n        body: new UnicodeChar('Ltmo'),\n        formals: [],\n        description: 'a Unicode character in Lt, Lm, or Lo',\n        primitive: true,\n      },\n\n      // These rules are not truly primitive (they could be written in userland) but are defined\n      // here for bootstrapping purposes.\n      spaces: {\n        body: new Star(new Apply('space')),\n        formals: [],\n      },\n      space: {\n        body: new Range('\\x00', ' '),\n        formals: [],\n        description: 'a space',\n      },\n    },\n);\n\n// This method is called from main.js once Ohm has loaded.\nGrammar.initApplicationParser = function(grammar, builderFn) {\n  ohmGrammar$1 = grammar;\n  buildGrammar$1 = builderFn;\n};\n\n// --------------------------------------------------------------------\n// Private Stuff\n// --------------------------------------------------------------------\n\n// Constructors\n\nclass GrammarDecl {\n  constructor(name) {\n    this.name = name;\n  }\n\n  // Helpers\n\n  sourceInterval(startIdx, endIdx) {\n    return this.source.subInterval(startIdx, endIdx - startIdx);\n  }\n\n  ensureSuperGrammar() {\n    if (!this.superGrammar) {\n      this.withSuperGrammar(\n        // TODO: The conditional expression below is an ugly hack. It's kind of ok because\n        // I doubt anyone will ever try to declare a grammar called `BuiltInRules`. Still,\n        // we should try to find a better way to do this.\n        this.name === 'BuiltInRules' ? Grammar.ProtoBuiltInRules : Grammar.BuiltInRules,\n      );\n    }\n    return this.superGrammar;\n  }\n\n  ensureSuperGrammarRuleForOverriding(name, source) {\n    const ruleInfo = this.ensureSuperGrammar().rules[name];\n    if (!ruleInfo) {\n      throw cannotOverrideUndeclaredRule(name, this.superGrammar.name, source);\n    }\n    return ruleInfo;\n  }\n\n  installOverriddenOrExtendedRule(name, formals, body, source) {\n    const duplicateParameterNames$1 = getDuplicates(formals);\n    if (duplicateParameterNames$1.length > 0) {\n      throw duplicateParameterNames(name, duplicateParameterNames$1, source);\n    }\n    const ruleInfo = this.ensureSuperGrammar().rules[name];\n    const expectedFormals = ruleInfo.formals;\n    const expectedNumFormals = expectedFormals ? expectedFormals.length : 0;\n    if (formals.length !== expectedNumFormals) {\n      throw wrongNumberOfParameters(name, expectedNumFormals, formals.length, source);\n    }\n    return this.install(name, formals, body, ruleInfo.description, source);\n  }\n\n  install(name, formals, body, description, source, primitive = false) {\n    this.rules[name] = {\n      body: body.introduceParams(formals),\n      formals,\n      description,\n      source,\n      primitive,\n    };\n    return this;\n  }\n\n  // Stuff that you should only do once\n\n  withSuperGrammar(superGrammar) {\n    if (this.superGrammar) {\n      throw new Error('the super grammar of a GrammarDecl cannot be set more than once');\n    }\n    this.superGrammar = superGrammar;\n    this.rules = Object.create(superGrammar.rules);\n\n    // Grammars with an explicit supergrammar inherit a default start rule.\n    if (!superGrammar.isBuiltIn()) {\n      this.defaultStartRule = superGrammar.defaultStartRule;\n    }\n    return this;\n  }\n\n  withDefaultStartRule(ruleName) {\n    this.defaultStartRule = ruleName;\n    return this;\n  }\n\n  withSource(source) {\n    this.source = new InputStream(source).interval(0, source.length);\n    return this;\n  }\n\n  // Creates a Grammar instance, and if it passes the sanity checks, returns it.\n  build() {\n    const grammar = new Grammar(\n        this.name,\n        this.ensureSuperGrammar(),\n        this.rules,\n        this.defaultStartRule,\n    );\n    // Initialize internal props that are inherited from the super grammar.\n    grammar._matchStateInitializer = grammar.superGrammar._matchStateInitializer;\n    grammar.supportsIncrementalParsing = grammar.superGrammar.supportsIncrementalParsing;\n\n    // TODO: change the pexpr.prototype.assert... methods to make them add\n    // exceptions to an array that's provided as an arg. Then we'll be able to\n    // show more than one error of the same type at a time.\n    // TODO: include the offending pexpr in the errors, that way we can show\n    // the part of the source that caused it.\n    const grammarErrors = [];\n    let grammarHasInvalidApplications = false;\n    Object.keys(grammar.rules).forEach(ruleName => {\n      const {body} = grammar.rules[ruleName];\n      try {\n        body.assertChoicesHaveUniformArity(ruleName);\n      } catch (e) {\n        grammarErrors.push(e);\n      }\n      try {\n        body.assertAllApplicationsAreValid(ruleName, grammar);\n      } catch (e) {\n        grammarErrors.push(e);\n        grammarHasInvalidApplications = true;\n      }\n    });\n    if (!grammarHasInvalidApplications) {\n      // The following check can only be done if the grammar has no invalid applications.\n      Object.keys(grammar.rules).forEach(ruleName => {\n        const {body} = grammar.rules[ruleName];\n        try {\n          body.assertIteratedExprsAreNotNullable(grammar, []);\n        } catch (e) {\n          grammarErrors.push(e);\n        }\n      });\n    }\n    if (grammarErrors.length > 0) {\n      throwErrors(grammarErrors);\n    }\n    if (this.source) {\n      grammar.source = this.source;\n    }\n\n    return grammar;\n  }\n\n  // Rule declarations\n\n  define(name, formals, body, description, source, primitive) {\n    this.ensureSuperGrammar();\n    if (this.superGrammar.rules[name]) {\n      throw duplicateRuleDeclaration(name, this.name, this.superGrammar.name, source);\n    } else if (this.rules[name]) {\n      throw duplicateRuleDeclaration(name, this.name, this.name, source);\n    }\n    const duplicateParameterNames$1 = getDuplicates(formals);\n    if (duplicateParameterNames$1.length > 0) {\n      throw duplicateParameterNames(name, duplicateParameterNames$1, source);\n    }\n    return this.install(name, formals, body, description, source, primitive);\n  }\n\n  override(name, formals, body, descIgnored, source) {\n    this.ensureSuperGrammarRuleForOverriding(name, source);\n    this.installOverriddenOrExtendedRule(name, formals, body, source);\n    return this;\n  }\n\n  extend(name, formals, fragment, descIgnored, source) {\n    const ruleInfo = this.ensureSuperGrammar().rules[name];\n    if (!ruleInfo) {\n      throw cannotExtendUndeclaredRule(name, this.superGrammar.name, source);\n    }\n    const body = new Extend(this.superGrammar, name, fragment);\n    body.source = fragment.source;\n    this.installOverriddenOrExtendedRule(name, formals, body, source);\n    return this;\n  }\n}\n\n// --------------------------------------------------------------------\n// Private stuff\n// --------------------------------------------------------------------\n\nclass Builder {\n  constructor() {\n    this.currentDecl = null;\n    this.currentRuleName = null;\n  }\n\n  newGrammar(name) {\n    return new GrammarDecl(name);\n  }\n\n  grammar(metaInfo, name, superGrammar, defaultStartRule, rules) {\n    const gDecl = new GrammarDecl(name);\n    if (superGrammar) {\n      // `superGrammar` may be a recipe (i.e. an Array), or an actual grammar instance.\n      gDecl.withSuperGrammar(\n        superGrammar instanceof Grammar ? superGrammar : this.fromRecipe(superGrammar),\n      );\n    }\n    if (defaultStartRule) {\n      gDecl.withDefaultStartRule(defaultStartRule);\n    }\n    if (metaInfo && metaInfo.source) {\n      gDecl.withSource(metaInfo.source);\n    }\n\n    this.currentDecl = gDecl;\n    Object.keys(rules).forEach(ruleName => {\n      this.currentRuleName = ruleName;\n      const ruleRecipe = rules[ruleName];\n\n      const action = ruleRecipe[0]; // define/extend/override\n      const metaInfo = ruleRecipe[1];\n      const description = ruleRecipe[2];\n      const formals = ruleRecipe[3];\n      const body = this.fromRecipe(ruleRecipe[4]);\n\n      let source;\n      if (gDecl.source && metaInfo && metaInfo.sourceInterval) {\n        source = gDecl.source.subInterval(\n            metaInfo.sourceInterval[0],\n            metaInfo.sourceInterval[1] - metaInfo.sourceInterval[0],\n        );\n      }\n      gDecl[action](ruleName, formals, body, description, source);\n    });\n    this.currentRuleName = this.currentDecl = null;\n    return gDecl.build();\n  }\n\n  terminal(x) {\n    return new Terminal(x);\n  }\n\n  range(from, to) {\n    return new Range(from, to);\n  }\n\n  param(index) {\n    return new Param(index);\n  }\n\n  alt(...termArgs) {\n    let terms = [];\n    for (let arg of termArgs) {\n      if (!(arg instanceof PExpr)) {\n        arg = this.fromRecipe(arg);\n      }\n      if (arg instanceof Alt) {\n        terms = terms.concat(arg.terms);\n      } else {\n        terms.push(arg);\n      }\n    }\n    return terms.length === 1 ? terms[0] : new Alt(terms);\n  }\n\n  seq(...factorArgs) {\n    let factors = [];\n    for (let arg of factorArgs) {\n      if (!(arg instanceof PExpr)) {\n        arg = this.fromRecipe(arg);\n      }\n      if (arg instanceof Seq) {\n        factors = factors.concat(arg.factors);\n      } else {\n        factors.push(arg);\n      }\n    }\n    return factors.length === 1 ? factors[0] : new Seq(factors);\n  }\n\n  star(expr) {\n    if (!(expr instanceof PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new Star(expr);\n  }\n\n  plus(expr) {\n    if (!(expr instanceof PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new Plus(expr);\n  }\n\n  opt(expr) {\n    if (!(expr instanceof PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new Opt(expr);\n  }\n\n  not(expr) {\n    if (!(expr instanceof PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new Not(expr);\n  }\n\n  lookahead(expr) {\n    if (!(expr instanceof PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new Lookahead(expr);\n  }\n\n  lex(expr) {\n    if (!(expr instanceof PExpr)) {\n      expr = this.fromRecipe(expr);\n    }\n    return new Lex(expr);\n  }\n\n  app(ruleName, optParams) {\n    if (optParams && optParams.length > 0) {\n      optParams = optParams.map(function(param) {\n        return param instanceof PExpr ? param : this.fromRecipe(param);\n      }, this);\n    }\n    return new Apply(ruleName, optParams);\n  }\n\n  // Note that unlike other methods in this class, this method cannot be used as a\n  // convenience constructor. It only works with recipes, because it relies on\n  // `this.currentDecl` and `this.currentRuleName` being set.\n  splice(beforeTerms, afterTerms) {\n    return new Splice(\n        this.currentDecl.superGrammar,\n        this.currentRuleName,\n        beforeTerms.map(term => this.fromRecipe(term)),\n        afterTerms.map(term => this.fromRecipe(term)),\n    );\n  }\n\n  fromRecipe(recipe) {\n    // the meta-info of 'grammar' is processed in Builder.grammar\n    const args = recipe[0] === 'grammar' ? recipe.slice(1) : recipe.slice(2);\n    const result = this[recipe[0]](...args);\n\n    const metaInfo = recipe[1];\n    if (metaInfo) {\n      if (metaInfo.sourceInterval && this.currentDecl) {\n        result.withSource(this.currentDecl.sourceInterval(...metaInfo.sourceInterval));\n      }\n    }\n    return result;\n  }\n}\n\nfunction makeRecipe(recipe) {\n  if (typeof recipe === 'function') {\n    return recipe.call(new Builder());\n  } else {\n    if (typeof recipe === 'string') {\n      // stringified JSON recipe\n      recipe = JSON.parse(recipe);\n    }\n    return new Builder().fromRecipe(recipe);\n  }\n}\n\nvar BuiltInRules = makeRecipe([\"grammar\",{\"source\":\"BuiltInRules {\\n\\n  alnum  (an alpha-numeric character)\\n    = letter\\n    | digit\\n\\n  letter  (a letter)\\n    = lower\\n    | upper\\n    | unicodeLtmo\\n\\n  digit  (a digit)\\n    = \\\"0\\\"..\\\"9\\\"\\n\\n  hexDigit  (a hexadecimal digit)\\n    = digit\\n    | \\\"a\\\"..\\\"f\\\"\\n    | \\\"A\\\"..\\\"F\\\"\\n\\n  ListOf<elem, sep>\\n    = NonemptyListOf<elem, sep>\\n    | EmptyListOf<elem, sep>\\n\\n  NonemptyListOf<elem, sep>\\n    = elem (sep elem)*\\n\\n  EmptyListOf<elem, sep>\\n    = /* nothing */\\n\\n  listOf<elem, sep>\\n    = nonemptyListOf<elem, sep>\\n    | emptyListOf<elem, sep>\\n\\n  nonemptyListOf<elem, sep>\\n    = elem (sep elem)*\\n\\n  emptyListOf<elem, sep>\\n    = /* nothing */\\n\\n  // Allows a syntactic rule application within a lexical context.\\n  applySyntactic<app> = app\\n}\"},\"BuiltInRules\",null,null,{\"alnum\":[\"define\",{\"sourceInterval\":[18,78]},\"an alpha-numeric character\",[],[\"alt\",{\"sourceInterval\":[60,78]},[\"app\",{\"sourceInterval\":[60,66]},\"letter\",[]],[\"app\",{\"sourceInterval\":[73,78]},\"digit\",[]]]],\"letter\":[\"define\",{\"sourceInterval\":[82,142]},\"a letter\",[],[\"alt\",{\"sourceInterval\":[107,142]},[\"app\",{\"sourceInterval\":[107,112]},\"lower\",[]],[\"app\",{\"sourceInterval\":[119,124]},\"upper\",[]],[\"app\",{\"sourceInterval\":[131,142]},\"unicodeLtmo\",[]]]],\"digit\":[\"define\",{\"sourceInterval\":[146,177]},\"a digit\",[],[\"range\",{\"sourceInterval\":[169,177]},\"0\",\"9\"]],\"hexDigit\":[\"define\",{\"sourceInterval\":[181,254]},\"a hexadecimal digit\",[],[\"alt\",{\"sourceInterval\":[219,254]},[\"app\",{\"sourceInterval\":[219,224]},\"digit\",[]],[\"range\",{\"sourceInterval\":[231,239]},\"a\",\"f\"],[\"range\",{\"sourceInterval\":[246,254]},\"A\",\"F\"]]],\"ListOf\":[\"define\",{\"sourceInterval\":[258,336]},null,[\"elem\",\"sep\"],[\"alt\",{\"sourceInterval\":[282,336]},[\"app\",{\"sourceInterval\":[282,307]},\"NonemptyListOf\",[[\"param\",{\"sourceInterval\":[297,301]},0],[\"param\",{\"sourceInterval\":[303,306]},1]]],[\"app\",{\"sourceInterval\":[314,336]},\"EmptyListOf\",[[\"param\",{\"sourceInterval\":[326,330]},0],[\"param\",{\"sourceInterval\":[332,335]},1]]]]],\"NonemptyListOf\":[\"define\",{\"sourceInterval\":[340,388]},null,[\"elem\",\"sep\"],[\"seq\",{\"sourceInterval\":[372,388]},[\"param\",{\"sourceInterval\":[372,376]},0],[\"star\",{\"sourceInterval\":[377,388]},[\"seq\",{\"sourceInterval\":[378,386]},[\"param\",{\"sourceInterval\":[378,381]},1],[\"param\",{\"sourceInterval\":[382,386]},0]]]]],\"EmptyListOf\":[\"define\",{\"sourceInterval\":[392,434]},null,[\"elem\",\"sep\"],[\"seq\",{\"sourceInterval\":[438,438]}]],\"listOf\":[\"define\",{\"sourceInterval\":[438,516]},null,[\"elem\",\"sep\"],[\"alt\",{\"sourceInterval\":[462,516]},[\"app\",{\"sourceInterval\":[462,487]},\"nonemptyListOf\",[[\"param\",{\"sourceInterval\":[477,481]},0],[\"param\",{\"sourceInterval\":[483,486]},1]]],[\"app\",{\"sourceInterval\":[494,516]},\"emptyListOf\",[[\"param\",{\"sourceInterval\":[506,510]},0],[\"param\",{\"sourceInterval\":[512,515]},1]]]]],\"nonemptyListOf\":[\"define\",{\"sourceInterval\":[520,568]},null,[\"elem\",\"sep\"],[\"seq\",{\"sourceInterval\":[552,568]},[\"param\",{\"sourceInterval\":[552,556]},0],[\"star\",{\"sourceInterval\":[557,568]},[\"seq\",{\"sourceInterval\":[558,566]},[\"param\",{\"sourceInterval\":[558,561]},1],[\"param\",{\"sourceInterval\":[562,566]},0]]]]],\"emptyListOf\":[\"define\",{\"sourceInterval\":[572,682]},null,[\"elem\",\"sep\"],[\"seq\",{\"sourceInterval\":[685,685]}]],\"applySyntactic\":[\"define\",{\"sourceInterval\":[685,710]},null,[\"app\"],[\"param\",{\"sourceInterval\":[707,710]},0]]}]);\n\nGrammar.BuiltInRules = BuiltInRules;\nannounceBuiltInRules(Grammar.BuiltInRules);\n\nvar ohmGrammar = makeRecipe([\"grammar\",{\"source\":\"Ohm {\\n\\n  Grammars\\n    = Grammar*\\n\\n  Grammar\\n    = ident SuperGrammar? \\\"{\\\" Rule* \\\"}\\\"\\n\\n  SuperGrammar\\n    = \\\"<:\\\" ident\\n\\n  Rule\\n    = ident Formals? ruleDescr? \\\"=\\\"  RuleBody  -- define\\n    | ident Formals?            \\\":=\\\" OverrideRuleBody  -- override\\n    | ident Formals?            \\\"+=\\\" RuleBody  -- extend\\n\\n  RuleBody\\n    = \\\"|\\\"? NonemptyListOf<TopLevelTerm, \\\"|\\\">\\n\\n  TopLevelTerm\\n    = Seq caseName  -- inline\\n    | Seq\\n\\n  OverrideRuleBody\\n    = \\\"|\\\"? NonemptyListOf<OverrideTopLevelTerm, \\\"|\\\">\\n\\n  OverrideTopLevelTerm\\n    = \\\"...\\\"  -- superSplice\\n    | TopLevelTerm\\n\\n  Formals\\n    = \\\"<\\\" ListOf<ident, \\\",\\\"> \\\">\\\"\\n\\n  Params\\n    = \\\"<\\\" ListOf<Seq, \\\",\\\"> \\\">\\\"\\n\\n  Alt\\n    = NonemptyListOf<Seq, \\\"|\\\">\\n\\n  Seq\\n    = Iter*\\n\\n  Iter\\n    = Pred \\\"*\\\"  -- star\\n    | Pred \\\"+\\\"  -- plus\\n    | Pred \\\"?\\\"  -- opt\\n    | Pred\\n\\n  Pred\\n    = \\\"~\\\" Lex  -- not\\n    | \\\"&\\\" Lex  -- lookahead\\n    | Lex\\n\\n  Lex\\n    = \\\"#\\\" Base  -- lex\\n    | Base\\n\\n  Base\\n    = ident Params? ~(ruleDescr? \\\"=\\\" | \\\":=\\\" | \\\"+=\\\")  -- application\\n    | oneCharTerminal \\\"..\\\" oneCharTerminal           -- range\\n    | terminal                                       -- terminal\\n    | \\\"(\\\" Alt \\\")\\\"                                    -- paren\\n\\n  ruleDescr  (a rule description)\\n    = \\\"(\\\" ruleDescrText \\\")\\\"\\n\\n  ruleDescrText\\n    = (~\\\")\\\" any)*\\n\\n  caseName\\n    = \\\"--\\\" (~\\\"\\\\n\\\" space)* name (~\\\"\\\\n\\\" space)* (\\\"\\\\n\\\" | &\\\"}\\\")\\n\\n  name  (a name)\\n    = nameFirst nameRest*\\n\\n  nameFirst\\n    = \\\"_\\\"\\n    | letter\\n\\n  nameRest\\n    = \\\"_\\\"\\n    | alnum\\n\\n  ident  (an identifier)\\n    = name\\n\\n  terminal\\n    = \\\"\\\\\\\"\\\" terminalChar* \\\"\\\\\\\"\\\"\\n\\n  oneCharTerminal\\n    = \\\"\\\\\\\"\\\" terminalChar \\\"\\\\\\\"\\\"\\n\\n  terminalChar\\n    = escapeChar\\n      | ~\\\"\\\\\\\\\\\" ~\\\"\\\\\\\"\\\" ~\\\"\\\\n\\\" \\\"\\\\u{0}\\\"..\\\"\\\\u{10FFFF}\\\"\\n\\n  escapeChar  (an escape sequence)\\n    = \\\"\\\\\\\\\\\\\\\\\\\"                                     -- backslash\\n    | \\\"\\\\\\\\\\\\\\\"\\\"                                     -- doubleQuote\\n    | \\\"\\\\\\\\\\\\'\\\"                                     -- singleQuote\\n    | \\\"\\\\\\\\b\\\"                                      -- backspace\\n    | \\\"\\\\\\\\n\\\"                                      -- lineFeed\\n    | \\\"\\\\\\\\r\\\"                                      -- carriageReturn\\n    | \\\"\\\\\\\\t\\\"                                      -- tab\\n    | \\\"\\\\\\\\u{\\\" hexDigit hexDigit? hexDigit?\\n             hexDigit? hexDigit? hexDigit? \\\"}\\\"   -- unicodeCodePoint\\n    | \\\"\\\\\\\\u\\\" hexDigit hexDigit hexDigit hexDigit  -- unicodeEscape\\n    | \\\"\\\\\\\\x\\\" hexDigit hexDigit                    -- hexEscape\\n\\n  space\\n   += comment\\n\\n  comment\\n    = \\\"//\\\" (~\\\"\\\\n\\\" any)* &(\\\"\\\\n\\\" | end)  -- singleLine\\n    | \\\"/*\\\" (~\\\"*/\\\" any)* \\\"*/\\\"  -- multiLine\\n\\n  tokens = token*\\n\\n  token = caseName | comment | ident | operator | punctuation | terminal | any\\n\\n  operator = \\\"<:\\\" | \\\"=\\\" | \\\":=\\\" | \\\"+=\\\" | \\\"*\\\" | \\\"+\\\" | \\\"?\\\" | \\\"~\\\" | \\\"&\\\"\\n\\n  punctuation = \\\"<\\\" | \\\">\\\" | \\\",\\\" | \\\"--\\\"\\n}\"},\"Ohm\",null,\"Grammars\",{\"Grammars\":[\"define\",{\"sourceInterval\":[9,32]},null,[],[\"star\",{\"sourceInterval\":[24,32]},[\"app\",{\"sourceInterval\":[24,31]},\"Grammar\",[]]]],\"Grammar\":[\"define\",{\"sourceInterval\":[36,83]},null,[],[\"seq\",{\"sourceInterval\":[50,83]},[\"app\",{\"sourceInterval\":[50,55]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[56,69]},[\"app\",{\"sourceInterval\":[56,68]},\"SuperGrammar\",[]]],[\"terminal\",{\"sourceInterval\":[70,73]},\"{\"],[\"star\",{\"sourceInterval\":[74,79]},[\"app\",{\"sourceInterval\":[74,78]},\"Rule\",[]]],[\"terminal\",{\"sourceInterval\":[80,83]},\"}\"]]],\"SuperGrammar\":[\"define\",{\"sourceInterval\":[87,116]},null,[],[\"seq\",{\"sourceInterval\":[106,116]},[\"terminal\",{\"sourceInterval\":[106,110]},\"<:\"],[\"app\",{\"sourceInterval\":[111,116]},\"ident\",[]]]],\"Rule_define\":[\"define\",{\"sourceInterval\":[131,181]},null,[],[\"seq\",{\"sourceInterval\":[131,170]},[\"app\",{\"sourceInterval\":[131,136]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[137,145]},[\"app\",{\"sourceInterval\":[137,144]},\"Formals\",[]]],[\"opt\",{\"sourceInterval\":[146,156]},[\"app\",{\"sourceInterval\":[146,155]},\"ruleDescr\",[]]],[\"terminal\",{\"sourceInterval\":[157,160]},\"=\"],[\"app\",{\"sourceInterval\":[162,170]},\"RuleBody\",[]]]],\"Rule_override\":[\"define\",{\"sourceInterval\":[188,248]},null,[],[\"seq\",{\"sourceInterval\":[188,235]},[\"app\",{\"sourceInterval\":[188,193]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[194,202]},[\"app\",{\"sourceInterval\":[194,201]},\"Formals\",[]]],[\"terminal\",{\"sourceInterval\":[214,218]},\":=\"],[\"app\",{\"sourceInterval\":[219,235]},\"OverrideRuleBody\",[]]]],\"Rule_extend\":[\"define\",{\"sourceInterval\":[255,305]},null,[],[\"seq\",{\"sourceInterval\":[255,294]},[\"app\",{\"sourceInterval\":[255,260]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[261,269]},[\"app\",{\"sourceInterval\":[261,268]},\"Formals\",[]]],[\"terminal\",{\"sourceInterval\":[281,285]},\"+=\"],[\"app\",{\"sourceInterval\":[286,294]},\"RuleBody\",[]]]],\"Rule\":[\"define\",{\"sourceInterval\":[120,305]},null,[],[\"alt\",{\"sourceInterval\":[131,305]},[\"app\",{\"sourceInterval\":[131,170]},\"Rule_define\",[]],[\"app\",{\"sourceInterval\":[188,235]},\"Rule_override\",[]],[\"app\",{\"sourceInterval\":[255,294]},\"Rule_extend\",[]]]],\"RuleBody\":[\"define\",{\"sourceInterval\":[309,362]},null,[],[\"seq\",{\"sourceInterval\":[324,362]},[\"opt\",{\"sourceInterval\":[324,328]},[\"terminal\",{\"sourceInterval\":[324,327]},\"|\"]],[\"app\",{\"sourceInterval\":[329,362]},\"NonemptyListOf\",[[\"app\",{\"sourceInterval\":[344,356]},\"TopLevelTerm\",[]],[\"terminal\",{\"sourceInterval\":[358,361]},\"|\"]]]]],\"TopLevelTerm_inline\":[\"define\",{\"sourceInterval\":[385,408]},null,[],[\"seq\",{\"sourceInterval\":[385,397]},[\"app\",{\"sourceInterval\":[385,388]},\"Seq\",[]],[\"app\",{\"sourceInterval\":[389,397]},\"caseName\",[]]]],\"TopLevelTerm\":[\"define\",{\"sourceInterval\":[366,418]},null,[],[\"alt\",{\"sourceInterval\":[385,418]},[\"app\",{\"sourceInterval\":[385,397]},\"TopLevelTerm_inline\",[]],[\"app\",{\"sourceInterval\":[415,418]},\"Seq\",[]]]],\"OverrideRuleBody\":[\"define\",{\"sourceInterval\":[422,491]},null,[],[\"seq\",{\"sourceInterval\":[445,491]},[\"opt\",{\"sourceInterval\":[445,449]},[\"terminal\",{\"sourceInterval\":[445,448]},\"|\"]],[\"app\",{\"sourceInterval\":[450,491]},\"NonemptyListOf\",[[\"app\",{\"sourceInterval\":[465,485]},\"OverrideTopLevelTerm\",[]],[\"terminal\",{\"sourceInterval\":[487,490]},\"|\"]]]]],\"OverrideTopLevelTerm_superSplice\":[\"define\",{\"sourceInterval\":[522,543]},null,[],[\"terminal\",{\"sourceInterval\":[522,527]},\"...\"]],\"OverrideTopLevelTerm\":[\"define\",{\"sourceInterval\":[495,562]},null,[],[\"alt\",{\"sourceInterval\":[522,562]},[\"app\",{\"sourceInterval\":[522,527]},\"OverrideTopLevelTerm_superSplice\",[]],[\"app\",{\"sourceInterval\":[550,562]},\"TopLevelTerm\",[]]]],\"Formals\":[\"define\",{\"sourceInterval\":[566,606]},null,[],[\"seq\",{\"sourceInterval\":[580,606]},[\"terminal\",{\"sourceInterval\":[580,583]},\"<\"],[\"app\",{\"sourceInterval\":[584,602]},\"ListOf\",[[\"app\",{\"sourceInterval\":[591,596]},\"ident\",[]],[\"terminal\",{\"sourceInterval\":[598,601]},\",\"]]],[\"terminal\",{\"sourceInterval\":[603,606]},\">\"]]],\"Params\":[\"define\",{\"sourceInterval\":[610,647]},null,[],[\"seq\",{\"sourceInterval\":[623,647]},[\"terminal\",{\"sourceInterval\":[623,626]},\"<\"],[\"app\",{\"sourceInterval\":[627,643]},\"ListOf\",[[\"app\",{\"sourceInterval\":[634,637]},\"Seq\",[]],[\"terminal\",{\"sourceInterval\":[639,642]},\",\"]]],[\"terminal\",{\"sourceInterval\":[644,647]},\">\"]]],\"Alt\":[\"define\",{\"sourceInterval\":[651,685]},null,[],[\"app\",{\"sourceInterval\":[661,685]},\"NonemptyListOf\",[[\"app\",{\"sourceInterval\":[676,679]},\"Seq\",[]],[\"terminal\",{\"sourceInterval\":[681,684]},\"|\"]]]],\"Seq\":[\"define\",{\"sourceInterval\":[689,704]},null,[],[\"star\",{\"sourceInterval\":[699,704]},[\"app\",{\"sourceInterval\":[699,703]},\"Iter\",[]]]],\"Iter_star\":[\"define\",{\"sourceInterval\":[719,736]},null,[],[\"seq\",{\"sourceInterval\":[719,727]},[\"app\",{\"sourceInterval\":[719,723]},\"Pred\",[]],[\"terminal\",{\"sourceInterval\":[724,727]},\"*\"]]],\"Iter_plus\":[\"define\",{\"sourceInterval\":[743,760]},null,[],[\"seq\",{\"sourceInterval\":[743,751]},[\"app\",{\"sourceInterval\":[743,747]},\"Pred\",[]],[\"terminal\",{\"sourceInterval\":[748,751]},\"+\"]]],\"Iter_opt\":[\"define\",{\"sourceInterval\":[767,783]},null,[],[\"seq\",{\"sourceInterval\":[767,775]},[\"app\",{\"sourceInterval\":[767,771]},\"Pred\",[]],[\"terminal\",{\"sourceInterval\":[772,775]},\"?\"]]],\"Iter\":[\"define\",{\"sourceInterval\":[708,794]},null,[],[\"alt\",{\"sourceInterval\":[719,794]},[\"app\",{\"sourceInterval\":[719,727]},\"Iter_star\",[]],[\"app\",{\"sourceInterval\":[743,751]},\"Iter_plus\",[]],[\"app\",{\"sourceInterval\":[767,775]},\"Iter_opt\",[]],[\"app\",{\"sourceInterval\":[790,794]},\"Pred\",[]]]],\"Pred_not\":[\"define\",{\"sourceInterval\":[809,824]},null,[],[\"seq\",{\"sourceInterval\":[809,816]},[\"terminal\",{\"sourceInterval\":[809,812]},\"~\"],[\"app\",{\"sourceInterval\":[813,816]},\"Lex\",[]]]],\"Pred_lookahead\":[\"define\",{\"sourceInterval\":[831,852]},null,[],[\"seq\",{\"sourceInterval\":[831,838]},[\"terminal\",{\"sourceInterval\":[831,834]},\"&\"],[\"app\",{\"sourceInterval\":[835,838]},\"Lex\",[]]]],\"Pred\":[\"define\",{\"sourceInterval\":[798,862]},null,[],[\"alt\",{\"sourceInterval\":[809,862]},[\"app\",{\"sourceInterval\":[809,816]},\"Pred_not\",[]],[\"app\",{\"sourceInterval\":[831,838]},\"Pred_lookahead\",[]],[\"app\",{\"sourceInterval\":[859,862]},\"Lex\",[]]]],\"Lex_lex\":[\"define\",{\"sourceInterval\":[876,892]},null,[],[\"seq\",{\"sourceInterval\":[876,884]},[\"terminal\",{\"sourceInterval\":[876,879]},\"#\"],[\"app\",{\"sourceInterval\":[880,884]},\"Base\",[]]]],\"Lex\":[\"define\",{\"sourceInterval\":[866,903]},null,[],[\"alt\",{\"sourceInterval\":[876,903]},[\"app\",{\"sourceInterval\":[876,884]},\"Lex_lex\",[]],[\"app\",{\"sourceInterval\":[899,903]},\"Base\",[]]]],\"Base_application\":[\"define\",{\"sourceInterval\":[918,979]},null,[],[\"seq\",{\"sourceInterval\":[918,963]},[\"app\",{\"sourceInterval\":[918,923]},\"ident\",[]],[\"opt\",{\"sourceInterval\":[924,931]},[\"app\",{\"sourceInterval\":[924,930]},\"Params\",[]]],[\"not\",{\"sourceInterval\":[932,963]},[\"alt\",{\"sourceInterval\":[934,962]},[\"seq\",{\"sourceInterval\":[934,948]},[\"opt\",{\"sourceInterval\":[934,944]},[\"app\",{\"sourceInterval\":[934,943]},\"ruleDescr\",[]]],[\"terminal\",{\"sourceInterval\":[945,948]},\"=\"]],[\"terminal\",{\"sourceInterval\":[951,955]},\":=\"],[\"terminal\",{\"sourceInterval\":[958,962]},\"+=\"]]]]],\"Base_range\":[\"define\",{\"sourceInterval\":[986,1041]},null,[],[\"seq\",{\"sourceInterval\":[986,1022]},[\"app\",{\"sourceInterval\":[986,1001]},\"oneCharTerminal\",[]],[\"terminal\",{\"sourceInterval\":[1002,1006]},\"..\"],[\"app\",{\"sourceInterval\":[1007,1022]},\"oneCharTerminal\",[]]]],\"Base_terminal\":[\"define\",{\"sourceInterval\":[1048,1106]},null,[],[\"app\",{\"sourceInterval\":[1048,1056]},\"terminal\",[]]],\"Base_paren\":[\"define\",{\"sourceInterval\":[1113,1168]},null,[],[\"seq\",{\"sourceInterval\":[1113,1124]},[\"terminal\",{\"sourceInterval\":[1113,1116]},\"(\"],[\"app\",{\"sourceInterval\":[1117,1120]},\"Alt\",[]],[\"terminal\",{\"sourceInterval\":[1121,1124]},\")\"]]],\"Base\":[\"define\",{\"sourceInterval\":[907,1168]},null,[],[\"alt\",{\"sourceInterval\":[918,1168]},[\"app\",{\"sourceInterval\":[918,963]},\"Base_application\",[]],[\"app\",{\"sourceInterval\":[986,1022]},\"Base_range\",[]],[\"app\",{\"sourceInterval\":[1048,1056]},\"Base_terminal\",[]],[\"app\",{\"sourceInterval\":[1113,1124]},\"Base_paren\",[]]]],\"ruleDescr\":[\"define\",{\"sourceInterval\":[1172,1231]},\"a rule description\",[],[\"seq\",{\"sourceInterval\":[1210,1231]},[\"terminal\",{\"sourceInterval\":[1210,1213]},\"(\"],[\"app\",{\"sourceInterval\":[1214,1227]},\"ruleDescrText\",[]],[\"terminal\",{\"sourceInterval\":[1228,1231]},\")\"]]],\"ruleDescrText\":[\"define\",{\"sourceInterval\":[1235,1266]},null,[],[\"star\",{\"sourceInterval\":[1255,1266]},[\"seq\",{\"sourceInterval\":[1256,1264]},[\"not\",{\"sourceInterval\":[1256,1260]},[\"terminal\",{\"sourceInterval\":[1257,1260]},\")\"]],[\"app\",{\"sourceInterval\":[1261,1264]},\"any\",[]]]]],\"caseName\":[\"define\",{\"sourceInterval\":[1270,1338]},null,[],[\"seq\",{\"sourceInterval\":[1285,1338]},[\"terminal\",{\"sourceInterval\":[1285,1289]},\"--\"],[\"star\",{\"sourceInterval\":[1290,1304]},[\"seq\",{\"sourceInterval\":[1291,1302]},[\"not\",{\"sourceInterval\":[1291,1296]},[\"terminal\",{\"sourceInterval\":[1292,1296]},\"\\n\"]],[\"app\",{\"sourceInterval\":[1297,1302]},\"space\",[]]]],[\"app\",{\"sourceInterval\":[1305,1309]},\"name\",[]],[\"star\",{\"sourceInterval\":[1310,1324]},[\"seq\",{\"sourceInterval\":[1311,1322]},[\"not\",{\"sourceInterval\":[1311,1316]},[\"terminal\",{\"sourceInterval\":[1312,1316]},\"\\n\"]],[\"app\",{\"sourceInterval\":[1317,1322]},\"space\",[]]]],[\"alt\",{\"sourceInterval\":[1326,1337]},[\"terminal\",{\"sourceInterval\":[1326,1330]},\"\\n\"],[\"lookahead\",{\"sourceInterval\":[1333,1337]},[\"terminal\",{\"sourceInterval\":[1334,1337]},\"}\"]]]]],\"name\":[\"define\",{\"sourceInterval\":[1342,1382]},\"a name\",[],[\"seq\",{\"sourceInterval\":[1363,1382]},[\"app\",{\"sourceInterval\":[1363,1372]},\"nameFirst\",[]],[\"star\",{\"sourceInterval\":[1373,1382]},[\"app\",{\"sourceInterval\":[1373,1381]},\"nameRest\",[]]]]],\"nameFirst\":[\"define\",{\"sourceInterval\":[1386,1418]},null,[],[\"alt\",{\"sourceInterval\":[1402,1418]},[\"terminal\",{\"sourceInterval\":[1402,1405]},\"_\"],[\"app\",{\"sourceInterval\":[1412,1418]},\"letter\",[]]]],\"nameRest\":[\"define\",{\"sourceInterval\":[1422,1452]},null,[],[\"alt\",{\"sourceInterval\":[1437,1452]},[\"terminal\",{\"sourceInterval\":[1437,1440]},\"_\"],[\"app\",{\"sourceInterval\":[1447,1452]},\"alnum\",[]]]],\"ident\":[\"define\",{\"sourceInterval\":[1456,1489]},\"an identifier\",[],[\"app\",{\"sourceInterval\":[1485,1489]},\"name\",[]]],\"terminal\":[\"define\",{\"sourceInterval\":[1493,1531]},null,[],[\"seq\",{\"sourceInterval\":[1508,1531]},[\"terminal\",{\"sourceInterval\":[1508,1512]},\"\\\"\"],[\"star\",{\"sourceInterval\":[1513,1526]},[\"app\",{\"sourceInterval\":[1513,1525]},\"terminalChar\",[]]],[\"terminal\",{\"sourceInterval\":[1527,1531]},\"\\\"\"]]],\"oneCharTerminal\":[\"define\",{\"sourceInterval\":[1535,1579]},null,[],[\"seq\",{\"sourceInterval\":[1557,1579]},[\"terminal\",{\"sourceInterval\":[1557,1561]},\"\\\"\"],[\"app\",{\"sourceInterval\":[1562,1574]},\"terminalChar\",[]],[\"terminal\",{\"sourceInterval\":[1575,1579]},\"\\\"\"]]],\"terminalChar\":[\"define\",{\"sourceInterval\":[1583,1660]},null,[],[\"alt\",{\"sourceInterval\":[1602,1660]},[\"app\",{\"sourceInterval\":[1602,1612]},\"escapeChar\",[]],[\"seq\",{\"sourceInterval\":[1621,1660]},[\"not\",{\"sourceInterval\":[1621,1626]},[\"terminal\",{\"sourceInterval\":[1622,1626]},\"\\\\\"]],[\"not\",{\"sourceInterval\":[1627,1632]},[\"terminal\",{\"sourceInterval\":[1628,1632]},\"\\\"\"]],[\"not\",{\"sourceInterval\":[1633,1638]},[\"terminal\",{\"sourceInterval\":[1634,1638]},\"\\n\"]],[\"range\",{\"sourceInterval\":[1639,1660]},\"\\u0000\",\"􏿿\"]]]],\"escapeChar_backslash\":[\"define\",{\"sourceInterval\":[1703,1758]},null,[],[\"terminal\",{\"sourceInterval\":[1703,1709]},\"\\\\\\\\\"]],\"escapeChar_doubleQuote\":[\"define\",{\"sourceInterval\":[1765,1822]},null,[],[\"terminal\",{\"sourceInterval\":[1765,1771]},\"\\\\\\\"\"]],\"escapeChar_singleQuote\":[\"define\",{\"sourceInterval\":[1829,1886]},null,[],[\"terminal\",{\"sourceInterval\":[1829,1835]},\"\\\\'\"]],\"escapeChar_backspace\":[\"define\",{\"sourceInterval\":[1893,1948]},null,[],[\"terminal\",{\"sourceInterval\":[1893,1898]},\"\\\\b\"]],\"escapeChar_lineFeed\":[\"define\",{\"sourceInterval\":[1955,2009]},null,[],[\"terminal\",{\"sourceInterval\":[1955,1960]},\"\\\\n\"]],\"escapeChar_carriageReturn\":[\"define\",{\"sourceInterval\":[2016,2076]},null,[],[\"terminal\",{\"sourceInterval\":[2016,2021]},\"\\\\r\"]],\"escapeChar_tab\":[\"define\",{\"sourceInterval\":[2083,2132]},null,[],[\"terminal\",{\"sourceInterval\":[2083,2088]},\"\\\\t\"]],\"escapeChar_unicodeCodePoint\":[\"define\",{\"sourceInterval\":[2139,2243]},null,[],[\"seq\",{\"sourceInterval\":[2139,2221]},[\"terminal\",{\"sourceInterval\":[2139,2145]},\"\\\\u{\"],[\"app\",{\"sourceInterval\":[2146,2154]},\"hexDigit\",[]],[\"opt\",{\"sourceInterval\":[2155,2164]},[\"app\",{\"sourceInterval\":[2155,2163]},\"hexDigit\",[]]],[\"opt\",{\"sourceInterval\":[2165,2174]},[\"app\",{\"sourceInterval\":[2165,2173]},\"hexDigit\",[]]],[\"opt\",{\"sourceInterval\":[2188,2197]},[\"app\",{\"sourceInterval\":[2188,2196]},\"hexDigit\",[]]],[\"opt\",{\"sourceInterval\":[2198,2207]},[\"app\",{\"sourceInterval\":[2198,2206]},\"hexDigit\",[]]],[\"opt\",{\"sourceInterval\":[2208,2217]},[\"app\",{\"sourceInterval\":[2208,2216]},\"hexDigit\",[]]],[\"terminal\",{\"sourceInterval\":[2218,2221]},\"}\"]]],\"escapeChar_unicodeEscape\":[\"define\",{\"sourceInterval\":[2250,2309]},null,[],[\"seq\",{\"sourceInterval\":[2250,2291]},[\"terminal\",{\"sourceInterval\":[2250,2255]},\"\\\\u\"],[\"app\",{\"sourceInterval\":[2256,2264]},\"hexDigit\",[]],[\"app\",{\"sourceInterval\":[2265,2273]},\"hexDigit\",[]],[\"app\",{\"sourceInterval\":[2274,2282]},\"hexDigit\",[]],[\"app\",{\"sourceInterval\":[2283,2291]},\"hexDigit\",[]]]],\"escapeChar_hexEscape\":[\"define\",{\"sourceInterval\":[2316,2371]},null,[],[\"seq\",{\"sourceInterval\":[2316,2339]},[\"terminal\",{\"sourceInterval\":[2316,2321]},\"\\\\x\"],[\"app\",{\"sourceInterval\":[2322,2330]},\"hexDigit\",[]],[\"app\",{\"sourceInterval\":[2331,2339]},\"hexDigit\",[]]]],\"escapeChar\":[\"define\",{\"sourceInterval\":[1664,2371]},\"an escape sequence\",[],[\"alt\",{\"sourceInterval\":[1703,2371]},[\"app\",{\"sourceInterval\":[1703,1709]},\"escapeChar_backslash\",[]],[\"app\",{\"sourceInterval\":[1765,1771]},\"escapeChar_doubleQuote\",[]],[\"app\",{\"sourceInterval\":[1829,1835]},\"escapeChar_singleQuote\",[]],[\"app\",{\"sourceInterval\":[1893,1898]},\"escapeChar_backspace\",[]],[\"app\",{\"sourceInterval\":[1955,1960]},\"escapeChar_lineFeed\",[]],[\"app\",{\"sourceInterval\":[2016,2021]},\"escapeChar_carriageReturn\",[]],[\"app\",{\"sourceInterval\":[2083,2088]},\"escapeChar_tab\",[]],[\"app\",{\"sourceInterval\":[2139,2221]},\"escapeChar_unicodeCodePoint\",[]],[\"app\",{\"sourceInterval\":[2250,2291]},\"escapeChar_unicodeEscape\",[]],[\"app\",{\"sourceInterval\":[2316,2339]},\"escapeChar_hexEscape\",[]]]],\"space\":[\"extend\",{\"sourceInterval\":[2375,2394]},null,[],[\"app\",{\"sourceInterval\":[2387,2394]},\"comment\",[]]],\"comment_singleLine\":[\"define\",{\"sourceInterval\":[2412,2458]},null,[],[\"seq\",{\"sourceInterval\":[2412,2443]},[\"terminal\",{\"sourceInterval\":[2412,2416]},\"//\"],[\"star\",{\"sourceInterval\":[2417,2429]},[\"seq\",{\"sourceInterval\":[2418,2427]},[\"not\",{\"sourceInterval\":[2418,2423]},[\"terminal\",{\"sourceInterval\":[2419,2423]},\"\\n\"]],[\"app\",{\"sourceInterval\":[2424,2427]},\"any\",[]]]],[\"lookahead\",{\"sourceInterval\":[2430,2443]},[\"alt\",{\"sourceInterval\":[2432,2442]},[\"terminal\",{\"sourceInterval\":[2432,2436]},\"\\n\"],[\"app\",{\"sourceInterval\":[2439,2442]},\"end\",[]]]]]],\"comment_multiLine\":[\"define\",{\"sourceInterval\":[2465,2501]},null,[],[\"seq\",{\"sourceInterval\":[2465,2487]},[\"terminal\",{\"sourceInterval\":[2465,2469]},\"/*\"],[\"star\",{\"sourceInterval\":[2470,2482]},[\"seq\",{\"sourceInterval\":[2471,2480]},[\"not\",{\"sourceInterval\":[2471,2476]},[\"terminal\",{\"sourceInterval\":[2472,2476]},\"*/\"]],[\"app\",{\"sourceInterval\":[2477,2480]},\"any\",[]]]],[\"terminal\",{\"sourceInterval\":[2483,2487]},\"*/\"]]],\"comment\":[\"define\",{\"sourceInterval\":[2398,2501]},null,[],[\"alt\",{\"sourceInterval\":[2412,2501]},[\"app\",{\"sourceInterval\":[2412,2443]},\"comment_singleLine\",[]],[\"app\",{\"sourceInterval\":[2465,2487]},\"comment_multiLine\",[]]]],\"tokens\":[\"define\",{\"sourceInterval\":[2505,2520]},null,[],[\"star\",{\"sourceInterval\":[2514,2520]},[\"app\",{\"sourceInterval\":[2514,2519]},\"token\",[]]]],\"token\":[\"define\",{\"sourceInterval\":[2524,2600]},null,[],[\"alt\",{\"sourceInterval\":[2532,2600]},[\"app\",{\"sourceInterval\":[2532,2540]},\"caseName\",[]],[\"app\",{\"sourceInterval\":[2543,2550]},\"comment\",[]],[\"app\",{\"sourceInterval\":[2553,2558]},\"ident\",[]],[\"app\",{\"sourceInterval\":[2561,2569]},\"operator\",[]],[\"app\",{\"sourceInterval\":[2572,2583]},\"punctuation\",[]],[\"app\",{\"sourceInterval\":[2586,2594]},\"terminal\",[]],[\"app\",{\"sourceInterval\":[2597,2600]},\"any\",[]]]],\"operator\":[\"define\",{\"sourceInterval\":[2604,2669]},null,[],[\"alt\",{\"sourceInterval\":[2615,2669]},[\"terminal\",{\"sourceInterval\":[2615,2619]},\"<:\"],[\"terminal\",{\"sourceInterval\":[2622,2625]},\"=\"],[\"terminal\",{\"sourceInterval\":[2628,2632]},\":=\"],[\"terminal\",{\"sourceInterval\":[2635,2639]},\"+=\"],[\"terminal\",{\"sourceInterval\":[2642,2645]},\"*\"],[\"terminal\",{\"sourceInterval\":[2648,2651]},\"+\"],[\"terminal\",{\"sourceInterval\":[2654,2657]},\"?\"],[\"terminal\",{\"sourceInterval\":[2660,2663]},\"~\"],[\"terminal\",{\"sourceInterval\":[2666,2669]},\"&\"]]],\"punctuation\":[\"define\",{\"sourceInterval\":[2673,2709]},null,[],[\"alt\",{\"sourceInterval\":[2687,2709]},[\"terminal\",{\"sourceInterval\":[2687,2690]},\"<\"],[\"terminal\",{\"sourceInterval\":[2693,2696]},\">\"],[\"terminal\",{\"sourceInterval\":[2699,2702]},\",\"],[\"terminal\",{\"sourceInterval\":[2705,2709]},\"--\"]]]}]);\n\nconst superSplicePlaceholder = Object.create(PExpr.prototype);\n\nfunction namespaceHas(ns, name) {\n  // Look for an enumerable property, anywhere in the prototype chain.\n  for (const prop in ns) {\n    if (prop === name) return true;\n  }\n  return false;\n}\n\n// Returns a Grammar instance (i.e., an object with a `match` method) for\n// `tree`, which is the concrete syntax tree of a user-written grammar.\n// The grammar will be assigned into `namespace` under the name of the grammar\n// as specified in the source.\nfunction buildGrammar(match, namespace, optOhmGrammarForTesting) {\n  const builder = new Builder();\n  let decl;\n  let currentRuleName;\n  let currentRuleFormals;\n  let overriding = false;\n  const metaGrammar = optOhmGrammarForTesting || ohmGrammar;\n\n  // A visitor that produces a Grammar instance from the CST.\n  const helpers = metaGrammar.createSemantics().addOperation('visit', {\n    Grammars(grammarIter) {\n      return grammarIter.children.map(c => c.visit());\n    },\n    Grammar(id, s, _open, rules, _close) {\n      const grammarName = id.visit();\n      decl = builder.newGrammar(grammarName);\n      s.child(0) && s.child(0).visit();\n      rules.children.map(c => c.visit());\n      const g = decl.build();\n      g.source = this.source.trimmed();\n      if (namespaceHas(namespace, grammarName)) {\n        throw duplicateGrammarDeclaration(g);\n      }\n      namespace[grammarName] = g;\n      return g;\n    },\n\n    SuperGrammar(_, n) {\n      const superGrammarName = n.visit();\n      if (superGrammarName === 'null') {\n        decl.withSuperGrammar(null);\n      } else {\n        if (!namespace || !namespaceHas(namespace, superGrammarName)) {\n          throw undeclaredGrammar(superGrammarName, namespace, n.source);\n        }\n        decl.withSuperGrammar(namespace[superGrammarName]);\n      }\n    },\n\n    Rule_define(n, fs, d, _, b) {\n      currentRuleName = n.visit();\n      currentRuleFormals = fs.children.map(c => c.visit())[0] || [];\n      // If there is no default start rule yet, set it now. This must be done before visiting\n      // the body, because it might contain an inline rule definition.\n      if (!decl.defaultStartRule && decl.ensureSuperGrammar() !== Grammar.ProtoBuiltInRules) {\n        decl.withDefaultStartRule(currentRuleName);\n      }\n      const body = b.visit();\n      const description = d.children.map(c => c.visit())[0];\n      const source = this.source.trimmed();\n      return decl.define(currentRuleName, currentRuleFormals, body, description, source);\n    },\n    Rule_override(n, fs, _, b) {\n      currentRuleName = n.visit();\n      currentRuleFormals = fs.children.map(c => c.visit())[0] || [];\n\n      const source = this.source.trimmed();\n      decl.ensureSuperGrammarRuleForOverriding(currentRuleName, source);\n\n      overriding = true;\n      const body = b.visit();\n      overriding = false;\n      return decl.override(currentRuleName, currentRuleFormals, body, null, source);\n    },\n    Rule_extend(n, fs, _, b) {\n      currentRuleName = n.visit();\n      currentRuleFormals = fs.children.map(c => c.visit())[0] || [];\n      const body = b.visit();\n      const source = this.source.trimmed();\n      return decl.extend(currentRuleName, currentRuleFormals, body, null, source);\n    },\n    RuleBody(_, terms) {\n      return builder.alt(...terms.visit()).withSource(this.source);\n    },\n    OverrideRuleBody(_, terms) {\n      const args = terms.visit();\n\n      // Check if the super-splice operator (`...`) appears in the terms.\n      const expansionPos = args.indexOf(superSplicePlaceholder);\n      if (expansionPos >= 0) {\n        const beforeTerms = args.slice(0, expansionPos);\n        const afterTerms = args.slice(expansionPos + 1);\n\n        // Ensure it appears no more than once.\n        afterTerms.forEach(t => {\n          if (t === superSplicePlaceholder) throw multipleSuperSplices(t);\n        });\n\n        return new Splice(\n            decl.superGrammar,\n            currentRuleName,\n            beforeTerms,\n            afterTerms,\n        ).withSource(this.source);\n      } else {\n        return builder.alt(...args).withSource(this.source);\n      }\n    },\n    Formals(opointy, fs, cpointy) {\n      return fs.visit();\n    },\n\n    Params(opointy, ps, cpointy) {\n      return ps.visit();\n    },\n\n    Alt(seqs) {\n      return builder.alt(...seqs.visit()).withSource(this.source);\n    },\n\n    TopLevelTerm_inline(b, n) {\n      const inlineRuleName = currentRuleName + '_' + n.visit();\n      const body = b.visit();\n      const source = this.source.trimmed();\n      const isNewRuleDeclaration = !(\n        decl.superGrammar && decl.superGrammar.rules[inlineRuleName]\n      );\n      if (overriding && !isNewRuleDeclaration) {\n        decl.override(inlineRuleName, currentRuleFormals, body, null, source);\n      } else {\n        decl.define(inlineRuleName, currentRuleFormals, body, null, source);\n      }\n      const params = currentRuleFormals.map(formal => builder.app(formal));\n      return builder.app(inlineRuleName, params).withSource(body.source);\n    },\n    OverrideTopLevelTerm_superSplice(_) {\n      return superSplicePlaceholder;\n    },\n\n    Seq(expr) {\n      return builder.seq(...expr.children.map(c => c.visit())).withSource(this.source);\n    },\n\n    Iter_star(x, _) {\n      return builder.star(x.visit()).withSource(this.source);\n    },\n    Iter_plus(x, _) {\n      return builder.plus(x.visit()).withSource(this.source);\n    },\n    Iter_opt(x, _) {\n      return builder.opt(x.visit()).withSource(this.source);\n    },\n\n    Pred_not(_, x) {\n      return builder.not(x.visit()).withSource(this.source);\n    },\n    Pred_lookahead(_, x) {\n      return builder.lookahead(x.visit()).withSource(this.source);\n    },\n\n    Lex_lex(_, x) {\n      return builder.lex(x.visit()).withSource(this.source);\n    },\n\n    Base_application(rule, ps) {\n      const params = ps.children.map(c => c.visit())[0] || [];\n      return builder.app(rule.visit(), params).withSource(this.source);\n    },\n    Base_range(from, _, to) {\n      return builder.range(from.visit(), to.visit()).withSource(this.source);\n    },\n    Base_terminal(expr) {\n      return builder.terminal(expr.visit()).withSource(this.source);\n    },\n    Base_paren(open, x, close) {\n      return x.visit();\n    },\n\n    ruleDescr(open, t, close) {\n      return t.visit();\n    },\n    ruleDescrText(_) {\n      return this.sourceString.trim();\n    },\n\n    caseName(_, space1, n, space2, end) {\n      return n.visit();\n    },\n\n    name(first, rest) {\n      return this.sourceString;\n    },\n    nameFirst(expr) {},\n    nameRest(expr) {},\n\n    terminal(open, cs, close) {\n      return cs.children.map(c => c.visit()).join('');\n    },\n\n    oneCharTerminal(open, c, close) {\n      return c.visit();\n    },\n\n    escapeChar(c) {\n      try {\n        return unescapeCodePoint(this.sourceString);\n      } catch (err) {\n        if (err instanceof RangeError && err.message.startsWith('Invalid code point ')) {\n          throw invalidCodePoint(c);\n        }\n        throw err; // Rethrow\n      }\n    },\n\n    NonemptyListOf(x, _, xs) {\n      return [x.visit()].concat(xs.children.map(c => c.visit()));\n    },\n    EmptyListOf() {\n      return [];\n    },\n\n    _terminal() {\n      return this.sourceString;\n    },\n  });\n  return helpers(match).visit();\n}\n\nvar operationsAndAttributesGrammar = makeRecipe([\"grammar\",{\"source\":\"OperationsAndAttributes {\\n\\n  AttributeSignature =\\n    name\\n\\n  OperationSignature =\\n    name Formals?\\n\\n  Formals\\n    = \\\"(\\\" ListOf<name, \\\",\\\"> \\\")\\\"\\n\\n  name  (a name)\\n    = nameFirst nameRest*\\n\\n  nameFirst\\n    = \\\"_\\\"\\n    | letter\\n\\n  nameRest\\n    = \\\"_\\\"\\n    | alnum\\n\\n}\"},\"OperationsAndAttributes\",null,\"AttributeSignature\",{\"AttributeSignature\":[\"define\",{\"sourceInterval\":[29,58]},null,[],[\"app\",{\"sourceInterval\":[54,58]},\"name\",[]]],\"OperationSignature\":[\"define\",{\"sourceInterval\":[62,100]},null,[],[\"seq\",{\"sourceInterval\":[87,100]},[\"app\",{\"sourceInterval\":[87,91]},\"name\",[]],[\"opt\",{\"sourceInterval\":[92,100]},[\"app\",{\"sourceInterval\":[92,99]},\"Formals\",[]]]]],\"Formals\":[\"define\",{\"sourceInterval\":[104,143]},null,[],[\"seq\",{\"sourceInterval\":[118,143]},[\"terminal\",{\"sourceInterval\":[118,121]},\"(\"],[\"app\",{\"sourceInterval\":[122,139]},\"ListOf\",[[\"app\",{\"sourceInterval\":[129,133]},\"name\",[]],[\"terminal\",{\"sourceInterval\":[135,138]},\",\"]]],[\"terminal\",{\"sourceInterval\":[140,143]},\")\"]]],\"name\":[\"define\",{\"sourceInterval\":[147,187]},\"a name\",[],[\"seq\",{\"sourceInterval\":[168,187]},[\"app\",{\"sourceInterval\":[168,177]},\"nameFirst\",[]],[\"star\",{\"sourceInterval\":[178,187]},[\"app\",{\"sourceInterval\":[178,186]},\"nameRest\",[]]]]],\"nameFirst\":[\"define\",{\"sourceInterval\":[191,223]},null,[],[\"alt\",{\"sourceInterval\":[207,223]},[\"terminal\",{\"sourceInterval\":[207,210]},\"_\"],[\"app\",{\"sourceInterval\":[217,223]},\"letter\",[]]]],\"nameRest\":[\"define\",{\"sourceInterval\":[227,257]},null,[],[\"alt\",{\"sourceInterval\":[242,257]},[\"terminal\",{\"sourceInterval\":[242,245]},\"_\"],[\"app\",{\"sourceInterval\":[252,257]},\"alnum\",[]]]]}]);\n\ninitBuiltInSemantics(Grammar.BuiltInRules);\ninitPrototypeParser(operationsAndAttributesGrammar); // requires BuiltInSemantics\n\nfunction initBuiltInSemantics(builtInRules) {\n  const actions = {\n    empty() {\n      return this.iteration();\n    },\n    nonEmpty(first, _, rest) {\n      return this.iteration([first].concat(rest.children));\n    },\n  };\n\n  Semantics.BuiltInSemantics = Semantics.createSemantics(builtInRules, null).addOperation(\n      'asIteration',\n      {\n        emptyListOf: actions.empty,\n        nonemptyListOf: actions.nonEmpty,\n        EmptyListOf: actions.empty,\n        NonemptyListOf: actions.nonEmpty,\n      },\n  );\n}\n\nfunction initPrototypeParser(grammar) {\n  Semantics.prototypeGrammarSemantics = grammar.createSemantics().addOperation('parse', {\n    AttributeSignature(name) {\n      return {\n        name: name.parse(),\n        formals: [],\n      };\n    },\n    OperationSignature(name, optFormals) {\n      return {\n        name: name.parse(),\n        formals: optFormals.children.map(c => c.parse())[0] || [],\n      };\n    },\n    Formals(oparen, fs, cparen) {\n      return fs.asIteration().children.map(c => c.parse());\n    },\n    name(first, rest) {\n      return this.sourceString;\n    },\n  });\n  Semantics.prototypeGrammar = grammar;\n}\n\nfunction findIndentation(input) {\n  let pos = 0;\n  const stack = [0];\n  const topOfStack = () => stack[stack.length - 1];\n\n  const result = {};\n\n  const regex = /( *).*(?:$|\\r?\\n|\\r)/g;\n  let match;\n  while ((match = regex.exec(input)) != null) {\n    const [line, indent] = match;\n\n    // The last match will always have length 0. In every other case, some\n    // characters will be matched (possibly only the end of line chars).\n    if (line.length === 0) break;\n\n    const indentSize = indent.length;\n    const prevSize = topOfStack();\n\n    const indentPos = pos + indentSize;\n\n    if (indentSize > prevSize) {\n      // Indent -- always only 1.\n      stack.push(indentSize);\n      result[indentPos] = 1;\n    } else if (indentSize < prevSize) {\n      // Dedent -- can be multiple levels.\n      const prevLength = stack.length;\n      while (topOfStack() !== indentSize) {\n        stack.pop();\n      }\n      result[indentPos] = -1 * (prevLength - stack.length);\n    }\n    pos += line.length;\n  }\n  // Ensure that there is a matching DEDENT for every remaining INDENT.\n  if (stack.length > 1) {\n    result[pos] = 1 - stack.length;\n  }\n  return result;\n}\n\nconst INDENT_DESCRIPTION = 'an indented block';\nconst DEDENT_DESCRIPTION = 'a dedent';\n\n// A sentinel value that is out of range for both charCodeAt() and codePointAt().\nconst INVALID_CODE_POINT = 0x10ffff + 1;\n\nclass InputStreamWithIndentation extends InputStream {\n  constructor(state) {\n    super(state.input);\n    this.state = state;\n  }\n\n  _indentationAt(pos) {\n    return this.state.userData[pos] || 0;\n  }\n\n  atEnd() {\n    return super.atEnd() && this._indentationAt(this.pos) === 0;\n  }\n\n  next() {\n    if (this._indentationAt(this.pos) !== 0) {\n      this.examinedLength = Math.max(this.examinedLength, this.pos);\n      return undefined;\n    }\n    return super.next();\n  }\n\n  nextCharCode() {\n    if (this._indentationAt(this.pos) !== 0) {\n      this.examinedLength = Math.max(this.examinedLength, this.pos);\n      return INVALID_CODE_POINT;\n    }\n    return super.nextCharCode();\n  }\n\n  nextCodePoint() {\n    if (this._indentationAt(this.pos) !== 0) {\n      this.examinedLength = Math.max(this.examinedLength, this.pos);\n      return INVALID_CODE_POINT;\n    }\n    return super.nextCodePoint();\n  }\n}\n\nclass Indentation extends PExpr {\n  constructor(isIndent = true) {\n    super();\n    this.isIndent = isIndent;\n  }\n\n  allowsSkippingPrecedingSpace() {\n    return true;\n  }\n\n  eval(state) {\n    const {inputStream} = state;\n    const pseudoTokens = state.userData;\n    state.doNotMemoize = true;\n\n    const origPos = inputStream.pos;\n\n    const sign = this.isIndent ? 1 : -1;\n    const count = (pseudoTokens[origPos] || 0) * sign;\n    if (count > 0) {\n      // Update the count to consume the pseudotoken.\n      state.userData = Object.create(pseudoTokens);\n      state.userData[origPos] -= sign;\n\n      state.pushBinding(new TerminalNode(0), origPos);\n      return true;\n    } else {\n      state.processFailure(origPos, this);\n      return false;\n    }\n  }\n\n  getArity() {\n    return 1;\n  }\n\n  _assertAllApplicationsAreValid(ruleName, grammar) {}\n\n  _isNullable(grammar, memo) {\n    return false;\n  }\n\n  assertChoicesHaveUniformArity(ruleName) {}\n\n  assertIteratedExprsAreNotNullable(grammar) {}\n\n  introduceParams(formals) {\n    return this;\n  }\n\n  substituteParams(actuals) {\n    return this;\n  }\n\n  toString() {\n    return this.isIndent ? 'indent' : 'dedent';\n  }\n\n  toDisplayString() {\n    return this.toString();\n  }\n\n  toFailure(grammar) {\n    const description = this.isIndent ? INDENT_DESCRIPTION : DEDENT_DESCRIPTION;\n    return new Failure(this, description, 'description');\n  }\n}\n\n// Create a new definition for `any` that can consume indent & dedent.\nconst applyIndent = new Apply('indent');\nconst applyDedent = new Apply('dedent');\nconst newAnyBody = new Splice(BuiltInRules, 'any', [applyIndent, applyDedent], []);\n\nconst IndentationSensitive = new Builder()\n    .newGrammar('IndentationSensitive')\n    .withSuperGrammar(BuiltInRules)\n    .define('indent', [], new Indentation(true), INDENT_DESCRIPTION, undefined, true)\n    .define('dedent', [], new Indentation(false), DEDENT_DESCRIPTION, undefined, true)\n    .extend('any', [], newAnyBody, 'any character', undefined)\n    .build();\n\nObject.assign(IndentationSensitive, {\n  _matchStateInitializer(state) {\n    state.userData = findIndentation(state.input);\n    state.inputStream = new InputStreamWithIndentation(state);\n  },\n  supportsIncrementalParsing: false,\n});\n\n// Generated by scripts/prebuild.js\nconst version = '17.1.0';\n\nGrammar.initApplicationParser(ohmGrammar, buildGrammar);\n\nconst isBuffer = obj =>\n  !!obj.constructor &&\n  typeof obj.constructor.isBuffer === 'function' &&\n  obj.constructor.isBuffer(obj);\n\nfunction compileAndLoad(source, namespace) {\n  const m = ohmGrammar.match(source, 'Grammars');\n  if (m.failed()) {\n    throw grammarSyntaxError(m);\n  }\n  return buildGrammar(m, namespace);\n}\n\nfunction grammar(source, optNamespace) {\n  const ns = grammars(source, optNamespace);\n\n  // Ensure that the source contained no more than one grammar definition.\n  const grammarNames = Object.keys(ns);\n  if (grammarNames.length === 0) {\n    throw new Error('Missing grammar definition');\n  } else if (grammarNames.length > 1) {\n    const secondGrammar = ns[grammarNames[1]];\n    const interval = secondGrammar.source;\n    throw new Error(\n        getLineAndColumnMessage(interval.sourceString, interval.startIdx) +\n        'Found more than one grammar definition -- use ohm.grammars() instead.',\n    );\n  }\n  return ns[grammarNames[0]]; // Return the one and only grammar.\n}\n\nfunction grammars(source, optNamespace) {\n  const ns = Object.create(optNamespace || {});\n  if (typeof source !== 'string') {\n    // For convenience, detect Node.js Buffer objects and automatically call toString().\n    if (isBuffer(source)) {\n      source = source.toString();\n    } else {\n      throw new TypeError(\n          'Expected string as first argument, got ' + unexpectedObjToString(source),\n      );\n    }\n  }\n  compileAndLoad(source, ns);\n  return ns;\n}\n\nexports.ExperimentalIndentationSensitive = IndentationSensitive;\nexports._buildGrammar = buildGrammar;\nexports.grammar = grammar;\nexports.grammars = grammars;\nexports.makeRecipe = makeRecipe;\nexports.ohmGrammar = ohmGrammar;\nexports.pexprs = pexprs;\nexports.version = version;\n//# sourceMappingURL=ohm.cjs.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(138);\n"],"sourceRoot":""}